/* LanguageTool, a natural language style checker 
 * Copyright (C) 2005 Daniel Naber (http://www.danielnaber.de)
 * 
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301
 * USA
 */

package org.languagetool.tokenizers.uk;

import junit.framework.TestCase;
import org.languagetool.TestTools;
import org.languagetool.language.Ukrainian;
import org.languagetool.tokenizers.SRXSentenceTokenizer;

public class UkrainianSRXSentenceTokenizerTest extends TestCase {

  private final SRXSentenceTokenizer stokenizer = new SRXSentenceTokenizer(new Ukrainian());

  public final void testTokenize() {
    testSplit("–¶–µ –ø—Ä–æ—?—Ç–µ —Ä–µ—á–µ–Ω–Ω—?.");
    testSplit("–í–æ–Ω–∏ –ø—Ä–∏—ó—Ö–∞–ª–∏ –≤ –ü–∞—Ä–∏–∂. ", "–?–ª–µ —Ç–∞–º —ó–º –≥–µ—Ç—å –Ω–µ —?–ø–æ–¥–æ–±–∞–ª–æ—?—?.");
    testSplit("–ü–∞–Ω–∫-—Ä–æ–∫ ‚Äî –Ω–∞–ø—Ä—?–º —É —Ä–æ–∫-–º—É–∑–∏—Ü—ñ, —â–æ –≤–∏–Ω–∏–∫ —É —?–µ—Ä–µ–¥–∏–Ω—ñ 1970-—Ö —Ä—Ä. —É –°–®–? —ñ –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω—ñ—ó.");
    testSplit("–†–∞–∑–æ–º —ñ–∑ –≤—Ç–µ—á–∞–º–∏, –≤–∂–µ —É XV —?—Ç. –ø–æ—á–∞—?—Ç—ñ—à–∞–ª–∏ –∑–±—Ä–æ–π–Ω—ñ –≤–∏—?—Ç—É–ø–∏ —?–µ–ª—?–Ω.");
    testSplit("–?–∞ –ø–æ—á–∞—Ç–æ–∫ 1994 —Ä. –¥–µ—Ä–∂–∞–≤–Ω–∏–π –±–æ—Ä–≥ –£–∫—Ä–∞—ó–Ω–∏ —?—Ç–∞–Ω–æ–≤–∏–≤ 4,8 –º–ª—Ä–¥. –¥–æ–ª.");
    testSplit("–ö–∏—ó–≤, –≤—É–ª. –°–∞–≥–∞–π–¥–∞—á–Ω–æ–≥–æ, –±—É–¥. 43, –∫–≤. 4.");
    testSplit("–?–∞—à–∞ –∑—É—?—Ç—Ä—ñ—á –∑ –?. –ú–∞—Ä—á—É–∫–æ–º —ñ –ì. –í. –¢—Ä—ñ—?–∫–æ—é –≤—ñ–¥–±—É–ª–∞—?—? –≤ –≥—Ä—É–¥–Ω—ñ –º–∏–Ω—É–ª–æ–≥–æ —Ä–æ–∫—É.");
    testSplit("–?–∞—à–∞ –∑—É—?—Ç—Ä—ñ—á –∑ –?.–ú–∞—Ä—á—É–∫–æ–º —ñ –ú.–í.–•–≤–∏–ª–µ—é –≤—ñ–¥–±—É–ª–∞—?—? –≤ –≥—Ä—É–¥–Ω—ñ –º–∏–Ω—É–ª–æ–≥–æ —Ä–æ–∫—É.");
    testSplit("–ö–æ–º–µ–Ω–¥–∞–Ω—Ç –ø—Ä–µ–ø–æ–¥–æ–±–Ω–∏–π –°.\u00A0–ú–æ–∫—ñ—Ç—ñ–º—ñ");
    testSplit("–ö–æ–º–µ–Ω–¥–∞–Ω—Ç –ø—Ä–µ–ø–æ–¥–æ–±–Ω–∏–π –°.\u00A0–°.\u00A0–ú–æ–∫—ñ—Ç—ñ–º—ñ 1.");
    testSplit("–ö–æ–º–µ–Ω–¥–∞–Ω—Ç –ø—Ä–µ–ø–æ–¥–æ–±–Ω–∏–π –°.\u00A0–°. –ú–æ–∫—ñ—Ç—ñ–º—ñ 2.");
    testSplit("–°–∫–ª–∞–¥: –∞–∫–∞–¥. –í–µ—Ä–Ω–∞–¥—?—å–∫–∏–π, –ø—Ä–æ—Ñ. –•–∞—Ä—á–µ–Ω–∫–æ, –¥–æ—Ü. –°–µ–º–µ–Ω—?–∫.");
    testSplit("–û–ø–µ—Ä–≥—Ä—É–ø–∞ –ø—Ä–∏—ó—Ö–∞–ª–∞ –≤ —?. –õ—ñ—?–æ–≤–µ.");
    testSplit("300 —Ä. –¥–æ –Ω. –µ.");
    testSplit("–ü—Ä–æ–ª—ñ—?–æ–∫ (—Ä–æ—?. –ø—Ä–æ–ª–µ—?–æ–∫) ‚Äî –º–∞–ª–µ–Ω—å–∫–∞ –∫–≤—ñ—Ç–∫–∞.");
    testSplit("–ö–≤—ñ—Ç–∫–∞ –¶—ñ—?–∏–∫ (–∞–Ω–≥–ª. Kvitka Cisyk —Ç–∞–∫–æ–∂ Kacey Cisyk –≤—ñ–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–≤ –ö.–°.); 4 –∫–≤—ñ—Ç–Ω—? 1953—Ä., –ö–≤—ñ–Ω–∑, –?—å—é-–ô–æ—Ä–∫ ‚Äî 29 –±–µ—Ä–µ–∑–Ω—? 1998 —Ä., –ú–∞–Ω–≥–µ—Ç—Ç–µ–Ω, –?—å—é-–ô–æ—Ä–∫) ‚Äî –∞–º–µ—Ä–∏–∫–∞–Ω—?—å–∫–∞ —?–ø—ñ–≤–∞—á–∫–∞ —É–∫—Ä–∞—ó–Ω—?—å–∫–æ–≥–æ –ø–æ—Ö–æ–¥–∂–µ–Ω–Ω—?.");
    testSplit("–î–æ –Ü–Ω—?—Ç–∏—Ç—É—Ç—É —ñ–º. –ì–ª—ñ—î—Ä–∞ –ø—ñ–¥'—ó–∂–¥–∂–∞—î —á–æ—Ä–Ω–µ –∞–≤—Ç–æ."); 
    testSplit("–î–æ —Ç–∞–±–æ—Ä—É ¬´–?—Ä—Ç–µ–∫¬ª.");
  }

  private void testSplit(final String... sentences) {
    TestTools.testSplit(sentences, stokenizer);
  }

}
