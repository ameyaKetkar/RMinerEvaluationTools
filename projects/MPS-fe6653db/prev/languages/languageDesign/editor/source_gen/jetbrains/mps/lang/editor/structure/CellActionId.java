package jetbrains.mps.lang.editor.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum CellActionId {
  RIGHT_TRANSFORM("RIGHT_TRANSFORM", "right_transform_action_id"),
  DELETE("DELETE", "delete_action_id"),
  INSERT("INSERT", "insert_action_id"),
  INSERT_BEFORE("INSERT_BEFORE", "insert_before_action_id"),
  BACKSPACE("BACKSPACE", "backspace_action_id"),
  DELETE_TO_WORD_END("DELETE_TO_WORD_END", "delete_to_word_end_action_id"),
  COPY("COPY", "copy_action_id"),
  CUT("CUT", "cut_action_id"),
  PASTE("PASTE", "paste_action_id"),
  PASTE_BEFORE("PASTE_BEFORE", "paste_before_action_id"),
  PASTE_AFTER("PASTE_AFTER", "paste_after_action_id"),
  LEFT("LEFT", "left_action_id"),
  RIGHT("RIGHT", "right_action_id"),
  UP("UP", "up_action_id"),
  DOWN("DOWN", "down_action_id"),
  NEXT("NEXT", "next_action_id"),
  PREV("PREV", "prev_action_id"),
  HOME("HOME", "home_action_id"),
  END("END", "end_action_id"),
  PAGE_UP("PAGE_UP", "page_up_action_id"),
  PAGE_DOWN("PAGE_DOWN", "page_down_action_id"),
  ROOT_HOME("ROOT_HOME", "root_home_action_id"),
  ROOT_END("ROOT_END", "root_end_action_id"),
  LOCAL_HOME("LOCAL_HOME", "local_home_action_id"),
  LOCAL_END("LOCAL_END", "local_end_action_id"),
  SELECT_LEFT("SELECT_LEFT", "select_left_action_id"),
  SELECT_RIGHT("SELECT_RIGHT", "select_right_action_id"),
  SELECT_UP("SELECT_UP", "select_up_action_id"),
  SELECT_DOWN("SELECT_DOWN", "select_down_action_id"),
  SELECT_HOME("SELECT_HOME", "select_home_action_id"),
  SELECT_END("SELECT_END", "select_end_action_id"),
  SELECT_LOCAL_END("SELECT_LOCAL_END", "select_local_end_action_id"),
  SELECT_LOCAL_HOME("SELECT_LOCAL_HOME", "select_local_home_action_id"),
  SELECT_NEXT("SELECT_NEXT", "select_next_action_id"),
  SELECT_PREVIOUS("SELECT_PREVIOUS", "select_previous_action_id"),
  LEFT_TRANSFORM("LEFT_TRANSFORM", "left_transform_action_id"),
  COMPLETE("COMPLETE", "complete_action_id"),
  COMPLETE_SMART("COMPLETE_SMART", "complete_smart_action_id"),
  FOLD("FOLD", "fold_action_id"),
  UNFOLD("UNFOLD", "unfold_action_id"),
  FOLD_ALL("FOLD_ALL", "fold_all_action_id"),
  UNFOLD_ALL("UNFOLD_ALL", "unfold_all_action_id"),
  TOGGLE_FOLDING("TOGGLE_FOLDING", "toggle_folding_action_id"),
  SHOW_MESSAGE("SHOW_MESSAGE", "show_message_action_id"),
  COMMENT("COMMENT", "comment_out_action_id"),
  UNCOMMENT("UNCOMMENT", "uncomment_action_id");

  private String myName;
  public String getName() {
    return this.myName;
  }
  public String getValueAsString() {
    return this.myValue;
  }
  public static List<CellActionId> getConstants() {
    List<CellActionId> list = ListSequence.fromList(new LinkedList<CellActionId>());
    ListSequence.fromList(list).addElement(CellActionId.RIGHT_TRANSFORM);
    ListSequence.fromList(list).addElement(CellActionId.DELETE);
    ListSequence.fromList(list).addElement(CellActionId.INSERT);
    ListSequence.fromList(list).addElement(CellActionId.INSERT_BEFORE);
    ListSequence.fromList(list).addElement(CellActionId.BACKSPACE);
    ListSequence.fromList(list).addElement(CellActionId.DELETE_TO_WORD_END);
    ListSequence.fromList(list).addElement(CellActionId.COPY);
    ListSequence.fromList(list).addElement(CellActionId.CUT);
    ListSequence.fromList(list).addElement(CellActionId.PASTE);
    ListSequence.fromList(list).addElement(CellActionId.PASTE_BEFORE);
    ListSequence.fromList(list).addElement(CellActionId.PASTE_AFTER);
    ListSequence.fromList(list).addElement(CellActionId.LEFT);
    ListSequence.fromList(list).addElement(CellActionId.RIGHT);
    ListSequence.fromList(list).addElement(CellActionId.UP);
    ListSequence.fromList(list).addElement(CellActionId.DOWN);
    ListSequence.fromList(list).addElement(CellActionId.NEXT);
    ListSequence.fromList(list).addElement(CellActionId.PREV);
    ListSequence.fromList(list).addElement(CellActionId.HOME);
    ListSequence.fromList(list).addElement(CellActionId.END);
    ListSequence.fromList(list).addElement(CellActionId.PAGE_UP);
    ListSequence.fromList(list).addElement(CellActionId.PAGE_DOWN);
    ListSequence.fromList(list).addElement(CellActionId.ROOT_HOME);
    ListSequence.fromList(list).addElement(CellActionId.ROOT_END);
    ListSequence.fromList(list).addElement(CellActionId.LOCAL_HOME);
    ListSequence.fromList(list).addElement(CellActionId.LOCAL_END);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_LEFT);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_RIGHT);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_UP);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_DOWN);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_HOME);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_END);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_LOCAL_END);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_LOCAL_HOME);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_NEXT);
    ListSequence.fromList(list).addElement(CellActionId.SELECT_PREVIOUS);
    ListSequence.fromList(list).addElement(CellActionId.LEFT_TRANSFORM);
    ListSequence.fromList(list).addElement(CellActionId.COMPLETE);
    ListSequence.fromList(list).addElement(CellActionId.COMPLETE_SMART);
    ListSequence.fromList(list).addElement(CellActionId.FOLD);
    ListSequence.fromList(list).addElement(CellActionId.UNFOLD);
    ListSequence.fromList(list).addElement(CellActionId.FOLD_ALL);
    ListSequence.fromList(list).addElement(CellActionId.UNFOLD_ALL);
    ListSequence.fromList(list).addElement(CellActionId.TOGGLE_FOLDING);
    ListSequence.fromList(list).addElement(CellActionId.SHOW_MESSAGE);
    ListSequence.fromList(list).addElement(CellActionId.COMMENT);
    ListSequence.fromList(list).addElement(CellActionId.UNCOMMENT);
    return list;
  }
  public static CellActionId getDefault() {
    return CellActionId.RIGHT_TRANSFORM;
  }
  public static CellActionId parseValue(String value) {
    if (value == null) {
      return CellActionId.getDefault();
    }
    if (value.equals(CellActionId.RIGHT_TRANSFORM.getValueAsString())) {
      return CellActionId.RIGHT_TRANSFORM;
    }
    if (value.equals(CellActionId.DELETE.getValueAsString())) {
      return CellActionId.DELETE;
    }
    if (value.equals(CellActionId.INSERT.getValueAsString())) {
      return CellActionId.INSERT;
    }
    if (value.equals(CellActionId.INSERT_BEFORE.getValueAsString())) {
      return CellActionId.INSERT_BEFORE;
    }
    if (value.equals(CellActionId.BACKSPACE.getValueAsString())) {
      return CellActionId.BACKSPACE;
    }
    if (value.equals(CellActionId.DELETE_TO_WORD_END.getValueAsString())) {
      return CellActionId.DELETE_TO_WORD_END;
    }
    if (value.equals(CellActionId.COPY.getValueAsString())) {
      return CellActionId.COPY;
    }
    if (value.equals(CellActionId.CUT.getValueAsString())) {
      return CellActionId.CUT;
    }
    if (value.equals(CellActionId.PASTE.getValueAsString())) {
      return CellActionId.PASTE;
    }
    if (value.equals(CellActionId.PASTE_BEFORE.getValueAsString())) {
      return CellActionId.PASTE_BEFORE;
    }
    if (value.equals(CellActionId.PASTE_AFTER.getValueAsString())) {
      return CellActionId.PASTE_AFTER;
    }
    if (value.equals(CellActionId.LEFT.getValueAsString())) {
      return CellActionId.LEFT;
    }
    if (value.equals(CellActionId.RIGHT.getValueAsString())) {
      return CellActionId.RIGHT;
    }
    if (value.equals(CellActionId.UP.getValueAsString())) {
      return CellActionId.UP;
    }
    if (value.equals(CellActionId.DOWN.getValueAsString())) {
      return CellActionId.DOWN;
    }
    if (value.equals(CellActionId.NEXT.getValueAsString())) {
      return CellActionId.NEXT;
    }
    if (value.equals(CellActionId.PREV.getValueAsString())) {
      return CellActionId.PREV;
    }
    if (value.equals(CellActionId.HOME.getValueAsString())) {
      return CellActionId.HOME;
    }
    if (value.equals(CellActionId.END.getValueAsString())) {
      return CellActionId.END;
    }
    if (value.equals(CellActionId.PAGE_UP.getValueAsString())) {
      return CellActionId.PAGE_UP;
    }
    if (value.equals(CellActionId.PAGE_DOWN.getValueAsString())) {
      return CellActionId.PAGE_DOWN;
    }
    if (value.equals(CellActionId.ROOT_HOME.getValueAsString())) {
      return CellActionId.ROOT_HOME;
    }
    if (value.equals(CellActionId.ROOT_END.getValueAsString())) {
      return CellActionId.ROOT_END;
    }
    if (value.equals(CellActionId.LOCAL_HOME.getValueAsString())) {
      return CellActionId.LOCAL_HOME;
    }
    if (value.equals(CellActionId.LOCAL_END.getValueAsString())) {
      return CellActionId.LOCAL_END;
    }
    if (value.equals(CellActionId.SELECT_LEFT.getValueAsString())) {
      return CellActionId.SELECT_LEFT;
    }
    if (value.equals(CellActionId.SELECT_RIGHT.getValueAsString())) {
      return CellActionId.SELECT_RIGHT;
    }
    if (value.equals(CellActionId.SELECT_UP.getValueAsString())) {
      return CellActionId.SELECT_UP;
    }
    if (value.equals(CellActionId.SELECT_DOWN.getValueAsString())) {
      return CellActionId.SELECT_DOWN;
    }
    if (value.equals(CellActionId.SELECT_HOME.getValueAsString())) {
      return CellActionId.SELECT_HOME;
    }
    if (value.equals(CellActionId.SELECT_END.getValueAsString())) {
      return CellActionId.SELECT_END;
    }
    if (value.equals(CellActionId.SELECT_LOCAL_END.getValueAsString())) {
      return CellActionId.SELECT_LOCAL_END;
    }
    if (value.equals(CellActionId.SELECT_LOCAL_HOME.getValueAsString())) {
      return CellActionId.SELECT_LOCAL_HOME;
    }
    if (value.equals(CellActionId.SELECT_NEXT.getValueAsString())) {
      return CellActionId.SELECT_NEXT;
    }
    if (value.equals(CellActionId.SELECT_PREVIOUS.getValueAsString())) {
      return CellActionId.SELECT_PREVIOUS;
    }
    if (value.equals(CellActionId.LEFT_TRANSFORM.getValueAsString())) {
      return CellActionId.LEFT_TRANSFORM;
    }
    if (value.equals(CellActionId.COMPLETE.getValueAsString())) {
      return CellActionId.COMPLETE;
    }
    if (value.equals(CellActionId.COMPLETE_SMART.getValueAsString())) {
      return CellActionId.COMPLETE_SMART;
    }
    if (value.equals(CellActionId.FOLD.getValueAsString())) {
      return CellActionId.FOLD;
    }
    if (value.equals(CellActionId.UNFOLD.getValueAsString())) {
      return CellActionId.UNFOLD;
    }
    if (value.equals(CellActionId.FOLD_ALL.getValueAsString())) {
      return CellActionId.FOLD_ALL;
    }
    if (value.equals(CellActionId.UNFOLD_ALL.getValueAsString())) {
      return CellActionId.UNFOLD_ALL;
    }
    if (value.equals(CellActionId.TOGGLE_FOLDING.getValueAsString())) {
      return CellActionId.TOGGLE_FOLDING;
    }
    if (value.equals(CellActionId.SHOW_MESSAGE.getValueAsString())) {
      return CellActionId.SHOW_MESSAGE;
    }
    if (value.equals(CellActionId.COMMENT.getValueAsString())) {
      return CellActionId.COMMENT;
    }
    if (value.equals(CellActionId.UNCOMMENT.getValueAsString())) {
      return CellActionId.UNCOMMENT;
    }
    return CellActionId.getDefault();
  }
  private String myValue;
  CellActionId(String name, String value) {
    this.myName = name;
    this.myValue = value;
  }
  public String getValue() {
    return this.myValue;
  }
}
