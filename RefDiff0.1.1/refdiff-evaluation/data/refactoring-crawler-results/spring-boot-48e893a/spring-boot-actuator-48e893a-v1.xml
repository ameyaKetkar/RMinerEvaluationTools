<?xml version="1.0" encoding="UTF-8"?>
<refactoringsession>
<refactoring name="PushedDownMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.cache.JCacheCacheStatisticsProvider.getAttribute(ObjectName, String, Class<T>)</parameter><parameter name= "old element">org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.getAttribute(ObjectName, String, Class<T>)</parameter></refactoring><refactoring name="PushedDownMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.cache.InfinispanCacheStatisticsProvider.getAttribute(ObjectName, String, Class<T>)</parameter><parameter name= "old element">org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.getAttribute(ObjectName, String, Class<T>)</parameter></refactoring><refactoring name="PushedDownMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.cache.JCacheCacheStatisticsProvider.getMBeanServer()</parameter><parameter name= "old element">org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.getMBeanServer()</parameter></refactoring><refactoring name="PushedDownMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.cache.InfinispanCacheStatisticsProvider.getMBeanServer()</parameter><parameter name= "old element">org.springframework.boot.actuate.cache.AbstractJmxCacheStatisticsProvider.getMBeanServer()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.getEndpointType()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.getEndpointType()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.DocsMvcEndpoint.getEndpointType()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.getEndpointType()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.getPath()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.getPath()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.DocsMvcEndpoint.getPath()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.getPath()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.metrics.AggregateMetricReader.setKeyPattern(String)</parameter><parameter name= "old element">org.springframework.boot.actuate.metrics.aggregate.AggregateMetricReader.setKeyPattern(String)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.metrics.AggregateMetricReader.setPrefix(String)</parameter><parameter name= "old element">org.springframework.boot.actuate.metrics.aggregate.AggregateMetricReader.setPrefix(String)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.metrics.AggregateMetricReader.findOne(String)</parameter><parameter name= "old element">org.springframework.boot.actuate.metrics.aggregate.AggregateMetricReader.findOne(String)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.metrics.AggregateMetricReader.findAll()</parameter><parameter name= "old element">org.springframework.boot.actuate.metrics.aggregate.AggregateMetricReader.findAll()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.metrics.AggregateMetricReader.count()</parameter><parameter name= "old element">org.springframework.boot.actuate.metrics.aggregate.AggregateMetricReader.count()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.getPath()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.getPath()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.DocsMvcEndpoint.getPath()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.getPath()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.getEndpointType()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.getEndpointType()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.DocsMvcEndpoint.getEndpointType()</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.DocsMvcEndpoint.getEndpointType()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.setEnvironment(Environment)</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.setEnvironment(Environment)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.setEnabled(boolean)</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.setEnabled(boolean)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">org.springframework.boot.actuate.endpoint.LogFileMvcEndpoint.invoke(HttpServletRequest, HttpServletResponse)</parameter><parameter name= "old element">org.springframework.boot.actuate.endpoint.mvc.LogFileMvcEndpoint.invoke(HttpServletRequest, HttpServletResponse)</parameter></refactoring></refactoringsession>