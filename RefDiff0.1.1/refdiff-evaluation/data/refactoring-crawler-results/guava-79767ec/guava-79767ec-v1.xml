<?xml version="1.0" encoding="UTF-8"?>
<refactoringsession>
<refactoring name="RenamedClasses"> 
<parameter name= "new element">com.google.common.eventbus.GhostEvent</parameter><parameter name= "old element">com.google.common.eventbus.DeadEvent</parameter></refactoring><refactoring name="RenamedClasses"> 
<parameter name= "new element">com.google.common.base.ObjectsExtension</parameter><parameter name= "old element">com.google.common.base.MoreObjects</parameter></refactoring><refactoring name="RenamedClasses"> 
<parameter name= "new element">com.google.common.collect.CollectionsExtension</parameter><parameter name= "old element">com.google.common.collect.Collections2</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CountableOutputStream.write(byte[], int, int)</parameter><parameter name= "old element">com.google.common.io.CountingOutputStream.write(byte[], int, int)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CountableOutputStream.write(int)</parameter><parameter name= "old element">com.google.common.io.CountingOutputStream.write(int)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CountableOutputStream.close()</parameter><parameter name= "old element">com.google.common.io.CountingOutputStream.close()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Ascii.toLowerCase(String)</parameter><parameter name= "old element">com.google.common.base.Ascii.toLowerCase(String)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Ascii.toLowerCase(CharSequence)</parameter><parameter name= "old element">com.google.common.base.Ascii.toLowerCase(CharSequence)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Ascii.toLowerCase(char)</parameter><parameter name= "old element">com.google.common.base.Ascii.toLowerCase(char)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Ascii.toUpperCase(String)</parameter><parameter name= "old element">com.google.common.base.Ascii.toUpperCase(String)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Ascii.toUpperCase(CharSequence)</parameter><parameter name= "old element">com.google.common.base.Ascii.toUpperCase(CharSequence)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Ascii.toUpperCase(char)</parameter><parameter name= "old element">com.google.common.base.Ascii.toUpperCase(char)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.primitives.Strings.isNullOrEmpty(String)</parameter><parameter name= "old element">com.google.common.base.Strings.isNullOrEmpty(String)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CountableInputStream.read()</parameter><parameter name= "old element">com.google.common.io.CountingInputStream.read()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CountableInputStream.read(byte[], int, int)</parameter><parameter name= "old element">com.google.common.io.CountingInputStream.read(byte[], int, int)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CountableInputStream.skip(long)</parameter><parameter name= "old element">com.google.common.io.CountingInputStream.skip(long)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.LineReader.add(char[], int, int)</parameter><parameter name= "old element">com.google.common.io.LineBuffer.add(char[], int, int)</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.LineReader.finish()</parameter><parameter name= "old element">com.google.common.io.LineBuffer.finish()</parameter></refactoring><refactoring name="MovedMethods"> 
<parameter name= "new element">com.google.common.io.CharSource.copy(Readable, Appendable)</parameter><parameter name= "old element">com.google.common.io.CharStreams.copy(Readable, Appendable)</parameter></refactoring><refactoring name="ChangedMethodSignatures"> 
<parameter name= "new element">com.google.common.base.ObjectsExtension.toStringHelper(Class<?>)</parameter><parameter name= "old element">com.google.common.base.MoreObjects.toStringHelper(Object)</parameter></refactoring><refactoring name="ChangedMethodSignatures"> 
<parameter name= "new element">com.google.common.base.ObjectsExtension.toStringHelper(String)</parameter><parameter name= "old element">com.google.common.base.MoreObjects.toStringHelper(Object)</parameter></refactoring><refactoring name="ChangedMethodSignatures"> 
<parameter name= "new element">com.google.common.base.ObjectsExtension.toStringHelper(Object)</parameter><parameter name= "old element">com.google.common.base.MoreObjects.toStringHelper(Class<?>)</parameter></refactoring><refactoring name="ChangedMethodSignatures"> 
<parameter name= "new element">com.google.common.base.ObjectsExtension.toStringHelper(String)</parameter><parameter name= "old element">com.google.common.base.MoreObjects.toStringHelper(Class<?>)</parameter></refactoring></refactoringsession>