[{
    "id": 1100435,
    "repository": "https://github.com/realm/realm-java.git",
    "sha1": "6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "url": "https://github.com/realm/realm-java/commit/6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
    "author": "Christian Melchior",
    "time": "6/8/15 7:26 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private showStatus(txt String) : void extracted from protected onCreate(savedInstanceState Bundle) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity",
        "comment": "The method showStatus(txt String) is added in the refactored version and indeed is called inside onCreate(..) but there ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1250
}, {
    "id": 1100663,
    "repository": "https://github.com/rstudio/rstudio.git",
    "sha1": "cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
    "url": "https://github.com/rstudio/rstudio/commit/cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
    "author": "JJ Allaire",
    "time": "6/8/15 9:53 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected setMaxHeight(maxHeight int) : void extracted from protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget in class org.rstudio.core.client.widget.ScrollableToolbarPopupMenu",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2603
}, {
    "id": 1100842,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7ed3f273ab0caf0337c22f0b721d51829bb0c877",
    "url": "https://github.com/JetBrains/intellij-community/commit/7ed3f273ab0caf0337c22f0b721d51829bb0c877",
    "author": "Ekaterina Tuzova",
    "time": "6/8/15 10:29 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean extracted from public getCourses() : List<CourseInfo> in class com.jetbrains.edu.stepic.EduStepicConnector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 27567
}, {
    "id": 1100856,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7a4dab88185553bd09e827839fdf52e870ef7088",
    "url": "https://github.com/JetBrains/intellij-community/commit/7a4dab88185553bd09e827839fdf52e870ef7088",
    "author": "Dmitry Batrak",
    "time": "6/8/15 8:07 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getDataFile(name String) : File extracted from private getJarFile(name String) : VirtualFile in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getDocumentationText(sourceEditorText String) : String extracted from public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 28911
}, {
    "id": 1100868,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7655200f58293e5a30bf8b3cbb29ebadae374564",
    "url": "https://github.com/JetBrains/intellij-community/commit/7655200f58293e5a30bf8b3cbb29ebadae374564",
    "author": "Egor.Ushakov",
    "time": "6/8/15 6:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private checkRemap() : void extracted from public getLine() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private checkRemap() : void extracted from public getOffset() : int in class com.intellij.debugger.engine.RemappedSourcePosition",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 37410
}, {
    "id": 1101296,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "4a2247c24efee48de53ca07302b6810ab7205621",
    "url": "https://github.com/SonarSource/sonarqube/commit/4a2247c24efee48de53ca07302b6810ab7205621",
    "author": "Teryk Bellahsene",
    "time": "6/8/15 11:12 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.sonar.server.custommeasure to org.sonar.server.measure.custom",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDao moved to org.sonar.server.measure.custom.persistence.CustomMeasureDao",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureDaoTest moved to org.sonar.server.measure.custom.persistence.CustomMeasureDaoTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.persistence.CustomMeasureTesting moved to org.sonar.server.measure.custom.persistence.CustomMeasureTesting",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWs moved to org.sonar.server.measure.custom.ws.CustomMeasuresWs",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsAction moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsAction",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModule moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModule",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsModuleTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsModuleTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.CustomMeasuresWsTest moved to org.sonar.server.measure.custom.ws.CustomMeasuresWsTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.DeleteAction moved to org.sonar.server.measure.custom.ws.DeleteAction",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.custommeasure.ws.DeleteActionTest moved to org.sonar.server.measure.custom.ws.DeleteActionTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3691
}, {
    "id": 1101310,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "abbf32571232db81a5343db17a933a9ce6923b44",
    "url": "https://github.com/SonarSource/sonarqube/commit/abbf32571232db81a5343db17a933a9ce6923b44",
    "author": "Simon Brandhof",
    "time": "6/8/15 10:22 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.sonar.server.notifications to org.sonar.server.notification",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.DefaultNotificationManagerTest moved to org.sonar.server.notification.DefaultNotificationManagerTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationChannelTest moved to org.sonar.server.notification.NotificationChannelTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcher moved to org.sonar.server.notification.NotificationDispatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcherMetadata moved to org.sonar.server.notification.NotificationDispatcherMetadata",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcherMetadataTest moved to org.sonar.server.notification.NotificationDispatcherMetadataTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationDispatcherTest moved to org.sonar.server.notification.NotificationDispatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationCenter moved to org.sonar.server.notification.NotificationCenter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationCenterTest moved to org.sonar.server.notification.NotificationCenterTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationService moved to org.sonar.server.notification.NotificationService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationServiceTest moved to org.sonar.server.notification.NotificationServiceTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.NotificationTest moved to org.sonar.server.notification.NotificationTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.AlertsEmailTemplate moved to org.sonar.server.notification.email.AlertsEmailTemplate",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.AlertsEmailTemplateTest moved to org.sonar.server.notification.email.AlertsEmailTemplateTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.EmailNotificationChannel moved to org.sonar.server.notification.email.EmailNotificationChannel",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.server.notifications.email.EmailNotificationChannelTest moved to org.sonar.server.notification.email.EmailNotificationChannelTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.DefaultNotificationManager moved to org.sonar.server.notification.DefaultNotificationManager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.sonar.server.notification.NotificationManager from class org.sonar.server.notification.DefaultNotificationManager",
        "comment": "NotificationManager existed in the previous revision too",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.notification.NotificationManager moved to org.sonar.server.notification.NotificationManager",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 9294
}, {
    "id": 1102793,
    "repository": "https://github.com/crashub/crash.git",
    "sha1": "2801269c7e47bd6e243612654a74cee809d20959",
    "url": "https://github.com/crashub/crash/commit/2801269c7e47bd6e243612654a74cee809d20959",
    "author": "Oliver Trosien",
    "time": "6/7/15 11:15 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 417
}, {
    "id": 1102923,
    "repository": "https://github.com/jeeeyul/eclipse-themes.git",
    "sha1": "72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "url": "https://github.com/jeeeyul/eclipse-themes/commit/72f61ec9b85a740fd09d10ad711e275d2ec2e564",
    "author": "Jeeeyul Lee",
    "time": "6/8/15 6:29 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.TestView moved to net.jeeeyul.eclipse.themes.test.e4app.views.TestView",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.SplashHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.SplashHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.AboutHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.AboutHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 313
}, {
    "id": 1103199,
    "repository": "https://github.com/oblac/jodd.git",
    "sha1": "722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "url": "https://github.com/oblac/jodd/commit/722ef9156896248ef3fbe83adde0f6ff8f46856a",
    "author": "Igor Spasi?",
    "time": "6/8/15 6:08 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1225
}, {
    "id": 1103658,
    "repository": "https://github.com/glyptodon/guacamole-client.git",
    "sha1": "ebb483320d971ff4d9e947309668f5da1fcd3d23",
    "url": "https://github.com/glyptodon/guacamole-client/commit/ebb483320d971ff4d9e947309668f5da1fcd3d23",
    "author": "Michael Jumper",
    "time": "6/8/15 5:46 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1103823,
    "repository": "https://github.com/raphw/byte-buddy.git",
    "sha1": "372f4ae6cebcd664e3b43cade356d1df233f6467",
    "url": "https://github.com/raphw/byte-buddy/commit/372f4ae6cebcd664e3b43cade356d1df233f6467",
    "author": "Rafael Winterhalter",
    "time": "6/8/15 12:07 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute package ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to class net.bytebuddy.description.type.TypeDescription",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Retaining moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy.Retaining",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onType(typeDescription TypeDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP. However, I would mark the entire thing as a rename class. All the methods/attributes of the removed class is being repeated (with small modifications) in the new class. Matin, Davood: FP, condidate move and rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to public onMethod(methodDescription MethodDescription) : TypeVariableProxy from class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion, Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the method is the same since both class implement the same extends the same class | Davood: same as above",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from public prepare(instrumentedType InstrumentedType) : InstrumentedType in class net.bytebuddy.implementation.FieldAccessor.ForNamedField.PreparationHandler.FieldDefiner",
        "comment": "call to resolve() with three args in old vrs call to resolve() with two args in new",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveReturnType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.MethodToken",
        "comment": "The call to method resolve() with three params is changed to method resolve() with two params in the refactored version. Not an extract method refactroing.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public resolve(typeDescription GenericTypeDescription, substitute TypeDescription) : GenericTypeDescription extracted from protected resolveFieldType(instrumentedType TypeDescription) : TypeDescription in class net.bytebuddy.dynamic.DynamicType.Builder.AbstractBase.FieldToken",
        "comment": "call to resolve() with three args in old vrs call to resolve() with two args in new",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private substitutionMatcher : ElementMatcher from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class |  Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private substitute : TypeDescription from class net.bytebuddy.dynamic.TargetType.TypeVariableProxy.Extractor to class net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType",
        "comment": "Second Opinion. Seems FP since the Extractor is removerd and ForRawType is a new class. Moreover the attribute is the same since both class implement the same extends the same class | Davood: If you accept moving from a class which no longer exists to a new class, this is TP. Otherwise FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4590
}, {
    "id": 1103915,
    "repository": "https://github.com/Athou/commafeed.git",
    "sha1": "18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
    "url": "https://github.com/Athou/commafeed/commit/18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
    "author": "Athou",
    "time": "6/8/15 10:53 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fetch(url String) : byte[] extracted from public fetch(feed Feed) : byte[] in class com.commafeed.backend.favicon.DefaultFaviconFetcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 256
}, {
    "id": 1103963,
    "repository": "https://github.com/fabric8io/fabric8.git",
    "sha1": "8127b21a220ca677c4e59961d019e7753da7ea6e",
    "url": "https://github.com/fabric8io/fabric8/commit/8127b21a220ca677c4e59961d019e7753da7ea6e",
    "author": "Jimmi Dyson",
    "time": "6/8/15 8:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected getProbe(prefix String) : Probe extracted from protected getLivenessProbe() : Probe in class io.fabric8.maven.JsonMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 13059
}, {
    "id": 1104589,
    "repository": "https://github.com/puniverse/quasar.git",
    "sha1": "c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "url": "https://github.com/puniverse/quasar/commit/c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
    "author": "pron",
    "time": "6/8/15 8:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected failedSubscribe(s Subscription) : void extracted from public onSubscribe(s Subscription) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected failedSubscribe(s Subscriber<? super T>, t Throwable) : void extracted from public subscribe(s Subscriber<? super T>) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 548
}, {
    "id": 1104637,
    "repository": "https://github.com/dreamhead/moco.git",
    "sha1": "55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
    "url": "https://github.com/dreamhead/moco/commit/55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
    "author": "dreamhead",
    "time": "6/8/15 11:18 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 472
}, {
    "id": 1104750,
    "repository": "https://github.com/vaadin/vaadin.git",
    "sha1": "b0d5315e8ba95d099f93dc2d16339033a6525b59",
    "url": "https://github.com/vaadin/vaadin/commit/b0d5315e8ba95d099f93dc2d16339033a6525b59",
    "error": true,
    "author": "Teppo Kurki",
    "time": "6/8/15 4:19 AM",
    "ignore": true,
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private remove() : void inlined to public testColExpandRatioIsForgotten() : void in class com.vaadin.ui.GridLayoutExpandRatioTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3001
}, {
    "id": 1104952,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "04bcfe98dbe7b05e508559930c21379ece845732",
    "url": "https://github.com/gradle/gradle/commit/04bcfe98dbe7b05e508559930c21379ece845732",
    "author": "Cedric Champeau",
    "time": "6/8/15 9:02 AM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.internal.component.model.ComponentArtifactIdentifier moved to org.gradle.api.artifacts.component.ComponentArtifactIdentifier",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasArtifacts() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method private assertHasResult() : void from class org.gradle.api.internal.artifacts.ResolverResults to private assertHasResult() : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public eachResolvedProject(action Action) : void from class org.gradle.api.internal.artifacts.ResolverResults to public eachResolvedProject(action Action) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.ResolverResults to public failed(failure ResolveException) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getArtifactsBuilder() : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to public getGraphResults() : ResolvedGraphResults from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to public getTransientConfigurationResultsBuilder() : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.ResolverResults to public resolved(resolutionResult ResolutionResult, resolvedLocalComponentsResult ResolvedLocalComponentsResult) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.ResolverResults to public retainState(graphResults ResolvedGraphResults, artifactResults ResolvedArtifactsBuilder, transientConfigurationResultsBuilder TransientConfigurationResultsBuilder) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.ResolverResults to public withResolvedConfiguration(resolvedConfiguration ResolvedConfiguration) : void from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down method. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private fatalFailure : ResolveException from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private graphResults : ResolvedGraphResults from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private resolutionResult : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private resolvedConfiguration : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private resolvedLocalComponentsResult : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private transientConfigurationResultsBuilder : TransientConfigurationResultsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private artifactResults : ResolvedArtifactsBuilder from class org.gradle.api.internal.artifacts.ResolverResults to class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": "DefaultResolverResults is a new class and extracted from ResolverResults. Thus, it is an extract class not push down Attribute. Since RefDiff cannot detect this kind of refactorings we may have to call this as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolutionResult() : ResolutionResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedConfiguration() : ResolvedConfiguration from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.ResolverResults to public getResolvedLocalComponents() : ResolvedLocalComponentsResult from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public hasError() : boolean from class org.gradle.api.internal.artifacts.ResolverResults to public hasError() : boolean from class org.gradle.api.internal.artifacts.DefaultResolverResults",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 9978
}, {
    "id": 1105075,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "2bcd05a827ead109a56cb1f79a83dcd332f42888",
    "url": "https://github.com/JetBrains/MPS/commit/2bcd05a827ead109a56cb1f79a83dcd332f42888",
    "author": "Mihail Muhin",
    "time": "6/7/15 7:36 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public getLanguage(id SLanguageId, langName String, version int) : SLanguage inlined to public getLanguage(id SLanguageId, langName String) : SLanguage in class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 43228
}, {
    "id": 1105586,
    "repository": "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/Android-IMSI-Catcher-Detector.git",
    "sha1": "e235f884f2e0bc258da77b9c80492ad33386fa86",
    "url": "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector/commit/e235f884f2e0bc258da77b9c80492ad33386fa86",
    "author": "Marvin Arnold",
    "time": "6/7/15 9:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createCellSignalTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createOpenCellIDTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createDefaultMCCTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createLocationTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createSilentSmsTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCellTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createEventLogTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 463
}, {
    "id": 1105941,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "138911ce88b05039242b8d1b2bb5b7a59008f5ee",
    "url": "https://github.com/JetBrains/intellij-community/commit/138911ce88b05039242b8d1b2bb5b7a59008f5ee",
    "author": "Dmitry Batrak",
    "time": "6/8/15 12:40 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getHTMLEditorKit(noGapsBetweenParagraphs boolean) : HTMLEditorKit extracted from public getHTMLEditorKit() : HTMLEditorKit in class com.intellij.util.ui.UIUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15944
}, {
    "id": 1105947,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "04397f41107bd6de41b31d45a4e8e2ed65628bbe",
    "url": "https://github.com/JetBrains/intellij-community/commit/04397f41107bd6de41b31d45a4e8e2ed65628bbe",
    "author": "Anna Kozlova",
    "time": "6/8/15 11:50 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>, processed Set<Module>) : void inlined to protected checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>) : void in class com.intellij.testIntegration.createTest.CreateTestAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 14649
}, {
    "id": 1105950,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "url": "https://github.com/JetBrains/intellij-community/commit/cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
    "author": "Bas Leijdekkers",
    "time": "6/8/15 11:39 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15592
}, {
    "id": 1105969,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
    "url": "https://github.com/SonarSource/sonarqube/commit/c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
    "author": "Julien Lancelot",
    "time": "6/8/15 1:21 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106007,
    "repository": "https://github.com/glyptodon/guacamole-client.git",
    "sha1": "ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
    "url": "https://github.com/glyptodon/guacamole-client/commit/ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
    "author": "Michael Jumper",
    "time": "6/8/15 2:17 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106044,
    "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
    "sha1": "4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
    "url": "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
    "author": "Chris Kittrell",
    "time": "6/8/15 11:14 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.FieldMetadata",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private column : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to class org.broadleafcommerce.openadmin.dto.FieldMetadata",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106247,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "url": "https://github.com/datastax/java-driver/commit/1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
    "author": "olim7t",
    "time": "6/8/15 11:19 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getMaxRequestsPerConnection(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getNewConnectionThreshold(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1106350,
    "repository": "https://github.com/puniverse/quasar.git",
    "sha1": "56d4b999e8be70be237049708f019c278c356e71",
    "url": "https://github.com/puniverse/quasar/commit/56d4b999e8be70be237049708f019c278c356e71",
    "author": "circlespainter",
    "time": "6/8/15 3:49 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public pushMethod(entry int, numSlots int, method String, sourceLine int) : void inlined to public pushMethod(entry int, numSlots int) : void in class co.paralleluniverse.fibers.Stack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public checkInstrumentation(exc boolean) : boolean inlined to public checkInstrumentation() : boolean in class co.paralleluniverse.fibers.Fiber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public popMethod(catchAll boolean) : void inlined to public popMethod() : void in class co.paralleluniverse.fibers.Stack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private isNonSuspendable(clazz Class, methodName String) : boolean renamed to private isSuspendable(clazz Class, methodName String) : boolean in class co.paralleluniverse.fibers.Fiber",
        "comment": "The method is name is changed since the functionality is changed | Davood: The method is called in (almost) the same place than the older one, I mark it as TP",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private emitInstrumentedAnn() : void extracted from public visitEnd() : void in class co.paralleluniverse.fibers.instrument.InstrumentClass",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 970
}, {
    "id": 1106355,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
    "url": "https://github.com/hibernate/hibernate-orm/commit/2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
    "author": "Steve Ebersole",
    "time": "6/8/15 4:24 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6112
}, {
    "id": 1106365,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "446e2537895c15b404a74107069a12f3fc404b15",
    "url": "https://github.com/apache/cassandra/commit/446e2537895c15b404a74107069a12f3fc404b15",
    "author": "Philip Thompson",
    "time": "6/8/15 4:41 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.hadoop.BulkRecordWriter.NullOutputHandler moved to org.apache.cassandra.hadoop.cql3.CqlBulkRecordWriter.NullOutputHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat.SplitCallable moved to org.apache.cassandra.hadoop.cql3.CqlInputFormat.SplitCallable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageFilter() : void renamed to public testCqlNativeStorageFilter() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageFullCopy() : void renamed to public testCqlNativeStorageFullCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageBagOnlyCopy() : void renamed to public testCqlNativeStorageBagOnlyCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageSingleTupleCopy() : void renamed to public testCqlNativeStorageSingleTupleCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageCounterCF() : void renamed to public testCqlNativeStorageCounterCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageJoin() : void renamed to public testCqlNativeStorageJoin() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageCompositeColumnCF() : void renamed to public testCqlNativeStorageCompositeColumnCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageSchema() : void renamed to public testCqlNativeStorageSchema() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCassandraStorageCompositeKeyCF() : void renamed to public testCqlNativeStorageCompositeKeyCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private describeSplits(keyspace String, table String, tokenRange TokenRange, splitSize int) : Map from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getRangeMap(conf Configuration, keyspace String) : Map from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getRangeMap(conf Configuration, keyspace String) : Map from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private getSubSplits(keyspace String, cfName String, range TokenRange, conf Configuration) : Map from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private rangeToTokenRange(metadata Metadata, range Range) : TokenRange from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to private rangeToTokenRange(metadata Metadata, range Range) : TokenRange from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "Class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to protected validateConfiguration(conf Configuration) : void from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSplits(context JobContext) : List from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to public getSplits(context JobContext) : List from class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private partitioner : IPartitioner from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private session : Session from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public MAPRED_TASK_ID : String from class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "class AbstractColumnFamilyInputFormat is deleted, thus it does not total comply with the defenition of move attribute.",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class WordCount to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class WordCountSetup to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.BulkRecordWriter to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private keyspace : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cfName : String from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class WordCountCounters to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public QUEUE_SIZE : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
        "comment": "<p>The source class is deleted.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public BATCH_THRESHOLD : String from class org.apache.cassandra.hadoop.ColumnFamilyOutputFormat to class org.apache.cassandra.hadoop.cql3.CqlOutputFormat",
        "comment": "<p>The source class is deleted.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyInputFormat to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": "<p>The attribute logger is moved form the superclass of ColumnFamilyInputFormat (AbstractColumnFamilyInputFormat) to CqlInputFormat and it is already detected and marked as CTP.</p><p>&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1106365/141</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.apache.cassandra.hadoop.ColumnFamilyRecordReader to class org.apache.cassandra.hadoop.cql3.CqlInputFormat",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 6589
}, {
    "id": 1106576,
    "repository": "https://github.com/liferay/liferay-portal.git",
    "sha1": "59fd9e696cec5f2ed44c27422bbc426b11647321",
    "url": "https://github.com/liferay/liferay-portal/commit/59fd9e696cec5f2ed44c27422bbc426b11647321",
    "author": "Andrea Di Giorgi",
    "time": "6/10/15 6:43 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency extracted from public addDependency(project Project, configurationName String, group String, name String, version String, transitive boolean) : Dependency in class com.liferay.gradle.util.GradleUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String) : Dependency from class com.liferay.gradle.plugins.poshi.runner.util.GradleUtil to public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency from class com.liferay.gradle.util.GradleUtil",
        "comment": "class GradleUtil is deleted,  thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 10416
}, {
    "id": 1106945,
    "repository": "https://github.com/HubSpot/Singularity.git",
    "sha1": "45ada13b852af85e1ae0491267a0239d9bdf6f3f",
    "url": "https://github.com/HubSpot/Singularity/commit/45ada13b852af85e1ae0491267a0239d9bdf6f3f",
    "author": "tpetr",
    "time": "6/10/15 4:07 PM",
    "refactorings": [{
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.DeployResource to class com.hubspot.singularity.resources.AbstractRequestResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.RequestResource to class com.hubspot.singularity.resources.AbstractRequestResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1107119,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
    "author": "Steve Kondik",
    "time": "6/11/15 12:41 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private cleanupProximityLocked() : void extracted from private cleanupProximity() : void in class com.android.server.power.PowerManagerService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 8657
}, {
    "id": 1107345,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "219d6ddfd1db62c11efb57e0216436874e087834",
    "url": "https://github.com/JetBrains/intellij-community/commit/219d6ddfd1db62c11efb57e0216436874e087834",
    "author": "Michael Golubev",
    "time": "6/10/15 4:04 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass com.intellij.remoteServer.agent.util.log.LogPipeBase from class com.intellij.remoteServer.agent.util.log.LogPipe",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void extracted from public addAdditionalLog(presentableName String) : LoggingHandler in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl to public dispose() : void from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 14854
}, {
    "id": 1107379,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "484038e916dc40bf87eca10c77889d79eca96c4d",
    "url": "https://github.com/JetBrains/intellij-community/commit/484038e916dc40bf87eca10c77889d79eca96c4d",
    "author": "Eugene Zhuravlev",
    "time": "6/10/15 9:11 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public removeNodes(paths Collection<TreePath>) : void extracted from public removeNode(nodePath TreePath) : void in class com.intellij.compiler.options.AnnotationProcessorsPanel.MyTreeModel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 16962
}, {
    "id": 1107713,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "url": "https://github.com/SonarSource/sonarqube/commit/091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
    "author": "Julien Lancelot",
    "time": "6/10/15 9:30 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.sonar.core.component.SnapshotQuery moved to org.sonar.core.component.db.SnapshotQuery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.component.SnapshotQueryTest moved to org.sonar.core.component.db.SnapshotQueryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent renamed to org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public not_update_create_at() : void renamed to public do_not_update_created_at_on_existing_component() : void in class org.sonar.server.computation.step.PersistComponentsStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public fail_to_get_periods_if_not_initialized() : void renamed to public get_periods_throws_illegal_state_exception_if_not_initialized() : void in class org.sonar.server.computation.period.PeriodsHolderImplTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2491
}, {
    "id": 1107718,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
    "url": "https://github.com/SonarSource/sonarqube/commit/7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
    "author": "Julien Lancelot",
    "time": "6/10/15 9:30 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent BatchReport.Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2975
}, {
    "id": 1107899,
    "repository": "https://github.com/elastic/elasticsearch.git",
    "sha1": "c928852d4ab7d8c744063979208709ed4429b8e9",
    "url": "https://github.com/elastic/elasticsearch/commit/c928852d4ab7d8c744063979208709ed4429b8e9",
    "author": "Christoph Büscher",
    "time": "6/11/15 9:40 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryParser to public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parse(parseContext QueryParseContext) : Query renamed to public fromXContent(parseContext QueryParseContext) : QueryBuilder in class org.elasticsearch.index.query.ExistsQueryParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3765
}, {
    "id": 1107905,
    "repository": "https://github.com/elastic/elasticsearch.git",
    "sha1": "f77804dad35c13d9ff96456e85737883cf7ddd99",
    "url": "https://github.com/elastic/elasticsearch/commit/f77804dad35c13d9ff96456e85737883cf7ddd99",
    "author": "Simon Willnauer",
    "time": "6/11/15 6:58 AM",
    "refactorings": [{
        "type": "Rename Method",
        "description": "Rename Method public getMergePolicyProvider() : MergePolicyProvider renamed to public getMergePolicy() : MergePolicy in class org.elasticsearch.index.engine.EngineConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.ElasticsearchMergePolicy moved to org.elasticsearch.index.shard.ElasticsearchMergePolicy",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.FilterDocValuesProducer moved to org.elasticsearch.index.shard.FilterDocValuesProducer",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgrader moved to org.elasticsearch.index.shard.VersionFieldUpgrader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.elasticsearch.index.merge.policy.VersionFieldUpgraderTest moved to org.elasticsearch.index.shard.VersionFieldUpgraderTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider moved to org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public formatNoCFSRatio(ratio double) : String from class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to public parseNoCFSRatio(noCFSRatio String) : double from class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": "class AbstractMergePolicyProvider is deleted,  thus it does not total comply with the defenition of move method.",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMergePolicy() : LogByteSizeMergePolicy from class org.elasticsearch.index.merge.policy.LogByteSizeMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
        "comment": "LogByteSizeMergePolicyProvider is deleted, in class EngineConfig field mergePolicyProvider -> mergePolicy and thus the getter is renmed to  getMergePolicy ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMergePolicy() : LogDocMergePolicy from class org.elasticsearch.index.merge.policy.LogDocMergePolicyProvider to public getMergePolicy() : MergePolicy from class org.elasticsearch.index.engine.EngineConfig",
        "comment": "<p>The method is a getter, the coresponding&nbsp;attribute has changed, so do the method signature.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.merge.policy.TieredMergePolicyProvider.ApplySettings to public onRefreshSettings(settings Settings) : void from class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": "<p>Matin: Second Opinion. The method is renamed since the return type is changed</p><p>Davood: There are three implementations of the same interface and the method is forced to be implemented in all the implementing classes. All the classes are deleted in this commit, and the newly-added class implements the same interface and the method is identical to one of the removed ones</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public build(value String) : Settings from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public build(value String) : Settings from class org.elasticsearch.index.shard.MergePolicySettingsTest",
        "comment": "Second Opinion. It is a move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.merge.policy.MergePolicySettingsTest to public testTieredMergePolicySettingsUpdate() : void from class org.elasticsearch.index.shard.MergePolicySettingsTest",
        "comment": "The class in based version is deleted and the class in refactored version is added. Five methods in total are moved frome the deletd class, to the added class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public INDEX_COMPOUND_FORMAT : String from class org.elasticsearch.index.merge.policy.AbstractMergePolicyProvider to class org.elasticsearch.index.shard.MergePolicyConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Change Package",
        "description": "Rename Package org.elasticsearch.index.merge.policy to org.elasticsearch.index.shard",
        "comment": "null",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 8239
}, {
    "id": 1107917,
    "repository": "https://github.com/elastic/elasticsearch.git",
    "sha1": "ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "url": "https://github.com/elastic/elasticsearch/commit/ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
    "author": "javanna",
    "time": "6/10/15 7:46 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected buildFQuery(builder XContentBuilder, params Params) : void extracted from protected doXContent(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 7383
}, {
    "id": 1108190,
    "repository": "https://github.com/kuujo/copycat.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/atomix.git",
    "sha1": "19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
    "url": "https://github.com/kuujo/copycat/commit/19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
    "author": "Jordan Halterman",
    "time": "6/10/15 6:01 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.ActiveState to private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.ActiveState to private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected transition : boolean from class net.kuujo.copycat.raft.state.ActiveState to class net.kuujo.copycat.raft.state.PassiveState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 858
}, {
    "id": 1108762,
    "repository": "https://github.com/raphw/byte-buddy.git",
    "sha1": "f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
    "url": "https://github.com/raphw/byte-buddy/commit/f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
    "author": "Rafael Winterhalter",
    "time": "6/10/15 5:31 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.Explicit to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmMethod to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmConstructor to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1005
}, {
    "id": 1109077,
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "sha1": "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "url": "https://github.com/FasterXML/jackson-databind/commit/44dea1f292933192ea5287d9b3e14a7daaef3c0f",
    "author": "Cowtowncoder",
    "time": "6/10/15 8:33 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222BeanB moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222BeanB",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222Bean moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222Bean",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1439
}, {
    "id": 1109425,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "6d10621465c0e6ae81ad8d240d70a55c72caeea6",
    "url": "https://github.com/Alluxio/alluxio/commit/6d10621465c0e6ae81ad8d240d70a55c72caeea6",
    "author": "Bin Fan",
    "time": "6/10/15 9:21 PM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase to class tachyon.worker.block.meta.BlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to public getBlockSize() : long from class tachyon.worker.block.meta.BlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1109449,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "0ba343846f21649e29ffc600f30a7f3e463fb24c",
    "url": "https://github.com/Alluxio/alluxio/commit/0ba343846f21649e29ffc600f30a7f3e463fb24c",
    "author": "Bin Fan",
    "time": "6/10/15 3:33 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.BlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.TempBlockMeta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110072,
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "sha1": "b40adc25008b6f608ee3eb3422c8884fff987337",
    "url": "https://github.com/orientechnologies/orientdb/commit/b40adc25008b6f608ee3eb3422c8884fff987337",
    "author": "lvca",
    "time": "6/15/15 7:43 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object extracted from public command(iCommand OCommandRequestText) : Object in class com.orientechnologies.orient.client.remote.OStorageRemote",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from private indexGet() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from protected command() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4630
}, {
    "id": 1110153,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
    "url": "https://github.com/VoltDB/voltdb/commit/e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
    "author": "wweiss",
    "time": "6/15/15 12:27 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void extracted from public setMpDRGateway(mpGateway PartitionDRGateway) : void in class org.voltdb.iv2.SpScheduler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110155,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "669e0722324965e3c99f29685517ac24d4ff2848",
    "url": "https://github.com/VoltDB/voltdb/commit/669e0722324965e3c99f29685517ac24d4ff2848",
    "author": "Manju James",
    "time": "6/15/15 10:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client extracted from public getClient(timeout long, scheme ClientAuthHashScheme) : Client in class org.voltdb.regressionsuites.RegressionSuite",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private runPausedMode(isAdmin boolean) : void extracted from public testPausedMode() : void in class org.voltdb.TestClientInterface",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork extracted from public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork in class org.voltdb.compiler.AdHocPlannerWork",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch extracted from public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch in class org.voltdb.compiler.AdHocPlannedStmtBatch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getListenerAddress(hostId int, useAdmin boolean) : String extracted from public getListenerAddress(hostId int) : String in class org.voltdb.regressionsuites.LocalCluster",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private allowPauseModeExecution(handler ClientInputHandler, procedure Procedure, invocation StoredProcedureInvocation) : boolean extracted from package handleRead(buf ByteBuffer, handler ClientInputHandler, ccxn Connection) : ClientResponseImpl in class org.voltdb.ClientInterface",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110240,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "url": "https://github.com/datastax/java-driver/commit/d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
    "author": "Kevin Gallardo",
    "time": "6/15/15 10:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package getPreparedQuery(type QueryType, columns Set<ColumnMapper<?>>, options Option[]) : PreparedStatement extracted from package getPreparedQuery(type QueryType, options Option[]) : PreparedStatement in class com.datastax.driver.mapping.Mapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1110245,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "3a0603f8f778be3219a5a0f3a7845cda65f1e172",
    "url": "https://github.com/datastax/java-driver/commit/3a0603f8f778be3219a5a0f3a7845cda65f1e172",
    "author": "Alexandre Dutra",
    "time": "6/15/15 4:48 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public values(names List<String>, values List<Object>) : Insert extracted from public values(names String[], values Object[]) : Insert in class com.datastax.driver.core.querybuilder.Insert",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 518
}, {
    "id": 1110272,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
    "url": "https://github.com/JetBrains/intellij-community/commit/3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
    "author": "Yaroslav Lepenkin",
    "time": "6/15/15 9:02 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.intellij.psi.codeStyle.autodetect.NewLineBlocksIterator moved to com.intellij.psi.formatter.common.NewLineBlocksIterator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15855
}, {
    "id": 1110282,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
    "url": "https://github.com/JetBrains/intellij-community/commit/d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
    "author": "Vladimir Krivosheev",
    "time": "6/15/15 5:59 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public canonicalizePath(url String, baseUrl Url, baseUrlIsFile boolean) : String extracted from protected canonicalizeUrl(url String, baseUrl Url, trimFileScheme boolean, sourceIndex int, baseUrlIsFile boolean) : Url in class org.jetbrains.debugger.sourcemap.SourceResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15112
}, {
    "id": 1110287,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "url": "https://github.com/JetBrains/intellij-community/commit/a97341973c3b683d62d1422e5404ed5c7ccf45f8",
    "author": "Anna Kozlova",
    "time": "6/15/15 3:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private setNewName(newText String) : PsiElement extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private setNewName(newText String) : PsiElement extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15192
}, {
    "id": 1110654,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "url": "https://github.com/SonarSource/sonarqube/commit/06fa57185cba7304c69a7d6c792a15f2632e3e02",
    "author": "Sébastien Lesaint",
    "time": "6/15/15 8:07 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.sonar.server.computation.measure.Measure.QualityGateStatus moved to org.sonar.server.computation.measure.QualityGateStatus",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3190
}, {
    "id": 1111161,
    "repository": "https://github.com/undertow-io/undertow.git",
    "sha1": "d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "url": "https://github.com/undertow-io/undertow/commit/d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
    "author": "Stuart Douglas",
    "time": "6/15/15 6:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler extracted from public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler in class io.undertow.predicate.PredicatesHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isOperator(op String) : boolean from class io.undertow.predicate.PredicateParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class io.undertow.util.PredicateTokeniser.Token moved to io.undertow.server.handlers.builder.PredicatedHandlersParser.Token",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.HandlerParser to public tokenize(string String) : Deque<Token> from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isSpecialChar(token String) : boolean from class io.undertow.predicate.PredicateParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.HandlerParser to private coerceToType(string String, token Token, type Class<?>, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private precedence(operator String) : int from class io.undertow.server.handlers.builder.HandlerParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private precedence(operator String) : int from class io.undertow.predicate.PredicateParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleArrayValue(string String, builder Token, tokens Deque, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.util.PredicateTokeniser to public error(string String, pos int, reason String) : IllegalStateException from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package parse(string String, tokens Deque) : Node extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private readArrayType(string String, tokens Deque, expectedEndToken String) : List extracted from private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node in class io.undertow.predicate.PredicateParser",
        "comment": "<p>added</p><p>Even the original methods used to call&nbsp;readArrayType, so I can't mark this as TP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private loadPredicateBuilders(classLoader ClassLoader) : Map extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>The method which is reported to be extracted seems to be in the original method being unified as well, but with different name (loadBuilders), so this is false positive.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private collapseOutput(token Object, tokens Deque) : Node from class io.undertow.predicate.PredicateParser to private collapseOutput(token Node, tokens Deque) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private handleSingleArrayValue(string String, builder HandlerBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String, last Token) : HandlerWrapper from class io.undertow.server.handlers.builder.HandlerParser to private handleSingleArrayValue(string String, builder Token, tokens Deque, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>There were two&nbsp;handleSingleArrayValue methods, they seem to be unified and moved to the target class, but one is more similar to the handleSingleArrayValue method in the target class. Since <a href='219'>the other one</a> is marked as TP, we should mark this as FP.</p><p>Update: After seeing this case, I understood that we accepted similar cases as TP in both cases.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public parsePredicate(string String, classLoader ClassLoader) : Predicate extracted from public parse(string String, classLoader ClassLoader) : Predicate in class io.undertow.predicate.PredicateParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public parse(string String, tokens Deque, classLoader ClassLoader) : Predicate inlined to public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>line 97 in the before refactoring version. The method is Inlined from class <span class='blob-code-inner'><span class='pl-en'>PredicateParser.<br /></span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private handleNode(contents String, node Node, predicateBuilders Map, handlerBuilders Map, attributeParser ExchangeAttributeParser) : List extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>DOUBLE CHECK WITH MATIN. This is one of the cases I believe should be FP because the original code does not have anything to do with the extracted code.</p><p>Nikos: The added code is completely new functionality. It has not been extracted from existing code.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public tokenize(string String) : Deque from class io.undertow.util.PredicateTokeniser to public tokenize(string String) : Deque from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private handleLineEnd(string String, operatorStack Deque, output Deque, blocks List) : void extracted from package parse(string String, tokens Deque, builders Map, attributeParser ExchangeAttributeParser) : Predicate in class io.undertow.predicate.PredicateParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method package parse(string String, tokens Deque, builders Map, attributeParser ExchangeAttributeParser) : Predicate from class io.undertow.predicate.PredicateParser to package parse(string String, tokens Deque, topLevel boolean) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private readArrayType(string String, tokens Deque, paramName Token, builder PredicateBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String) : Object from class io.undertow.predicate.PredicateParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "<p>added</p><p>&nbsp;</p><p>This is like case refactroing with ID= 4278</p><p>Two methods (with very similar body) with name readArrayType(..) from two different classes PredicateParser and HandlerParser are moved to class PredicatedHandlersParser. We also verified it with Nik.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private readArrayType(string String, tokens Deque, paramName Token, builder HandlerBuilder, attributeParser ExchangeAttributeParser, expectedEndToken String, last Token) : Object from class io.undertow.server.handlers.builder.HandlerParser to private readArrayType(string String, paramName String, value ArrayNode, parser ExchangeAttributeParser, type Class) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private loadHandlerBuilders(classLoader ClassLoader) : Map extracted from public parse(contents String, classLoader ClassLoader) : List in class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private node : Node from class io.undertow.predicate.PredicateParser.NotNode to class io.undertow.server.handlers.builder.PredicatedHandlersParser.NotNode",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper extracted from public parse(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.HandlerParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public parsePredicate(string String, classLoader ClassLoader) : Predicate extracted from public parse(string String, classLoader ClassLoader) : Predicate in class io.undertow.predicate.PredicateParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public parseHandler(string String, classLoader ClassLoader) : HandlerWrapper extracted from public parse(string String, classLoader ClassLoader) : HandlerWrapper in class io.undertow.server.handlers.builder.HandlerParser & moved to class io.undertow.server.handlers.builder.PredicatedHandlersParser",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1111363,
    "repository": "https://github.com/spring-projects/spring-data-rest.git",
    "sha1": "b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "url": "https://github.com/spring-projects/spring-data-rest/commit/b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
    "author": "Greg Turnquist",
    "time": "6/15/15 10:32 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected setupMockMvc() : void extracted from public setUp() : void in class org.springframework.data.rest.webmvc.AbstractWebIntegrationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1111984,
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "sha1": "5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
    "url": "https://github.com/checkstyle/checkstyle/commit/5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
    "author": "Roman Ivanov",
    "time": "6/15/15 1:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private processField(ast DetailAST, parentType int) : void extracted from private processIDENT(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2863
}, {
    "id": 1112031,
    "repository": "https://github.com/eclipse/vert.x.git",
    "sha1": "718782014519034b28f6d3182fd9d340b7b31a74",
    "url": "https://github.com/eclipse/vert.x/commit/718782014519034b28f6d3182fd9d340b7b31a74",
    "author": "purplefox",
    "time": "6/15/15 7:22 AM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler to class io.vertx.core.http.impl.VertxHttpHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1710
}, {
    "id": 1112091,
    "repository": "https://github.com/droolsjbpm/drools.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/drools.git",
    "sha1": "1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "url": "https://github.com/droolsjbpm/drools/commit/1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
    "author": "Mario Fusco",
    "time": "6/15/15 9:41 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue extracted from public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase) in class org.drools.core.common.AgendaGroupQueueImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private internalAddEntry(entry PropagationEntry) : void extracted from public addEntry(entry PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private evaluatingActionQueue : AtomicBoolean from class org.drools.core.impl.StatefulKnowledgeSessionImpl to class org.drools.reteoo.common.ReteWorkingMemory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public notifyHalt() : void from class org.drools.core.common.DefaultAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public notifyHalt() : void from class org.drools.reteoo.common.ReteAgenda to public notifyHalt() : void from class org.drools.core.phreak.SynchronizedBypassPropagationList",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isHighestSalience(nextRule RuleAgendaItem) : boolean renamed to private isHigherSalience(nextRule RuleAgendaItem) : boolean in class org.drools.core.phreak.RuleExecutor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda",
        "comment": "<p>Obvious case</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private internalFlush() : void renamed to public flush(workingMemory InternalWorkingMemory, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public addActivation(item AgendaItem, notify boolean) : void renamed to public fireTimedActivation(activation Activation) : boolean in class org.drools.core.common.DefaultAgenda",
        "comment": "<p>Second Opinion. Seems FP</p><p>Davood: The bodies are the same with one throw statement</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private waitAndEnterExecutionState(newState ExecutionState) : void extracted from public fireUntilHalt(agendaFilter AgendaFilter) : void in class org.drools.core.common.DefaultAgenda",
        "comment": " Statements in waitAndEnterExecutionState(..) are not part of  fireUntilHalt(..)",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public takeAll() : PropagationEntry extracted from public flush() : void in class org.drools.core.phreak.SynchronizedPropagationList",
        "comment": "<p>Laleh: hard to say if indeed it is an extract method, there&nbsp;are other changes too</p><p>Davood and Matin: internalFlush() was renamed to takeAll()</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public add(handle EventFactHandle) : void extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public peek() : EventFactHandle extracted from public assertFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : boolean in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public peek() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public peek() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "<p>Extract and Move to the inner class.</p><p>Since RefDiff does not detect 'Extract and Move refactoring' we accept it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public poll() : EventFactHandle extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public remove() : EventFactHandle extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public remove(handle EventFactHandle) : void extracted from public retractFact(context Object, fact InternalFactHandle, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public notifyHalt() : void extracted from public queueWorkingMemoryAction(action WorkingMemoryAction) : void in class org.drools.reteoo.common.ReteWorkingMemory & moved to class org.drools.core.impl.StatefulKnowledgeSessionImpl",
        "comment": "<p>added</p><p>The extracted method does not have anything to do with the original method! Should be FP. TO BE CHECKED WITH LALEH</p><p>Laleh:</p><p>in the base version we have this.agenda.notifyHalt(); agenda is of type&nbsp; InternalAgenda. In the refactored version we have notifyHalt().<br />notifyHalt() is defied (in the refactored version) in the parent of class ReteWorkingMemory which is StatefulKnowledgeSessionImpl<br />the body of notifyHalt() in StatefulKnowledgeSessionImpl we have: propagationList.notifyHalt();<br />knowing that InternalAgenda has no type relation with PropagationList =&gt; it is FP</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setExpiringHandle(expiringHandle EventFactHandle) : void extracted from public expireFacts(context Object, pctx PropagationContext, workingMemory InternalWorkingMemory) : void in class org.drools.core.rule.SlidingTimeWindow & moved to class org.drools.core.rule.SlidingTimeWindow.SlidingTimeWindowContext",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private haltRuleFiring(fireCount int, fireLimit int, localFireCount int, agenda InternalAgenda) : boolean extracted from private fire(wm InternalWorkingMemory, filter AgendaFilter, fireCount int, fireLimit int, outerStack LinkedList, agenda InternalAgenda) : int in class org.drools.core.phreak.RuleExecutor",
        "comment": "<p>There exists&nbsp; method haltRuleFiring(..) in the before refactoring version, only one parameter is added to this method in the after refactoring version and its body is modified. </p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 13908
}, {
    "id": 1112624,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
    "url": "https://github.com/spring-projects/spring-boot/commit/1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
    "author": "Oliver Gierke",
    "time": "6/15/15 4:21 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private updateEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1019
}, {
    "id": 1112627,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "20d39f7af2165c67d5221f556f58820c992d2cc6",
    "url": "https://github.com/spring-projects/spring-boot/commit/20d39f7af2165c67d5221f556f58820c992d2cc6",
    "author": "Phillip Webb",
    "time": "6/15/15 3:31 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getFullKey(path String, key String) : String extracted from private flatten(properties Properties, input Map<String,Object>, path String) : void in class org.springframework.boot.cloudfoundry.VcapApplicationListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4633
}, {
    "id": 1112638,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
    "author": "Michael Bestas",
    "time": "6/15/15 1:36 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private initTickerView() : void extracted from protected makeStatusBarView() : PhoneStatusBarView in class com.android.systemui.statusbar.phone.PhoneStatusBar",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6868
}, {
    "id": 1112642,
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "sha1": "1089957b645bde069d3864563bbf1f7c7da8045c",
    "url": "https://github.com/orientechnologies/orientdb/commit/1089957b645bde069d3864563bbf1f7c7da8045c",
    "author": "Tglman",
    "time": "6/16/15 7:33 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void extracted from private rewriteLinksInDocument(document ODocument) : void in class com.orientechnologies.orient.core.db.tool.ODatabaseImport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1755
}, {
    "id": 1112702,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "5f18bed8da4dda4fa516907ecbbe28f712e944f7",
    "url": "https://github.com/JetBrains/intellij-community/commit/5f18bed8da4dda4fa516907ecbbe28f712e944f7",
    "author": "Konstantin Bulenkov",
    "time": "6/16/15 7:14 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.intellij.util.ui.components.JBPanel moved to com.intellij.ui.components.JBPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 18800
}, {
    "id": 1116609,
    "repository": "https://github.com/belaban/JGroups.git",
    "sha1": "f1533756133dec84ce8218202585ac85904da7c9",
    "url": "https://github.com/belaban/JGroups/commit/f1533756133dec84ce8218202585ac85904da7c9",
    "author": "Bela Ban",
    "time": "6/16/15 8:16 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public isInMembersList(sender IpAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1121
}, {
    "id": 1116627,
    "repository": "https://github.com/hierynomus/sshj.git",
    "sha1": "7c26ac669a4e17ca1d2319a5049a56424fd33104",
    "url": "https://github.com/hierynomus/sshj/commit/7c26ac669a4e17ca1d2319a5049a56424fd33104",
    "author": "Jeroen van Erp",
    "time": "6/16/15 9:12 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class nl.javadude.sshj.connection.channel.ChannelCloseEofTest moved to com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.hierynomus.sshj.SshIntegrationTestBase from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldCorrectlyHandleSessionChannelEof() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public shouldCorrectlyHandleSessionChannelEof() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is 'Move class' refacoting</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setUp() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public setUp() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is Move Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public tearDown() : void from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to public tearDown() : void from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is Move calss.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private sshClient : SSHClient from class nl.javadude.sshj.connection.channel.ChannelCloseEofTest to class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest",
        "comment": "<p>added</p><p>It is Move class.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1116655,
    "repository": "https://github.com/nutzam/nutz.git",
    "sha1": "6599c748ef35d38085703cf3bd41b9b5b6af5f32",
    "url": "https://github.com/nutzam/nutz/commit/6599c748ef35d38085703cf3bd41b9b5b6af5f32",
    "author": "wendal",
    "time": "6/16/15 10:47 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public from(dao Dao, obj Object, filter FieldFilter, ignoreNull boolean, ignoreZero boolean, ignoreDate boolean, ignoreId boolean, ignoreName boolean, ignorePk boolean) : Cnd extracted from public from(dao Dao, obj Object, filter FieldFilter) : Cnd in class org.nutz.dao.Cnd",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1199
}, {
    "id": 1116663,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "url": "https://github.com/facebook/buck/commit/1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
    "author": "Thomas Gummerer",
    "time": "6/15/15 5:07 PM",
    "refactorings": [{
        "type": "Rename Class",
        "description": "Rename Class com.facebook.buck.cli.AdbOptions renamed to com.facebook.buck.cli.AdbCommandLineOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.facebook.buck.cli.TargetDeviceOptionsTest renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.facebook.buck.cli.TargetDeviceOptions renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.InstallEvent moved to com.facebook.buck.event.InstallEvent",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.InstallEventTest moved to com.facebook.buck.event.InstallEventTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.StartActivityEvent moved to com.facebook.buck.event.StartActivityEvent",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.StartActivityEventTest moved to com.facebook.buck.event.StartActivityEventTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.TestDevice moved to com.facebook.buck.android.TestDevice",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.UninstallEvent moved to com.facebook.buck.event.UninstallEvent",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.UninstallEventTest moved to com.facebook.buck.event.UninstallEventTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.AdbHelper moved to com.facebook.buck.android.AdbHelper",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cli.AdbHelperTest moved to com.facebook.buck.android.AdbHelperTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldReturnAnAbsentOptionalIfNoTargetDeviceOptionsSet() : void renamed to public shouldReturnAnAbsentOptionalIfNoTargetDeviceCommandLineOptionsSet() : void in class com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isMultiInstallModeEnabled() : boolean renamed to public getAdbOptions() : AdbOptions in class com.facebook.buck.cli.AdbCommandLineOptions",
        "comment": "Second Opinion. Two method merged to one",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdbThreadCount() : int from class com.facebook.buck.cli.AdbOptions to public getAdbThreadCount() : int from class com.facebook.buck.android.AdbOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 11495
}, {
    "id": 1116686,
    "repository": "https://github.com/processing/processing.git",
    "sha1": "d7f781da42e54824c17875a6036d3448672637f5",
    "url": "https://github.com/processing/processing/commit/d7f781da42e54824c17875a6036d3448672637f5",
    "author": "Ben Fry",
    "time": "6/16/15 10:03 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute protected ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute protected ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute protected ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute protected ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PConstants to class processing.core.PGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1544
}, {
    "id": 1116704,
    "repository": "https://github.com/linkedin/rest.li.git",
    "sha1": "bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
    "url": "https://github.com/linkedin/rest.li/commit/bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
    "author": "Xiao Ma",
    "time": "6/16/15 12:30 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected extendRecordBaseClass(templateClass JDefinedClass) : void extracted from protected generateRecord(templateClass JDefinedClass, recordSpec RecordTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected extendWrappingMapBaseClass(valueJClass JClass, mapClass JDefinedClass) : void extracted from protected generateMap(mapClass JDefinedClass, mapSpec MapTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected extendUnionBaseClass(unionClass JDefinedClass) : void extracted from protected generateUnion(unionClass JDefinedClass, unionSpec UnionTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected extendWrappingArrayBaseClass(itemJClass JClass, arrayClass JDefinedClass) : void extracted from protected generateArray(arrayClass JDefinedClass, arrayDataTemplateSpec ArrayTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1253
}, {
    "id": 1116770,
    "repository": "https://github.com/fabric8io/fabric8.git",
    "sha1": "9e61a71540da58c3208fd2c7737f793c3f81e5ae",
    "url": "https://github.com/fabric8io/fabric8/commit/9e61a71540da58c3208fd2c7737f793c3f81e5ae",
    "author": "James Strachan",
    "time": "6/15/15 4:16 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean extracted from public execute() : void in class io.fabric8.maven.CreateGogsWebhook",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1724
}, {
    "id": 1116810,
    "repository": "https://github.com/codinguser/gnucash-android.git",
    "sha1": "bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "url": "https://github.com/codinguser/gnucash-android/commit/bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
    "author": "Ngewi Fet",
    "time": "6/16/15 6:15 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public getAllTransactionsCount() : long from class org.gnucash.android.db.TransactionsDbAdapter to public getRecordsCount() : long from class org.gnucash.android.db.DatabaseAdapter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testDeletingAccountShouldDeleteSplits() : void renamed to public shouldDeleteSplitsWhenAccountDeleted() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testAlphabeticalSorting() : void renamed to public shouldBeAlphabeticallySortedByDefault() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testAddAccountWithTransaction() : void renamed to public shouldAddAccountsToDatabase() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 766
}, {
    "id": 1116953,
    "repository": "https://github.com/eclipse/vert.x.git",
    "sha1": "32a8c9086040fd6d6fa11a214570ee4f75a4301f",
    "url": "https://github.com/eclipse/vert.x/commit/32a8c9086040fd6d6fa11a214570ee4f75a4301f",
    "author": "purplefox",
    "time": "6/16/15 6:37 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private handleHttp(conn ServerConnection, ch Channel, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private handleExpectWebsockets(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 783
}, {
    "id": 1116963,
    "repository": "https://github.com/Netflix/eureka.git",
    "sha1": "1cacbe2ad700275bc575234ff2b32ee0d6493817",
    "url": "https://github.com/Netflix/eureka/commit/1cacbe2ad700275bc575234ff2b32ee0d6493817",
    "author": "Bertrand Renuart",
    "time": "6/15/15 5:16 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected fireEvent(event DiscoveryEvent) : void extracted from protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void in class com.netflix.discovery.DiscoveryClient",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.netflix.discovery.DiscoveryEvent from class com.netflix.discovery.StatusChangeEvent",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 432
}, {
    "id": 1116967,
    "repository": "https://github.com/Netflix/eureka.git",
    "sha1": "f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
    "url": "https://github.com/Netflix/eureka/commit/f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
    "author": "Bertrand Renuart",
    "time": "6/15/15 6:55 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected onRemoteStatusChanged(oldStatus InstanceInfo.InstanceStatus, newStatus InstanceInfo.InstanceStatus) : void extracted from private updateInstanceRemoteStatus() : void in class com.netflix.discovery.DiscoveryClient",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2243
}, {
    "id": 1116977,
    "repository": "https://github.com/google/closure-compiler.git",
    "sha1": "ba5e6d44526a2491a7004423ca2ad780c6992c46",
    "url": "https://github.com/google/closure-compiler/commit/ba5e6d44526a2491a7004423ca2ad780c6992c46",
    "author": "dimvar",
    "time": "6/15/15 8:22 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private getRawTypeFromJSType(t JSType) : RawNominalType inlined to private visitOtherPropertyDeclaration(getProp Node) : void in class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4222
}, {
    "id": 1117005,
    "repository": "https://github.com/crate/crate.git",
    "sha1": "72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "url": "https://github.com/crate/crate/commit/72b5348307d86b1a118e546c24d97f1ac1895bdb",
    "author": "Sebastian Utz",
    "time": "6/16/15 7:01 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private rightMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to class io.crate.planner.node.dql.join.NestedLoopNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.CollectNode to class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.join.NestedLoopNode to class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.MergeNode to class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.CollectNode to class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.join.NestedLoopNode to class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.MergeNode to class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamNodes(nodes Set<String>) : void from class io.crate.planner.node.dql.MergeNode to public downstreamNodes(downStreamNodes Set<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamNodes(nodes Set<String>) : void from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamNodes(downStreamNodes Set<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private leftMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to class io.crate.planner.node.dql.join.NestedLoopNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.MergeNode to public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamNodes(downStreamNodes List<String>) : void from class io.crate.planner.node.dql.CollectNode to public downstreamNodes(downStreamNodes List<String>) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.MergeNode to public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.CollectNode to public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamNodes() : List<String> from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamNodes() : List<String> from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.CollectNode to public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.MergeNode to public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.join.NestedLoopNode to public downstreamExecutionNodeId() : int from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public rightMergeNode(rightMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoop to public rightMergeNode(rightMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoopNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public leftMergeNode(leftMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoop to public leftMergeNode(leftMergeNode MergeNode) : void from class io.crate.planner.node.dql.join.NestedLoopNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public public rightMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to public rightMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoopNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public leftMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to public leftMergeNode() : MergeNode from class io.crate.planner.node.dql.join.NestedLoopNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public downstreamExecutionNodeId(executionNodeId int) : void from class io.crate.planner.node.dql.CollectNode to public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.AbstractDQLPlanNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1117151,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "2252ed3754bff8c39db48d172ac76ac5a4e15359",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/2252ed3754bff8c39db48d172ac76ac5a4e15359",
    "author": "Nick Bradbury",
    "time": "6/15/15 3:08 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private shouldShowTagToolbar() : boolean inlined to public onCreateView(inflater LayoutInflater, container ViewGroup, savedInstanceState Bundle) : View in class org.wordpress.android.ui.reader.ReaderPostListFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1117171,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e",
    "url": "https://github.com/infinispan/infinispan/commit/e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e",
    "author": "Dan Berindei",
    "time": "6/16/15 10:48 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected waitForCacheToStabilize(cache Cache<Object,Object>, cacheConfig Configuration) : void extracted from public perform(ctx InvocationContext) : Object in class org.infinispan.commands.CreateCacheCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public init(cacheManager EmbeddedCacheManager) : void extracted from public createCache(cacheName String, baseCacheName String) : void in class org.infinispan.cli.interpreter.session.SessionImpl",
        "comment": "Laleh: no such method named init(..) exists in the refactored version",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 7285
}, {
    "id": 1117213,
    "repository": "https://github.com/geoserver/geoserver.git",
    "sha1": "182f4d1174036417aad9d6db908ceaf64234fd5f",
    "url": "https://github.com/geoserver/geoserver/commit/182f4d1174036417aad9d6db908ceaf64234fd5f",
    "author": "Andrea Aime",
    "time": "6/17/15 6:09 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PostTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.AbstractVectorTransform renamed to org.geoserver.importer.transform.AbstractTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PreTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PreTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PostTransform",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method package error(tx VectorTransform, e Exception) : void from class org.geoserver.importer.transform.VectorTransformChain to protected error(tx ImportTransform, e Exception) : void from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method package filter(transforms List, type Class) : List from class org.geoserver.importer.transform.VectorTransformChain to protected filter(transforms List, type Class) : List from class org.geoserver.importer.transform.TransformChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 6443
}, {
    "id": 1117231,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
    "url": "https://github.com/spring-projects/spring-boot/commit/cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
    "author": "Stephane Nicoll",
    "time": "6/17/15 4:27 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideMessageCodesFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideLocale() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public resourceHandlerMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public noLocaleResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public resourceHandlerMappingOverrideAll() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public noDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public customContentNegotiatingViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public customViewResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public faviconMappingDisabled() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public resourceHandlerMappingOverrideWebjars() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public customAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public noMessageCodesResolver() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public ignoreDefaultModelOnRedirectIsTrue() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public handerAdaptersCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public handerMappingsCreated() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public resourceHandlerMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public faviconMapping() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private load(environment String[]) : void extracted from public defaultAsyncRequestTimeout() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2439
}, {
    "id": 1117232,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "b47634176fa48ad925f79886c6aaca225cb9af64",
    "url": "https://github.com/spring-projects/spring-boot/commit/b47634176fa48ad925f79886c6aaca225cb9af64",
    "author": "izeye",
    "time": "6/17/15 2:03 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll() : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll(prefix String) : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3235
}, {
    "id": 1117296,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "c9b2006381301c99b66c50c4b31f329caac06137",
    "url": "https://github.com/VoltDB/voltdb/commit/c9b2006381301c99b66c50c4b31f329caac06137",
    "author": "Ning Shi",
    "time": "6/16/15 3:01 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private open(forWrite boolean, truncate boolean) : void extracted from public open(forWrite boolean) : void in class org.voltdb.utils.PBDRegularSegment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private open(forWrite boolean, truncate boolean) : void extracted from public open(forWrite boolean) : void in class org.voltdb.utils.PBDMMapSegment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1117304,
    "repository": "https://github.com/graphhopper/graphhopper.git",
    "sha1": "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "url": "https://github.com/graphhopper/graphhopper/commit/7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
    "author": "Peter",
    "time": "6/17/15 5:42 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute protected edgeCount : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package flagsSizeIsLong : boolean from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_ELE : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getBaseGraph() : Graph from class com.graphhopper.storage.LevelGraphStorage to public getBaseGraph() : Graph from class com.graphhopper.routing.util.TestAlgoCollector.AlgoHelperEntry",
        "comment": "the method exist in the base class but the class is renamed so I think RefactoringMiner cannot find it in the new revision",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private removedNodes : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private NO_NODE : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private initialized : boolean from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_NODEA : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package bounds : BBox from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nodes : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package wayGeometry : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.GraphHopperStorage to public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_LAT : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private maxGeoRef : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.GraphHopperStorage to protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getDist(pointer long) : double from class com.graphhopper.storage.GraphHopperStorage to private getDist(pointer long) : double from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_LON : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package nodeAccess : NodeAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected setNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadNodesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private nextEdge() : int from class com.graphhopper.storage.GraphHopperStorage to private nextEdge() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nodeCount : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_LINKB : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected initStorage() : void from class com.graphhopper.storage.GraphHopperStorage to package initStorage() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private edgeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private MAX_EDGES : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package extStorage : GraphExtension from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_LINKA : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected setEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected N_EDGE_REF : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.GraphHopperStorage to private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_FLAGS : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package setEdgeCount(cnt int) : void from class com.graphhopper.storage.GraphHopperStorage to package setEdgeCount(cnt int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.GraphHopperStorage to private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.GraphHopperStorage to package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected setWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.GraphHopperStorage to protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.GraphHopperStorage to private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.GraphHopperStorage to package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_DIST : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package checkInit() : void from class com.graphhopper.storage.GraphHopperStorage to package checkInit() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.GraphHopperStorage to private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nodeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_NAME : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.GraphHopperStorage to protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.GraphHopperStorage to private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected edges : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private distToInt(distance double) : int from class com.graphhopper.storage.GraphHopperStorage to private distToInt(distance double) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_GEO : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getRemovedNodes() : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadEdgesHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected edgeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isTestingEnabled() : boolean from class com.graphhopper.storage.GraphHopperStorage to private isTestingEnabled() : boolean from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package nameIndex : NameIndex from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected E_NODEB : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private trimToSize() : void from class com.graphhopper.storage.GraphHopperStorage to protected trimToSize() : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private INT_DIST_FACTOR : double from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private stringHashCode(str String) : int from class com.graphhopper.storage.GraphHopperStorage to private stringHashCode(str String) : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package bitUtil : BitUtil from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.graphhopper.storage.LevelGraphStorageTest renamed to com.graphhopper.storage.GraphHopperStorageCHTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.graphhopper.storage.LevelGraphStorage renamed to com.graphhopper.storage.LevelGraphImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.graphhopper.storage.GraphExtension.NoExtendedStorage renamed to com.graphhopper.storage.GraphExtension.NoOpExtension",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : LevelGraph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : LevelGraph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.LocationIndexTreeForLevelGraphTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package guessStorage(g Graph, outdir Directory, encodingManager EncodingManager) : GraphStorage renamed to public newStorage(store GraphHopperStorage) : GraphHopperStorage in class com.graphhopper.util.GHUtility",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package createGraph() : LevelGraph renamed to package createGHStorage() : GraphHopperStorage in class com.graphhopper.routing.ch.PrepareContractionHierarchiesTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public newGraph(dir Directory, is3D boolean) : GraphStorage renamed to public newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageCHTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdjNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdjNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getBaseNode() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getBaseNode() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getEdge() : int from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private getEdgePointer() : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to private getEdgePointer() : long from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public toString() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "original class moved to antoher class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public next() : boolean from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public detach(reverseArg boolean) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to protected setEdgeId(edgeId int) : void from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setName(name String) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "the original Class moved to another class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public next() : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public next() : boolean from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setBaseNode(baseNode int) : EdgeIterator from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getEdge() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getEdge() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getName() : String from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method getName() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setDistance(dist double) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "<p>The inner class has moved and contains the method which is marked as moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getDistance() : double from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getDistance() : double from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method getDistance() from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAdditionalField() : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public getAdditionalField() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "original class moved to another class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": " Inner class EdgeIterable is deleted in the base version and inner class EdgeIterable is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setAdditionalField(value int) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCount() : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public getCount() : int from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public copyPropertiesTo(edge EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method copyPropertiesTo(edge EdgeIteratorState) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public fetchWayGeometry(mode int) : PointList from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public fetchWayGeometry(type int) : PointList from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": " Inner class AllEdgeIterator is deleted in the base version and inner class AllEdgeIterator is added in the refactored version, thus it is more like move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setWayGeometry(pillarNodes PointList) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "In reality method setWayGeometry(pillarNodes PointList) from inner class EdgeIterable in the base version is moved to the inner class EdgeIterable (and NOT AllEdgeIterator) in the refactored version. Even if it was reported correclty it is a move class refactroing ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to public setFlags(fl long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to public setFlags(flags long) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testTwoWeightsPerEdge2() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getGraph(ghStorage GraphHopperStorage) : Graph extracted from public testWithCoordinates() : void in class com.graphhopper.routing.AbstractRoutingAlgorithmTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getGraph(ghStorage GraphHopperStorage) : LevelGraph extracted from public createFactory(g Graph, opts AlgorithmOptions) : RoutingAlgorithmFactory in class com.graphhopper.routing.ch.DijkstraBidirectionCHTest",
        "comment": "It will be hard to detect, it needs semantic analysis.",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package close() : void extracted from public close() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package create(initSize long) : void extracted from public create(byteCount long) : GraphStorage in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package flush() : void extracted from public flush() : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package loadExisting(dim String) : void extracted from public loadExisting() : boolean in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage",
        "comment": "It is extract and move refactoring, since it is moved to class BaseGraph.java. Since RefDiff does not detect extract and move we accept it conditinally",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package setSegmentSize(bytes int) : void extracted from public setSegmentSize(bytes int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package toDetailsString() : String extracted from public toDetailsString() : String in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isCHPossible() : boolean extracted from public toString() : String in class com.graphhopper.storage.GraphHopperStorage",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isCHPossible() : boolean extracted from package _copyTo(clonedG GraphHopperStorage) : Graph in class com.graphhopper.storage.GraphHopperStorage",
        "comment": "The  statement in isCHPossible() does not match to any statements in  _copyTo(clonedG GraphHopperStorage)",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeA : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeB : int from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package baseNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package edgeId : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package nextEdge : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private maxEdges : long from class com.graphhopper.storage.GraphHopperStorage.AllEdgeIterator to class com.graphhopper.storage.BaseGraph.AllEdgeIterator",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package reverse : boolean from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package filter : EdgeFilter from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package edgePointer : long from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package adjNode : int from class com.graphhopper.storage.GraphHopperStorage.EdgeIterable to class com.graphhopper.storage.BaseGraph.EdgeIterable",
        "comment": "Move class refactoring",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setGraphHopperStorage(ghStorage GraphHopperStorage) : void extracted from protected importData() : DataReader in class com.graphhopper.reader.OSMReaderTest.GraphHopperTest & moved to class com.graphhopper.GraphHopper",
        "comment": "<p>added</p><p>It seems to be a rename method!</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3012
}, {
    "id": 1117448,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "5ff305abb3068e420d8e54a796591d75acc8b8be",
    "url": "https://github.com/SonarSource/sonarqube/commit/5ff305abb3068e420d8e54a796591d75acc8b8be",
    "author": "Duarte Meneses",
    "time": "6/15/15 12:04 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.sonar.api.utils.ProjectTempFolder from class org.sonar.api.utils.internal.DefaultTempFolder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.sonar.api.utils.ProjectTempFolder from class org.sonar.api.utils.internal.JUnitTempFolder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1117550,
    "repository": "https://github.com/brianfrankcooper/YCSB.git",
    "sha1": "0b024834549c53512ef18bce89f60ef9225d4819",
    "url": "https://github.com/brianfrankcooper/YCSB/commit/0b024834549c53512ef18bce89f60ef9225d4819",
    "author": "nitsanw",
    "time": "6/17/15 1:00 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private throttle(currTimeMillis long) : void extracted from public run() : void in class com.yahoo.ycsb.ClientThread",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 320
}, {
    "id": 1117602,
    "repository": "https://github.com/bennidi/mbassador.git",
    "sha1": "40e41d11d7847d660bba6691859b0506514bd0ac",
    "url": "https://github.com/bennidi/mbassador/commit/40e41d11d7847d660bba6691859b0506514bd0ac",
    "author": "bennidi",
    "time": "6/17/15 7:55 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class net.engio.mbassy.ConditionalHandlers.ConditionalMessageListener moved to net.engio.mbassy.ConditionalHandlerTest.ConditionalMessageListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class net.engio.mbassy.ConditionalHandlers.TestEvent moved to net.engio.mbassy.ConditionalHandlerTest.TestEvent",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testHandleMethodAccessEL() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>Ex and move method</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Rename Class",
        "description": "Rename Class net.engio.mbassy.ConditionalHandlers renamed to net.engio.mbassy.ConditionalHandlerTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testSimpleStringCondition() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>ex N move</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testNotMatchingAnyCondition() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>ex and Move</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testHandleCombinedEL() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>Extract and move</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public SyncAsync() : IBusConfiguration extracted from public testSimpleNumberCondition() : void in class net.engio.mbassy.ConditionalHandlers",
        "comment": "<p>added</p><p>Extract and move to other class. Since RefdDiff does not detect extract and move we consider it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1117635,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "f26d234e8d3458f34454583c22e3bd5f4b2a5da8",
    "url": "https://github.com/facebook/buck/commit/f26d234e8d3458f34454583c22e3bd5f4b2a5da8",
    "author": "Thomas Gummerer",
    "time": "6/16/15 4:56 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getDevices() : List<IDevice> extracted from public adbCall(adbCallable AdbCallable) : boolean in class com.facebook.buck.android.AdbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2012
}, {
    "id": 1117640,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "url": "https://github.com/facebook/buck/commit/0f8a0af934f09deef1b58e961ffe789c7299bcc1",
    "author": "Andrew Gallagher",
    "time": "6/16/15 4:55 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.ConflictingHeadersException moved to com.facebook.buck.cxx.AbstractCxxHeaders.ConflictingHeadersException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private addAllEntriesToIncludeMap(destination Map<Path,SourcePath>, source Map<Path,SourcePath>) : void from class com.facebook.buck.cxx.AbstractCxxPreprocessorInput to public addAllEntriesToIncludeMap(destination Map<Path,SourcePath>, source Map<Path,SourcePath>) : void from class com.facebook.buck.cxx.AbstractCxxHeaders",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public combineCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : CxxPreprocessorInput renamed to public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type,String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : ImmutableList<CxxPreprocessorInput> in class com.facebook.buck.cxx.CxxDescriptionEnhancer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public combineCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap, prefixHeaders ImmutableList, headerSymlinkTrees ImmutableList, frameworkSearchPaths ImmutableList, cxxPreprocessorInputFromDeps Iterable) : CxxPreprocessorInput renamed to public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap, prefixHeaders ImmutableList, headerSymlinkTrees ImmutableList, frameworkSearchPaths ImmutableList, cxxPreprocessorInputFromDeps Iterable) : ImmutableList in class com.facebook.buck.cxx.CxxDescriptionEnhancer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 3919
}, {
    "id": 1117698,
    "repository": "https://github.com/real-logic/Aeron.git",
    "sha1": "35893c115ba23bd62a7036a33390420f074ce660",
    "url": "https://github.com/real-logic/Aeron/commit/35893c115ba23bd62a7036a33390420f074ce660",
    "author": "Todd L. Montgomery",
    "time": "6/16/15 9:43 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldBeAbleToAddSinglePublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private processTimersUntil(condition BooleanSupplier) : long renamed to private doWorkUntil(condition BooleanSupplier) : long in class uk.co.real_logic.aeron.driver.DriverConductorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 764
}, {
    "id": 1117765,
    "repository": "https://github.com/GoClipse/goclipse.git",
    "sha1": "851ab757698304e9d8d4ae24ab75be619ddae31a",
    "url": "https://github.com/GoClipse/goclipse/commit/851ab757698304e9d8d4ae24ab75be619ddae31a",
    "author": "Bruno Medeiros",
    "time": "6/16/15 2:13 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public contains(otherOffset int) : boolean extracted from public inclusiveContains(otherOffset int) : boolean in class melnorme.lang.tooling.ast.SourceRange",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public contains(other SourceRange) : boolean extracted from public inclusiveContains(other SourceRange) : boolean in class melnorme.lang.tooling.ast.SourceRange",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getInvocationOffest() : int renamed to public getInvocationOffset() : int in class melnorme.lang.ide.ui.editor.actions.AbstractOpenElementOperation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 902
}, {
    "id": 1117817,
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "sha1": "da29a040ebae664274b28117b157044af0f525fa",
    "url": "https://github.com/FasterXML/jackson-databind/commit/da29a040ebae664274b28117b157044af0f525fa",
    "author": "Tatu Saloranta",
    "time": "6/17/15 3:02 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void inlined to public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from protected _configAndWriteValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "comment": "It is moved to the inner class, it should be extract and move",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from private _writeCloseable(gen JsonGenerator, value Object, cfg SerializationConfig) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "comment": "It is extract and move since the method is moved to the inner class",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public serialize(gen JsonGenerator, value Object, prov DefaultSerializerProvider) : void extracted from public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter & moved to class com.fasterxml.jackson.databind.ObjectWriter.Prefetch",
        "comment": "It is moved to the inner class, it should be extract and move",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1433
}, {
    "id": 1117822,
    "repository": "https://github.com/restlet/restlet-framework-java.git",
    "sha1": "e4de9513d0a06d381b4521211cf688b77379c39d",
    "url": "https://github.com/restlet/restlet-framework-java/commit/e4de9513d0a06d381b4521211cf688b77379c39d",
    "author": "quilicicf",
    "time": "6/17/15 6:09 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerReader to public computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1739
}, {
    "id": 1117830,
    "repository": "https://github.com/BuildCraft/BuildCraft.git",
    "sha1": "6abc40ed4850d74ee6c155f5a28f8b34881a0284",
    "url": "https://github.com/BuildCraft/BuildCraft/commit/6abc40ed4850d74ee6c155f5a28f8b34881a0284",
    "author": "Adrian",
    "time": "6/16/15 12:06 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private initTemplate() : void extracted from public initialize() : void in class buildcraft.builders.TileFiller",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private initTemplate() : void extracted from public updateEntity() : void in class buildcraft.builders.TileFiller",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1694
}, {
    "id": 1117840,
    "repository": "https://github.com/bumptech/glide.git",
    "sha1": "0d4b27952751de0caab01774048c3e0ec74824ce",
    "url": "https://github.com/bumptech/glide/commit/0d4b27952751de0caab01774048c3e0ec74824ce",
    "author": "judds",
    "time": "6/16/15 10:48 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package clearCallbacksAndListener() : void extracted from private checkCurrentDimens() : void in class com.bumptech.glide.request.target.ViewTarget.SizeDeterminer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 460
}, {
    "id": 1117875,
    "repository": "https://github.com/Netflix/eureka.git",
    "sha1": "457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "url": "https://github.com/Netflix/eureka/commit/457a7f637ddb226acf477cae0b04c8ff16ec9a50",
    "author": "David Liu",
    "time": "6/15/15 10:22 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass com.netflix.discovery.BaseDiscoveryClientTester from class com.netflix.discovery.AbstractDiscoveryClientTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 766
}, {
    "id": 1117885,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
    "url": "https://github.com/apache/cassandra/commit/ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
    "author": "Benedict Elliott Smith",
    "time": "6/16/15 12:28 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> extracted from public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getBackgroundCompactionTaskSubmitter() : Runnable extracted from protected setup() : void in class org.apache.cassandra.service.CassandraDaemon",
        "comment": "<p>Extract and Move to other class.</p><p>Since RefDiff does not support 'Extract and Move' refactoring we consider it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 6099
}, {
    "id": 1117895,
    "repository": "https://github.com/google/closure-compiler.git",
    "sha1": "ea96643364e91125f560e9508a5cbcdb776bde64",
    "url": "https://github.com/google/closure-compiler/commit/ea96643364e91125f560e9508a5cbcdb776bde64",
    "author": "moz",
    "time": "6/16/15 8:22 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private parseFormalParameterList(inTypeExpression boolean) : FormalParameterListTree extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public restParams(type Node) : TypeDeclarationNode renamed to private maybeAddType(node Node, type TypeDeclarationNode) : Node in class com.google.javascript.rhino.TypeDeclarationsIR",
        "comment": "<p>Second Opiniton. Seems FP</p><p>Davood: The bodies are quite different</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3462
}, {
    "id": 1117916,
    "repository": "https://github.com/robovm/robovm.git",
    "sha1": "bf5ee44b3b576e01ab09cae9f50300417b01dc07",
    "url": "https://github.com/robovm/robovm/commit/bf5ee44b3b576e01ab09cae9f50300417b01dc07",
    "author": "BlueRiverInteractive",
    "time": "6/16/15 1:58 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerOlympusData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeXMP() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerPentaxData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerNikonData() : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailWithTransform() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeGPS() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerMinoltaData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getThumbnailMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getLossyCompressionQuality() : double in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerCanonData() : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getOverflowServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getFileSize() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getRawData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getPixelHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getBackgroundColor() : CGColor in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getPeripherals() : NSArray<CBPeripheral> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDPIHeight() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDepth() : int in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDNGData() : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getGPSData() : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getGIFData() : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getColorModel() : CGImagePropertyColorModel in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getPNGData() : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMakerFujiData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getCIFFData() : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getExifAuxData() : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getExifData() : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getIPTCData() : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getICCProfile() : String in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getManufacturerData() : NSData in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isConnectable() : boolean in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getScanOptions() : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDateTime() : String in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getJFIFData() : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMetadata() : CGImageMetadata in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getScanServices() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getTIFFData() : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getAdvertisementData() : CBAdvertisementData in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isIndexed() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public hasAlphaChannel() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getDPIWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public getPixelWidth() : long in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public getServices() : NSArray<CBMutableService> in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public get8BIMData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isContainingFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isEmbeddingThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isEnumeratingRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key CFString) : boolean extracted from public isMergingMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isAllowingDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public get8BIMData() : CGImageProperty8BIMData renamed to public getData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isAllowingDuplicates() : boolean renamed to public allowsDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isContainingFloatingPointPixels() : boolean renamed to public containsFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isEmbeddingThumbnail() : boolean renamed to public embedsThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isEnumeratingRecursively() : boolean renamed to public enumeratesRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isMergingMetadata() : boolean renamed to public mergesMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isNotifyingOnConnection() : boolean renamed to public notifiesOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isNotifyingOnDisconnection() : boolean renamed to public notifiesOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isNotifyingOnNotification() : boolean renamed to public notifiesOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setContactInfo(contactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData renamed to public setCreatorContactInfo(creatorContactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getContactInfo() : CGImagePropertyIPTCContactInfoData renamed to public getCreatorContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnDisconnection(notifiesOnDisconnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnNotification(notifiesOnNotification boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnConnection(notifiesOnConnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions renamed to public setMergesMetadata(mergesMetadata boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setIndexed(isIndexed boolean) : CGImageProperties renamed to public setIsIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties renamed to public setEmbedsThumbnail(embedsThumbnail boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions renamed to public setEnumeratesRecursively(enumeratesRecursively boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value String) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value double) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value String) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value String) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value double) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value double) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value String) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value String) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value double) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value double) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value String) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value double) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value double) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value double) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value double) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value String) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value String) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value double) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value String) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value String) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value String) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value double) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value double) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value String) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value String) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value double) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value String) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value double) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setOrientation(orientation CGImagePropertyOrientation) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setGIFData(metadata CGImagePropertyGIFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDepth(depth int) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setExifAuxData(metadata CGImagePropertyExifAuxData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCache(cache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setHasAlphaChannel(alphaChannel boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerMinoltaData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerOlympusData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setDateTime(dateTime String) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerScanOptions extracted from public setAllowsDuplicates(allowDuplicates boolean) : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldAllowFloat(allowFloat boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setTypeIdentifierHint(typeIdentifier String) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setMaxPixelSize(size long) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setCIFFData(metadata CGImagePropertyCIFFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerOptions extracted from public setRestoreIdentifier(identifier String) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setColorModel(colorModel CGImagePropertyColorModel) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public set8BIMData(metadata CGImageProperty8BIMData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDPIWidth(dpi long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerScanOptions extracted from public setSolicitedServiceUUIDs(uuids NSArray) : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setShouldExcludeGPS(exclude boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setIPTCData(metadata CGImagePropertyIPTCData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setLossyCompressionQuality(quality double) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerFujiData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBCentralManagerOptions extracted from public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setGPSData(metadata CGImagePropertyGPSData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBPeripheralManagerOptions extracted from public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setContainsFloatingPointPixels(isFloat boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCreateThumbnailWithTransform(transform boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerNikonData(metadata CGImagePropertyNikonData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setRawData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerPentaxData(metadata CFDictionary) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setJFIFData(metadata CGImagePropertyJFIFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setFileSize(fileSize long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setTIFFData(metadata CGImagePropertyTIFFData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBConnectPeripheralOptions extracted from public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageMetadataEnumerationOptions extracted from public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setThumbnailMaxPixelSize(maxSize long) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDNGData(metadata CGImagePropertyDNGData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setDPIHeight(dpi long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setShouldExcludeXMP(exclude boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setOrientation(orientation CGImagePropertyOrientation) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setICCProfile(profile String) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPNGData(metadata CGImagePropertyPNGData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setExifData(metadata CGImagePropertyExifData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCacheImmediately(cache boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setMakerCanonData(metadata CGImagePropertyCanonData) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key NSString, value NSObject) : CBPeripheralManagerOptions extracted from public setRestoreIdentifier(identifier String) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageSourceOptions extracted from public setShouldCreateThumbnailFromImageIfAbsent(createThumbnail boolean) : CGImageSourceOptions in class org.robovm.apple.imageio.CGImageSourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPixelHeight(height long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageProperties extracted from public setPixelWidth(width long) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationProperties extracted from public setBackgroundColor(color CGColor) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public set(key CFString, value NativeObject) : CGImageDestinationCopySourceOptions extracted from public setMetadata(metadata CGImageMetadata) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImageProperty8BIM, type Class) : T extracted from public getString(property CGImageProperty8BIM) : String in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImageProperty8BIM, type Class) : T extracted from public getNumber(property CGImageProperty8BIM) : double in class org.robovm.apple.imageio.CGImageProperty8BIMData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCIFF, type Class) : T extracted from public getString(property CGImagePropertyCIFF) : String in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCIFF, type Class) : T extracted from public getNumber(property CGImagePropertyCIFF) : double in class org.robovm.apple.imageio.CGImagePropertyCIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCanon, type Class) : T extracted from public getString(property CGImagePropertyCanon) : String in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyCanon, type Class) : T extracted from public getNumber(property CGImagePropertyCanon) : double in class org.robovm.apple.imageio.CGImagePropertyCanonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyDNG, type Class) : T extracted from public getString(property CGImagePropertyDNG) : String in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyDNG, type Class) : T extracted from public getNumber(property CGImagePropertyDNG) : double in class org.robovm.apple.imageio.CGImagePropertyDNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExifAux, type Class) : T extracted from public getNumber(property CGImagePropertyExifAux) : double in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExifAux, type Class) : T extracted from public getString(property CGImagePropertyExifAux) : String in class org.robovm.apple.imageio.CGImagePropertyExifAuxData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExif, type Class) : T extracted from public getNumber(property CGImagePropertyExif) : double in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyExif, type Class) : T extracted from public getString(property CGImagePropertyExif) : String in class org.robovm.apple.imageio.CGImagePropertyExifData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGIF, type Class) : T extracted from public getString(property CGImagePropertyGIF) : String in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGIF, type Class) : T extracted from public getNumber(property CGImagePropertyGIF) : double in class org.robovm.apple.imageio.CGImagePropertyGIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGPS, type Class) : T extracted from public getNumber(property CGImagePropertyGPS) : double in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyGPS, type Class) : T extracted from public getString(property CGImagePropertyGPS) : String in class org.robovm.apple.imageio.CGImagePropertyGPSData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTCContactInfo, type Class) : T extracted from public getString(property CGImagePropertyIPTCContactInfo) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTCContactInfo, type Class) : T extracted from public getNumber(property CGImagePropertyIPTCContactInfo) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTC, type Class) : T extracted from public getString(property CGImagePropertyIPTC) : String in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyIPTC, type Class) : T extracted from public getNumber(property CGImagePropertyIPTC) : double in class org.robovm.apple.imageio.CGImagePropertyIPTCData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyJFIF, type Class) : T extracted from public getString(property CGImagePropertyJFIF) : String in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyJFIF, type Class) : T extracted from public getNumber(property CGImagePropertyJFIF) : double in class org.robovm.apple.imageio.CGImagePropertyJFIFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyNikon, type Class) : T extracted from public getString(property CGImagePropertyNikon) : String in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyNikon, type Class) : T extracted from public getNumber(property CGImagePropertyNikon) : double in class org.robovm.apple.imageio.CGImagePropertyNikonData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyPNG, type Class) : T extracted from public getString(property CGImagePropertyPNG) : String in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyPNG, type Class) : T extracted from public getNumber(property CGImagePropertyPNG) : double in class org.robovm.apple.imageio.CGImagePropertyPNGData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyTIFF, type Class) : T extracted from public getString(property CGImagePropertyTIFF) : String in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key CGImagePropertyTIFF, type Class) : T extracted from public getNumber(property CGImagePropertyTIFF) : double in class org.robovm.apple.imageio.CGImagePropertyTIFFData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 11040
}, {
    "id": 1117922,
    "repository": "https://github.com/netty/netty.git",
    "sha1": "303cb535239a6f07cbe24a033ef965e2f55758eb",
    "url": "https://github.com/netty/netty/commit/303cb535239a6f07cbe24a033ef965e2f55758eb",
    "author": "Norman Maurer",
    "time": "6/17/15 1:35 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private principal(certs Certificate[]) : Principal inlined to public getLocalPrincipal() : Principal in class io.netty.handler.ssl.OpenSslEngine.OpenSslSession",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private principal(certs Certificate[]) : Principal inlined to public getPeerPrincipal() : Principal in class io.netty.handler.ssl.OpenSslEngine.OpenSslSession",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3334
}, {
    "id": 1117938,
    "repository": "https://github.com/crate/crate.git",
    "sha1": "c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9",
    "url": "https://github.com/crate/crate/commit/c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9",
    "author": "Mathias Fussenegger",
    "time": "6/16/15 12:04 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation extracted from public plan(rootRelation AnalyzedRelation, plannerContext Planner.Context) : Plan in class io.crate.planner.consumer.ConsumingPlanner",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation extracted from public visitInsertFromQuery(insertFromSubQueryAnalyzedStatement InsertFromSubQueryAnalyzedStatement, context Context) : AnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor",
        "comment": "Laleh: no such method plan(..) exists in the refactored method - seems that the RefDiff detetcs deligations as extarct method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer",
        "comment": "<p>Matin: we need to show the inlined method class in result so that we can validate this</p><p>Laleh: for me this is FP. The method public rootRelation(relation AnalyzedRelation) : void is in class <span class='pl-smi'>io.crate.planner.consumer.<span class='blob-code-inner'><span class='pl-en'>ConsumerContext</span></span>.java. It is a setter method with the following body:</span></p><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='code-review blob-code blob-code-deletion'><span class='blob-code-inner'><span class='pl-k'>public</span> <span class='pl-k'>void</span> <span class='pl-en'>rootRelation</span>(<span class='pl-smi'>AnalyzedRelation</span> <span class='pl-v'>relation</span>) {</span></td></tr></tbody></table><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='blob-code blob-code-empty empty-cell'>&nbsp;</td></tr></tbody></table><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='code-review blob-code blob-code-deletion'><span class='blob-code-inner'>- <span class='pl-c1'>this</span><span class='pl-k'>.</span>rootRelation <span class='pl-k'>=</span> relation;</span></td></tr></tbody></table><table class='diff-table tab-size  file-diff-split' data-tab-size='8'><tbody><tr><td class='blob-code blob-code-empty empty-cell'>&nbsp;</td></tr></tbody></table><p><span class='pl-smi'><span class='blob-code-inner'>- }</span><br /></span></p><p><span class='pl-smi'><span class='blob-code-inner'>It is not an inline to me, and Davood.<br /></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer",
        "comment": "<p>Same case as refactoring with ID=373, same comments is valid here.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumer",
        "comment": "<p>Same as refactoring with ID= 373.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer",
        "comment": "<p>Same as refactoring with ID= 373</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryThenFetchConsumer",
        "comment": "<p>Same as refactoring with ID= 373.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public rootRelation(relation AnalyzedRelation) : void inlined to public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer",
        "comment": "<p>Same as refactoring with ID= 373.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 3234
}, {
    "id": 1118012,
    "repository": "https://github.com/killbill/killbill.git",
    "sha1": "66901e86e8bea2b999ed9f33e013fa5ed21507c7",
    "url": "https://github.com/killbill/killbill/commit/66901e86e8bea2b999ed9f33e013fa5ed21507c7",
    "author": "stephane brossier",
    "time": "6/16/15 8:32 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private sanityOnPaymentInfoPlugin(paymentInfoPlugin PaymentTransactionInfoPlugin) : void inlined to private doOperation() : OperationResult in class org.killbill.billing.payment.core.sm.payments.PaymentOperation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1091
}, {
    "id": 1118051,
    "repository": "https://github.com/eclipse/jetty.project.git",
    "sha1": "1f3be625e62f44d929c01f6574678eea05754474",
    "url": "https://github.com/eclipse/jetty.project/commit/1f3be625e62f44d929c01f6574678eea05754474",
    "author": "Jan Bartel",
    "time": "6/17/15 12:18 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public gatherScannables() : void extracted from public configureScanner() : void in class org.eclipse.jetty.maven.plugin.JettyRunMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isScanningEnabled() : boolean extracted from private startScanner() : void in class org.eclipse.jetty.maven.plugin.AbstractJettyMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public stopScanner() : void extracted from public restartWebApp(reconfigureScanner boolean) : void in class org.eclipse.jetty.maven.plugin.JettyRunWarExplodedMojo",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public stopScanner() : void extracted from public restartWebApp(reconfigureScanner boolean) : void in class org.eclipse.jetty.maven.plugin.JettyRunMojo",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _excludes : List from class org.eclipse.jetty.maven.plugin.ScanTargetPattern to class org.eclipse.jetty.maven.plugin.ScanPattern",
        "comment": "it is an Extract Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _includes : List from class org.eclipse.jetty.maven.plugin.ScanTargetPattern to class org.eclipse.jetty.maven.plugin.ScanPattern",
        "comment": "it is an Extract Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 7248
}, {
    "id": 1118067,
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "sha1": "2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "url": "https://github.com/Graylog2/graylog2-server/commit/2ef067fc70055fc4d55c75937303414ddcf07e0e",
    "author": "Dennis Oelkers",
    "time": "6/17/15 8:59 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class integration.BaseRestTest.KeysPresentMatcher moved to integration.BaseRestTestHelper.KeysPresentMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass integration.BaseRestTestHelper from class integration.BaseRestTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1118131,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
    "author": "jie.liu",
    "time": "6/17/15 11:39 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected reset(animateTransition boolean) : void extracted from public reset() : void in class com.android.keyguard.KeyguardAbsKeyInputView",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6165
}, {
    "id": 1118145,
    "repository": "https://github.com/rstudio/rstudio.git",
    "sha1": "9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
    "url": "https://github.com/rstudio/rstudio/commit/9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
    "author": "Kevin Ushey",
    "time": "6/17/15 9:52 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getBoolean(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private has(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private addCheckboxController(optionName String, label String) : void renamed to private makeTriStateCheckBox(label String, option String) : TriStateCheckBox in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": "The changes in the code is huge. Nikos: not rename. Davood and Matin: rename",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setValue(value boolean) : void extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": "<p>Extract and Move to the other class.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public get(key String) : String extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private set(key String, value String) : void extracted from private addCheckboxController(optionName String, label String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": "The method addCheckboxController(..) is deleted in the base version, though one statement of addCheckboxController is in method set(..) that is added in the refactored version, we cannot say it is an extract method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private unset(key String) : void extracted from private addCheckboxController(optionName String, label String) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": "The method addCheckboxController(..) is deleted in the base version, though one statement of addCheckboxController is in method unset(..) that is added in the refactored version, we cannot say it is an extract method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 2636
}, {
    "id": 1118292,
    "repository": "https://github.com/open-keychain/open-keychain.git",
    "sha1": "c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
    "url": "https://github.com/open-keychain/open-keychain/commit/c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
    "author": "Vincent Breitmoser",
    "time": "6/17/15 10:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public displayInputFragment(showOpenDialog boolean) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected cryptoOperation(cryptoInput CryptoInputParcel, showProgress boolean) : void extracted from protected cryptoOperation(cryptoInput CryptoInputParcel) : void in class org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public displayListFragment(inputUri Uri) : void renamed to public displayInputFragment(showOpenDialog boolean) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public displayListFragment(inputUris ArrayList) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity",
        "comment": "The code of displayListFragment(inputUris ArrayList) is taken from displayListFragment(inputUri Uri). Temporary variables were introduced to break the long chain of method calls.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Nikos"
    }],
    "refDiffExecutionTime": 1261
}, {
    "id": 1118338,
    "repository": "https://github.com/open-keychain/open-keychain.git",
    "sha1": "49d544d558e9c7f1106b5923204b1fbec2696cf7",
    "url": "https://github.com/open-keychain/open-keychain/commit/49d544d558e9c7f1106b5923204b1fbec2696cf7",
    "author": "Dominik Schürmann",
    "time": "6/17/15 10:26 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.sufficientlysecure.keychain.util.orbot to org.sufficientlysecure.keychain.util.tor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1118362,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "url": "https://github.com/hazelcast/hazelcast/commit/e66e49cd4a9dd8027204f712f780170a5c129f5b",
    "author": "alarmnummer",
    "time": "6/17/15 9:05 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.hazelcast.spi.ServiceInfo moved to com.hazelcast.spi.impl.servicemanager.ServiceInfo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 8786
}, {
    "id": 1118403,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "021bf45623b748e70f20d956e86d595191241786",
    "url": "https://github.com/SonarSource/sonarqube/commit/021bf45623b748e70f20d956e86d595191241786",
    "author": "Simon Brandhof",
    "time": "6/18/15 6:52 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package register(metrics Iterable<Metric>) : void extracted from public start() : void in class org.sonar.server.startup.RegisterMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package getMetricsRepositories() : List<Metric> renamed to package getPluginMetrics() : List<Metric> in class org.sonar.server.startup.RegisterMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public disable(session DbSession, ids List<Integer>) : void renamed to public disableByIds(session DbSession, ids List<Integer>) : void in class org.sonar.server.metric.persistence.MetricDao",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.sonar.core.metric.DefaultMetricFinderTest moved to org.sonar.server.metric.DefaultMetricFinderTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private removeExistingUserManagedMetrics(metrics List<Metric>) : List<Metric> inlined to package getPluginMetrics() : List<Metric> in class org.sonar.server.startup.RegisterMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldSaveIfNew() : void renamed to public insert_new_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldUpdateIfAlreadyExists() : void renamed to public update_non_custom_metrics() : void in class org.sonar.server.startup.RegisterMetricsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldFindAll() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindAll() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
        "comment": "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldFindById() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindById() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
        "comment": "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldFindByKey() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindByKey() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
        "comment": "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldFindByKeys() : void from class org.sonar.core.metric.DefaultMetricFinderTest to public shouldFindByKeys() : void from class org.sonar.server.metric.DefaultMetricFinderTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private dbClient() : DbClient extracted from public shouldSaveIfNew() : void in class org.sonar.server.startup.RegisterMetricsTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package finder : DefaultMetricFinder from class org.sonar.core.metric.DefaultMetricFinderTest to class org.sonar.server.metric.DefaultMetricFinderTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }],
    "refDiffExecutionTime": 4571
}, {
    "id": 1118473,
    "repository": "https://github.com/jfinal/jfinal.git",
    "sha1": "881baed894540031bd55e402933bcad28b74ca88",
    "url": "https://github.com/jfinal/jfinal/commit/881baed894540031bd55e402933bcad28b74ca88",
    "author": "James",
    "time": "6/18/15 5:57 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private validateLongValue(value String, min long, max long, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private validateIntegerValue(value String, min int, max int, errorKey String, errorMessage String) : void extracted from protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private validateLongValue(value String, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.jfinal.plugin.activerecord.tx.TxByActionMethods renamed to com.jfinal.plugin.activerecord.tx.TxByMethods",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public findById(id Object, columns String) : M renamed to public findByIdLoadColumns(idValues Object[], columns String) : M in class com.jfinal.plugin.activerecord.Model",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.jfinal.core.InterceptorBuilder renamed to com.jfinal.core.ActionInterceptorBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.jfinal.kit.EncryptionKit renamed to com.jfinal.kit.HashKit",
        "comment": "The classes are so similar. the only difference is that the mehtods are renamed too",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public encrypt(algorithm String, srcStr String) : String renamed to public hash(algorithm String, srcStr String) : String in class com.jfinal.kit.HashKit",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sha1Encrypt(srcStr String) : String renamed to public sha1(srcStr String) : String in class com.jfinal.kit.HashKit",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sha256Encrypt(srcStr String) : String renamed to public sha256(srcStr String) : String in class com.jfinal.kit.HashKit",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sha384Encrypt(srcStr String) : String renamed to public sha384(srcStr String) : String in class com.jfinal.kit.HashKit",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sha512Encrypt(srcStr String) : String renamed to public sha512(srcStr String) : String in class com.jfinal.kit.HashKit",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public md5Encrypt(srcStr String) : String renamed to public md5(srcStr String) : String in class com.jfinal.kit.HashKit",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected validateString(field String, notBlank boolean, minLen int, maxLen int, errorKey String, errorMessage String) : void renamed to private validateStringValue(value String, minLen int, maxLen int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbFindById(tableName String, primaryKey String, columns String) : String renamed to public forDbDeleteById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private warnning(actionKey String, controllerClass Class, method Method) : void renamed to private buildMsg(actionKey String, controllerClass Class, method Method) : String in class com.jfinal.core.ActionMapping",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public forDbDeleteById(tableName String, primaryKey String) : String renamed to public forDbFindById(tableName String, pKeys String[]) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getController() : Controller from class com.jfinal.core.ActionInvocation to protected getController() : Controller from class com.jfinal.validate.Validator",
        "comment": "Class ActionInvocation in base version is deleted, thus it does not total comply with the defenition of move method. Morover it seems that com.jfinal.core.ActionInvocation is moved and rename to class com.jfinal.aop.InvocationWrapper ",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.jfinal.aop.ActionInvocationWrapper renamed to com.jfinal.aop.InvocationWrappe",
        "comment": "<p>The new name is&nbsp;com.jfinal.aop.InvocationWrapper (in the dataset one r is missing)</p><p>There is another parent class where Action is removed from the name. It seems to be a consistent renaming of a class while new functionality is also added</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.jfinal.core.ActionInvocation renamed to com.jfinal.aop.Invocation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public invoke() : void from class com.jfinal.aop.ActionInvocationWrapper to public invoke() : void from class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public invoke() : void from class com.jfinal.core.ActionInvocation to public invoke() : void from class com.jfinal.aop.Invocation",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getControllerKey() : String from class com.jfinal.core.ActionInvocation to public getControllerKey() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getViewPath() : String from class com.jfinal.core.ActionInvocation to public getViewPath() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMethodName() : String from class com.jfinal.core.ActionInvocation to public getMethodName() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getActionKey() : String from class com.jfinal.core.ActionInvocation to public getActionKey() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getControllerKey() : String from class com.jfinal.aop.ActionInvocationWrapper to public getControllerKey() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMethod() : Method from class com.jfinal.core.ActionInvocation to public getMethod() : Method from class com.jfinal.aop.InvocationWrapper",
        "comment": "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public getViewPath() : String from class com.jfinal.aop.ActionInvocationWrapper to public getViewPath() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMethodName() : String from class com.jfinal.aop.ActionInvocationWrapper to public getMethodName() : String from class com.jfinal.aop.InvocationWrapper",
        "comment": "ActionInvocation is deleted in base version and InvocationWrapper is added in the refactored version. Thus it is Move and rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getActionKey() : String extracted from public getActionKey() : String in class com.jfinal.core.ActionInvocation",
        "comment": "<p>Extract and Move to other class</p><p>Same as: <small> http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</small></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getControllerKey() : String extracted from public getControllerKey() : String in class com.jfinal.core.ActionInvocation",
        "comment": "<p>Extract and Move to other class.</p><p>Same as <small>: http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</small></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getMethod() : Method extracted from public getMethod() : Method in class com.jfinal.core.ActionInvocation",
        "comment": "<p>Extract and Move to other class.</p><p>Same case as: Same as : http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getMethodName() : String extracted from public getMethodName() : String in class com.jfinal.core.ActionInvocation",
        "comment": "<p>Extract and Move to the inner class.</p><p>Same as : http://refactoring.encs.concordia.ca/oracle/refactoring-details/1118473/935</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getViewPath() : String extracted from public getViewPath() : String in class com.jfinal.core.ActionInvocation",
        "comment": "<p>Extract and Move to the inner class.</p><p>The class ActionInvocation is renamed to Invocation which is TP. However, this extract method is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List) : void in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
        "comment": "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added to superclass&nbsp; of AnsiSqlDialect.</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List) : void in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
        "comment": "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean'&nbsp; is added to the superClass PostgreSqlDialect.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
        "comment": "<p>Extract and Move to the other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is moved to the superClass&nbsp; of OracleDialect.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List) : void in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
        "comment": "<p>Extract and Move to other class.</p><p>&nbsp;The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean'&nbsp;&nbsp; is added to the superclass of MysqlDialect.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forDbUpdate(tableName String, primaryKey String, id Object, record Record, sql StringBuilder, paras List) : void in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
        "comment": "<p>Extract and Move to&nbsp; other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added to the superclass of Sqlite3Dialect</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected isPrimaryKey(colName String, pKeys String[]) : boolean extracted from public forModelSave(table Table, attrs Map, sql StringBuilder, paras List) : void in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
        "comment": "<p>Extract and Move to other class.</p><p>The method 'protected isPrimaryKey(colName String, pKeys String[]) : boolean' is added in superClass of com.jfinal.plugin.activerecord.dialect.OracleDialect .java</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.MysqlDialect",
        "comment": "<p>Extract and Move to other class.</p><p>Same as refactoring with ID= 946.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.OracleDialect",
        "comment": "<p>Extract and Move to other class.</p><p>Same as refactoring with ID = 946.</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.Sqlite3Dialect",
        "comment": "<p>Extract and Move to other class.</p><p>Same as refactoring with ID =946.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.AnsiSqlDialect",
        "comment": "<p>Extract and Move to the other class.</p><p>Same as refactoring with ID = 946.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected trimPrimaryKeys(pKeys String[]) : void extracted from public forDbFindById(tableName String, primaryKey String, columns String) : String in class com.jfinal.plugin.activerecord.dialect.PostgreSqlDialect",
        "comment": "<p>Extract and Move to the other class.</p><p>We cannot even consider it as Extract and Move.</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private inters : Interceptor[] from class com.jfinal.aop.ActionInvocationWrapper to class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private index : int from class com.jfinal.aop.ActionInvocationWrapper to class com.jfinal.aop.InvocationWrapper",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private index : int from class com.jfinal.core.ActionInvocation to class com.jfinal.aop.Invocation",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private inters : Interceptor[] from class com.jfinal.core.ActionInvocation to class com.jfinal.aop.Invocation",
        "comment": "It seems that we have rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }],
    "refDiffExecutionTime": 1822
}, {
    "id": 1118508,
    "repository": "https://github.com/jberkel/sms-backup-plus.git",
    "sha1": "c265bde2ace252bc1e1c65c6af93520e5994edd2",
    "url": "https://github.com/jberkel/sms-backup-plus/commit/c265bde2ace252bc1e1c65c6af93520e5994edd2",
    "author": "Jan Berkel",
    "time": "6/18/15 8:52 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getTokenForLogging() : String extracted from public toString() : String in class com.zegoggles.smssync.auth.OAuth2Token",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 250
}, {
    "id": 1118568,
    "repository": "https://github.com/AsyncHttpClient/async-http-client.git",
    "sha1": "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
    "url": "https://github.com/AsyncHttpClient/async-http-client/commit/f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
    "author": "Stephane Landelle",
    "time": "6/17/15 6:11 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package signatureBaseString(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : StringBuilder extracted from public calculateSignature(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : String in class org.asynchttpclient.oauth.OAuthSignatureCalculator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 548
}, {
    "id": 1118645,
    "repository": "https://github.com/square/okhttp.git",
    "sha1": "c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "url": "https://github.com/square/okhttp/commit/c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
    "author": "Jake Wharton",
    "time": "6/17/15 7:40 PM",
    "refactorings": [{
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyConnection renamed to com.squareup.okhttp.internal.framed.FramedConnection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource renamed to com.squareup.okhttp.internal.framed.FramedStream.FramedDataSource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout renamed to com.squareup.okhttp.internal.framed.FramedStream.StreamTimeout",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink renamed to com.squareup.okhttp.internal.framed.FramedStream.FramedDataSink",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream renamed to com.squareup.okhttp.internal.framed.FramedStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyServer renamed to com.squareup.okhttp.internal.framed.FramedServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.internal.http.SpdyTransport renamed to com.squareup.okhttp.internal.http.FramedTransport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.squareup.okhttp.mockwebserver.MockWebServer.SpdySocketHandler renamed to com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package isSpdy() : boolean renamed to package isFramed() : boolean in class com.squareup.okhttp.Connection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.hpackjson.Story moved to com.squareup.okhttp.internal.framed.hpackjson.Story",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.FrameReader moved to com.squareup.okhttp.internal.framed.FrameReader",
        "comment": "<div><div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p><p>&nbsp;</p></div></div>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.HpackDecodeTestBase moved to com.squareup.okhttp.internal.framed.HpackDecodeTestBase",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p style='color: gray;'>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Spdy3ConnectionTest moved to com.squareup.okhttp.internal.framed.Spdy3ConnectionTest",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p style='color: gray;'>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Http2ConnectionTest moved to com.squareup.okhttp.internal.framed.Http2ConnectionTest",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p style='color: gray;'>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.HuffmanTest moved to com.squareup.okhttp.internal.framed.HuffmanTest",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.hpackjson.HpackJsonUtil moved to com.squareup.okhttp.internal.framed.hpackjson.HpackJsonUtil",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.HpackDecodeInteropTest moved to com.squareup.okhttp.internal.framed.HpackDecodeInteropTest",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Spdy3Test moved to com.squareup.okhttp.internal.framed.Spdy3Test",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Http2 moved to com.squareup.okhttp.internal.framed.Http2",
        "comment": "<div><div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div><p style='color: gray;'>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.PushObserver moved to com.squareup.okhttp.internal.framed.PushObserver",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.SettingsTest moved to com.squareup.okhttp.internal.framed.SettingsTest",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><div><div><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since RefDiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div></div></div><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Spdy3 moved to com.squareup.okhttp.internal.framed.Spdy3",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p></div><p style='color: gray;'>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Variant moved to com.squareup.okhttp.internal.framed.Variant",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Settings moved to com.squareup.okhttp.internal.framed.Settings",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span>.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Ping moved to com.squareup.okhttp.internal.framed.Ping",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.ErrorCode moved to com.squareup.okhttp.internal.framed.ErrorCode",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span>.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Huffman moved to com.squareup.okhttp.internal.framed.Huffman",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span>.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.HpackTest moved to com.squareup.okhttp.internal.framed.HpackTest",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.FrameWriter moved to com.squareup.okhttp.internal.framed.FrameWriter",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.MockSpdyPeer moved to com.squareup.okhttp.internal.framed.MockSpdyPeer",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Header moved to com.squareup.okhttp.internal.framed.Header",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.HpackRoundTripTest moved to com.squareup.okhttp.internal.framed.HpackRoundTripTest",
        "comment": "<div><p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'.</span></span></span></p></div>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Http2FrameLoggerTest moved to com.squareup.okhttp.internal.framed.Http2FrameLoggerTest",
        "comment": "<p>I<small></small>t is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.HeadersMode moved to com.squareup.okhttp.internal.framed.HeadersMode",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.hpackjson.Case moved to com.squareup.okhttp.internal.framed.hpackjson.Case",
        "comment": "<p>I<small></small>t is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.BaseTestHandler moved to com.squareup.okhttp.internal.framed.BaseTestHandler",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Http2Test moved to com.squareup.okhttp.internal.framed.Http2Test",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.NameValueBlockReader moved to com.squareup.okhttp.internal.framed.NameValueBlockReader",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.Hpack moved to com.squareup.okhttp.internal.framed.Hpack",
        "comment": "<p>It is a 'rename package' refactorin: <span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>spdy-&gt;framed.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'><span class='x x-first x-last'>Since Refdiff cannot detect package level refactorings we can consider it as 'move class'</span></span></span></p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class com.squareup.okhttp.internal.spdy.IncomingStreamHandler moved to com.squareup.okhttp.internal.framed.IncomingStreamHandler",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Change Package",
        "description": "Rename Package com.squareup.okhttp.internal.spdy to com.squareup.okhttp.internal.framed",
        "comment": "null",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1118798,
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "sha1": "247232bdde24b81814a82100743f77d881aaf06b",
    "url": "https://github.com/spring-projects/spring-integration/commit/247232bdde24b81814a82100743f77d881aaf06b",
    "author": "Gunnar Hillert",
    "time": "6/17/15 9:57 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File extracted from private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File in class org.springframework.integration.file.FileWritingMessageHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2664
}, {
    "id": 1118835,
    "repository": "https://github.com/grails/grails-core.git",
    "sha1": "480537e0f8aaf50a7648bf445b33230aa32a9b44",
    "url": "https://github.com/grails/grails-core/commit/480537e0f8aaf50a7648bf445b33230aa32a9b44",
    "author": "graemerocher",
    "time": "6/18/15 5:02 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public weaveTestMixins(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveTestMixins(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public weaveMixinsIntoClass(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveMixinsIntoClass(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1177
}, {
    "id": 1119037,
    "repository": "https://github.com/apache/pig.git",
    "sha1": "7a1659c12d76b510809dea1dea1f5100bcf4cd60",
    "url": "https://github.com/apache/pig/commit/7a1659c12d76b510809dea1dea1f5100bcf4cd60",
    "author": "Xuefu Zhang",
    "time": "6/18/15 1:08 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private initialize() : void extracted from public launchPig(physicalPlan PhysicalPlan, grpName String, pigContext PigContext) : PigStats in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private startSparkJob() : void renamed to private addFilesToSparkJob() : void in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2060
}, {
    "id": 1119082,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "ab298886b59f4ad0235cd6d5764854189eb59eb6",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/ab298886b59f4ad0235cd6d5764854189eb59eb6",
    "author": "Danilo Ercoli",
    "time": "6/18/15 8:36 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void extracted from public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void in class org.wordpress.android.ui.stats.StatsUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.wordpress.android.ui.stats.StatsSinglePostDetailsActivity renamed to org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1502
}, {
    "id": 1119086,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
    "author": "Oguz Kocer",
    "time": "6/18/15 7:25 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getIconImageURL(size int, iconUrl String, blogUrl String) : String extracted from public getIconImageURL(size int) : String in class org.wordpress.android.models.Blog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1995
}, {
    "id": 1119109,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "url": "https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
    "author": "Pedro Ruivo",
    "time": "6/18/15 3:08 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public throwRollbackExceptionIfAny() : void extracted from public commit() : void in class org.infinispan.transaction.tm.DummyTransaction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected assertNoTransactions(cacheName String) : void extracted from protected assertNoTransactions() : void in class org.infinispan.test.MultipleCacheManagersTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected eventually(message String, ec Condition, timeout long, pollInterval long, unit TimeUnit) : void extracted from protected eventually(ec Condition, timeout long, pollInterval long, unit TimeUnit) : void in class org.infinispan.test.AbstractInfinispanTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected eventually(message String, ec Condition, timeoutMillis long, loops int) : void extracted from protected eventually(ec Condition, timeoutMillis long, loops int) : void in class org.infinispan.test.AbstractInfinispanTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void extracted from private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object in class org.infinispan.interceptors.TxInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private localGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand, isGetCacheEntry boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private remoteGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand) : InternalCacheEntry in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void inlined to public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createRollbackRpcOptions() : RpcOptions extracted from public visitRollbackCommand(ctx TxInvocationContext, command RollbackCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private configuration : Configuration from class org.infinispan.tx.TransactionXaAdapterTmIntegrationTest to class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public removeRecoveryInformationFromCluster(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected assertNotLocked(cache Cache, key Object) : void renamed to protected assertEventuallyNotLocked(cache Cache, key Object) : void in class org.infinispan.test.AbstractCacheTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected createPrepareRpcOptions() : RpcOptions extracted from protected prepareOnAffectedNodes(ctx TxInvocationContext, command PrepareCommand, recipients Collection, ignored boolean) : void in class org.infinispan.interceptors.distribution.VersionedDistributionInterceptor",
        "comment": "<p>Extract and Move to the other class.</p><p>Moved to class <span class='blob-code-inner'><span class='pl-smi'>org.infinispan.interceptors.distribution</span>.<a class='link-gray-dark' title='core/src/main/java/org/infinispan/interceptors/distribution/TxDistributionInterceptor.java' href='https://github.com/infinispan/infinispan/commit/ce4f6292d6350a2c6b82d995352fdf6d07042c9c#diff-1f89fae5cdc8e35ed85504c05f20d66e'>TxDistributionInterceptor.java</a></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private extractJGroupsTransport(transport Transport) : JGroupsTransport extracted from private channel(cache Cache) : Channel in class org.infinispan.partitionhandling.BasePartitionHandlingTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 7011
}, {
    "id": 1119473,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "0eaa5217883cfeca688aad1d462192c194741827",
    "url": "https://github.com/SonarSource/sonarqube/commit/0eaa5217883cfeca688aad1d462192c194741827",
    "author": "Jean-Baptiste Lievremont",
    "time": "6/19/15 9:57 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter to class org.sonar.server.issue.InternalRubyIssueService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter to class org.sonar.server.issue.InternalRubyIssueServiceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2767
}, {
    "id": 1119504,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "url": "https://github.com/neo4j/neo4j/commit/b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
    "author": "Mats Rydberg",
    "time": "6/18/15 7:27 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public lookup(value Object) : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public scan() : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public newMatchAllQuery() : Query renamed to public newAllQuery() : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public newQuery(value Object) : Query renamed to public newValueQuery(value Object) : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected getAllNodes(propertyValue String) : List<Long> renamed to protected getAllNodesWithProperty(propertyValue String) : List<Long> in class org.neo4j.kernel.api.index.IndexAccessorCompatibility",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public newQueryForChangeOrRemove(nodeId long) : Term renamed to public newTermForChangeOrRemove(nodeId long) : Term in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected reader : IndexReader from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest to class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected terms : TermEnum from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected searcher : IndexSearcher from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest to class org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 8600
}, {
    "id": 1119656,
    "repository": "https://github.com/rackerlabs/blueflood.git",
    "sha1": "c76e6e1f27a6697b3b88ad4ed710441b801afb3b",
    "url": "https://github.com/rackerlabs/blueflood/commit/c76e6e1f27a6697b3b88ad4ed710441b801afb3b",
    "author": "Tilottama Gaat",
    "time": "6/18/15 3:41 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to class com.rackspacecloud.blueflood.http.DefaultHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpEventsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 617
}, {
    "id": 1119661,
    "repository": "https://github.com/antlr/antlr4.git",
    "sha1": "a9ca2efae56815dc464189b055ffe9da23766f7f",
    "url": "https://github.com/antlr/antlr4/commit/a9ca2efae56815dc464189b055ffe9da23766f7f",
    "author": "parrt",
    "time": "6/18/15 9:25 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getDescendants(t ParseTree) : List<ParseTree> extracted from public descendants(t ParseTree) : List<ParseTree> in class org.antlr.v4.runtime.tree.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getAmbuityParserInterpreter(g Grammar, originalParser Parser, tokens TokenStream) : ParserInterpreter extracted from public getAllPossibleParseTrees(g Grammar, originalParser Parser, tokens TokenStream, decision int, alts BitSet, startIndex int, stopIndex int, startRuleIndex int) : List<ParserRuleContext> in class org.antlr.v4.tool.GrammarParserInterpreter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterp(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void renamed to public testAmbiguousTrees(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void in class org.antlr.v4.test.tool.TestAmbigParseTrees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1313
}, {
    "id": 1119677,
    "repository": "https://github.com/k9mail/k-9.git",
    "sha1": "23c49d834d3859fc76a604da32d1789d2e863303",
    "url": "https://github.com/k9mail/k-9/commit/23c49d834d3859fc76a604da32d1789d2e863303",
    "author": "Marcus Wolschon",
    "time": "6/18/15 9:19 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private setNotificationContent(context Context, message Message, sender CharSequence, subject CharSequence, builder NotificationCompat.Builder, accountDescr String) : NotificationCompat.Builder extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private buildNotificationNavigationStack(context Context, account Account, message LocalMessage, newMessages int, unreadCount int, allRefs ArrayList<MessageReference>) : TaskStackBuilder extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private addWearActions(builder NotificationCompat.Builder, totalMsgCount int, msgCount int, account Account, allRefs ArrayList<MessageReference>, messages List<? extends Message>, notificationID int) : void extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1119732,
    "repository": "https://github.com/processing/processing.git",
    "sha1": "8707194f003444a9fb8e00bffa2893ef0c2492c6",
    "url": "https://github.com/processing/processing/commit/8707194f003444a9fb8e00bffa2893ef0c2492c6",
    "author": "codeanticode",
    "time": "6/18/15 1:03 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private setFrameCentered() : void inlined to public placeWindow(location int[], editorLocation int[]) : void in class processing.opengl.PSurfaceJOGL",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 703
}, {
    "id": 1119758,
    "repository": "https://github.com/baasbox/baasbox.git",
    "sha1": "d949fe9079a82ee31aa91244aa67baaf56b7e28f",
    "url": "https://github.com/baasbox/baasbox/commit/d949fe9079a82ee31aa91244aa67baaf56b7e28f",
    "author": "Claudio",
    "time": "6/18/15 7:33 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public execMultiLineCommands(db ODatabaseRecordTx, log boolean, stopOnException boolean, commands String[]) : void extracted from public execMultiLineCommands(db ODatabaseRecordTx, log boolean, commands String[]) : void in class com.baasbox.db.DbHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 638
}, {
    "id": 1119833,
    "repository": "https://github.com/fabric8io/fabric8.git",
    "sha1": "07807aed847e1d0589c094461544e54a2677cbf5",
    "url": "https://github.com/fabric8io/fabric8/commit/07807aed847e1d0589c094461544e54a2677cbf5",
    "author": "Ioannis Canellos",
    "time": "6/18/15 11:29 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method protected isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.JsonMojo to package isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private DEFAULT_CONFIG_FILE_NAME : String from class io.fabric8.maven.ApplyMojo to class io.fabric8.maven.AbstractFabric8Mojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private hasKubernetesJson(f File) : boolean from class io.fabric8.maven.ApplyMojo to package hasKubernetesJson(f File) : boolean from class io.fabric8.maven.AbstractFabric8Mojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected combineDependencies : boolean from class io.fabric8.maven.JsonMojo to class io.fabric8.maven.AbstractFabric8Mojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private getDependencies() : Set<File> from class io.fabric8.maven.ApplyMojo to package getDependencies() : Set<File> from class io.fabric8.maven.AbstractFabric8Mojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5272
}, {
    "id": 1119965,
    "repository": "https://github.com/Netflix/eureka.git",
    "sha1": "5103ace802b2819438318dd53b5b07512aae0d25",
    "url": "https://github.com/Netflix/eureka/commit/5103ace802b2819438318dd53b5b07512aae0d25",
    "author": "Tomasz Bak",
    "time": "6/17/15 1:22 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public fillUpRegistryOfServer(serverIdx int, count int, instanceTemplate InstanceInfo) : void extracted from public fillUpRegistry(count int, instanceTemplate InstanceInfo) : void in class com.netflix.eureka2.integration.EurekaDeploymentClients",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testRegistrationAndDiscoveryServices() : void renamed to public testRegistrationAndInterestServices() : void in class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2659
}, {
    "id": 1119978,
    "repository": "https://github.com/google/closure-compiler.git",
    "sha1": "5a853a60f93e09c446d458673bc7a2f6bb26742c",
    "url": "https://github.com/google/closure-compiler/commit/5a853a60f93e09c446d458673bc7a2f6bb26742c",
    "author": "blickly",
    "time": "6/18/15 2:34 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory moved to com.google.javascript.jscomp.JsdocToEs6TypedConverter.TypeDeclarationsIRFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private assertParseTypeAndConvert(typeExpr String) : NodeSubject from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to private assertParseTypeAndConvert(typeExpr String) : NodeSubject from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertFunctionNewType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionNewType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertFunctionReturnType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionReturnType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertFunctionThisType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionThisType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertFunctionType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertFunctionType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "<p>Class TypeDeclarationsIRFactoryTest is deleted in the base version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class merging and thus not move method</p><p>Davood &amp; Matin: It is move method even though the base class is deleted</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertNamedTypes() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertNamedTypes() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertNonNullableType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertNonNullableType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertNullableType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertNullableType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertOptionalFunctionParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertOptionalFunctionParameters() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertRecordType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertRecordType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertRecordTypeWithTypeApplication() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertRecordTypeWithTypeApplication() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertSimpleTypes() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertSimpleTypes() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertTypeApplication() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertTypeApplication() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertTypeUnion() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertTypeUnion() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Class TypeDeclarationsIRFactoryTest is deleted in the base version and class JsdocToEs6TypedConverterTest is added in the refactored version. Most of the methods in class assertParseTypeAndConvert are moved to JsdocToEs6TypedConverterTest. So it is more like a class renaming and thus not move method",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testConvertVariableParameters() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testConvertVariableParameters() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateRecordType() : void from class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactoryTest to public testCreateRecordType() : void from class com.google.javascript.jscomp.JsdocToEs6TypedConverterTest",
        "comment": "Possible merge class with the JsdocToEs6TypedConverterTest",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1865
}, {
    "id": 1120023,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "ed966510ccf8441115614e2258aea61df0ea55f5",
    "url": "https://github.com/Alluxio/alluxio/commit/ed966510ccf8441115614e2258aea61df0ea55f5",
    "author": "Bin Fan",
    "time": "6/18/15 8:46 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private reserveSpace(size long) : void extracted from public addBlockMeta(block BlockMeta) : Optional<BlockMeta> in class tachyon.worker.block.meta.StorageDir",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private reclaimSpace(size long) : void extracted from public removeTempBlockMeta(tempBlockMeta TempBlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private reclaimSpace(size long) : void extracted from public removeBlockMeta(block BlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private reserveSpace(size long) : void extracted from public addTempBlockMeta(tempBlockMeta TempBlockMeta) : boolean in class tachyon.worker.block.meta.StorageDir",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120077,
    "repository": "https://github.com/apache/camel.git",
    "sha1": "5e08a9e8e93a2f117b5fbec9c6d54500d8e99a4d",
    "url": "https://github.com/apache/camel/commit/5e08a9e8e93a2f117b5fbec9c6d54500d8e99a4d",
    "author": "Willem Jiang",
    "time": "6/19/15 12:15 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public copyAttachments(that Message) : void extracted from public copyFrom(that Message) : void in class org.apache.camel.impl.MessageSupport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 7895
}, {
    "id": 1120106,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "ece12f9d370108549fffac105e4bcb7faeaaf124",
    "url": "https://github.com/spring-projects/spring-framework/commit/ece12f9d370108549fffac105e4bcb7faeaaf124",
    "author": "Sam Brannen",
    "time": "6/19/15 10:27 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithMissingAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithNullAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private validateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : void renamed to private enrichAndValidateAttributes(attributes Map<String,Object>, annotationType Class<? extends Annotation>) : Map<String,Object> in class org.springframework.core.annotation.MapAnnotationAttributeExtractor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5439
}, {
    "id": 1120125,
    "repository": "https://github.com/eucalyptus/eucalyptus.git",
    "sha1": "5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "url": "https://github.com/eucalyptus/eucalyptus/commit/5a38d0bca0e48853c3f7c00a0f098bada64797df",
    "author": "Evan Thomas",
    "time": "6/17/15 2:26 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricLoadCacheKey moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricLoadCacheKey",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricCacheKey moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricCacheKey",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricCache moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricCache",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cluster.callback.CloudWatchHelper moved to com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Rename Package com.eucalyptus.cloudwatch.domain.absolute to com.eucalyptus.cluster.callback.cloudwatch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cloudwatch.domain.absolute.AbsoluteMetricHelper moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricHelper",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cloudwatch.domain.absolute.AbsoluteMetricHistory moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricHistory",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricEntity.Units moved to com.eucalyptus.cloudwatch.common.internal.metricdata.Units",
        "comment": "<p>Laleh: the enum Units is defined in class <span class='pl-smi'>com.eucalyptus.cloudwatch.domain.metricdata</span>.MetricEntity.java is moved as a stand-alone enum to the new file <span class='blob-code-inner'><span class='pl-smi'>com.eucalyptus.cloudwatch.common.internal.metricdata.Units.java.</span></span></p><p><span class='blob-code-inner'><span class='pl-smi'>We can consider it as CTP because if the enum was an inner class then it would be a 'move class' refactoring.<br /></span></span></p><p><span class='blob-code-inner'><span class='pl-smi'>What do you think?</span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private addToPutMetricDataList(putMetricDataList List, cloudWatchSupplier Supplier) : void renamed to private addToQueueItems(queueItems List, cloudWatchSupplier Supplier) : void in class com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private adjustAbsoluteInstanceCPUStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteInstanceCPUStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private adjustAbsoluteInstanceStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteInstanceStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, instanceId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private adjustAbsoluteVolumeQueueLengthStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, volumeId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteVolumeQueueLengthStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, volumeId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private adjustAbsoluteVolumeStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, volumeId String) : boolean from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private adjustAbsoluteVolumeStatisticSet(cache AbsoluteMetricCache, datum MetricDatum, absoluteMetricName String, relativeMetricName String, volumeId String) : boolean from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "class AbsoluteMetricQueue is added in the refactored version, it is more like an extract class refactoring since other  methods from class MetricDataQueue are also moved to class AbsoluteMetricQueue",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private convertVolumeTotalReadWriteTimeToVolumeIdleTime(datum MetricDatum) : void from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private convertVolumeTotalReadWriteTimeToVolumeIdleTime(datum MetricDatum) : void from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createVolumeThroughputMetric(accountId String, nameSpace String, metricType MetricType, datum MetricDatum) : MetricQueueItem from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to private createVolumeThroughputMetric(accountId String, nameSpace String, datum MetricDatum) : AbsoluteMetricQueueItem from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "class AbsoluteMetricQueue is added in the refactored version, it is more like an extract class refactoring since other  methods from class MetricDataQueue are also moved to class AbsoluteMetricQueue",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method protected dealWithAbsoluteMetrics(dataBatch List) : List from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to protected dealWithAbsoluteMetrics(dataBatch List) : List from class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addQueueItems(queueItems List) : void extracted from private processCloudWatchStats(msg DescribeSensorsResponse) : void in class com.eucalyptus.cluster.callback.DescribeSensorCallback",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private EBS_ABSOLUTE_METRICS : Map from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private EC2_ABSOLUTE_METRICS : Map from class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue to class com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue",
        "comment": "It is an extract class since RefDiff cannot detect these refactorings consider as TP",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2499
}, {
    "id": 1120191,
    "repository": "https://github.com/eclipse/jetty.project.git",
    "sha1": "13b63c194b010201c439932ece2f1bc628ebf287",
    "url": "https://github.com/eclipse/jetty.project/commit/13b63c194b010201c439932ece2f1bc628ebf287",
    "author": "Greg Wilkins",
    "time": "6/19/15 2:27 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private __propertyPattern : Pattern from class org.eclipse.jetty.xml.XmlConfiguration to class org.eclipse.jetty.start.Props",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1402
}, {
    "id": 1120196,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "4bfe164cc8b4556b98df18098b162e0a84038b32",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/4bfe164cc8b4556b98df18098b162e0a84038b32",
    "author": "Danilo Ercoli",
    "time": "6/19/15 12:15 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private trackLastVisibleTab(position int) : void extracted from protected onResume() : void in class org.wordpress.android.ui.main.WPMainActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1371
}, {
    "id": 1120213,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "03573a655bcbb77f7a76d8e22d851cc22796b4f8",
    "url": "https://github.com/infinispan/infinispan/commit/03573a655bcbb77f7a76d8e22d851cc22796b4f8",
    "author": "William Burns",
    "time": "6/19/15 11:03 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected shouldInvoke(event Event<K,V>) : boolean extracted from protected shouldInvoke(event CacheEntryEvent<K,V>, isLocalNodePrimaryOwner boolean) : CacheEntryEvent<K,V> in class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4972
}, {
    "id": 1120314,
    "repository": "https://github.com/rstudio/rstudio.git",
    "sha1": "4983f83d1bedb7b737fc56d409c1c06b04e34e4e",
    "url": "https://github.com/rstudio/rstudio/commit/4983f83d1bedb7b737fc56d409c1c06b04e34e4e",
    "author": "Kevin Ushey",
    "time": "6/19/15 2:47 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private setValue(value boolean, force boolean) : void extracted from public setValue(value boolean) : void in class org.rstudio.core.client.widget.ThemedCheckBox",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private verticalSpacer(sizeInPixels int) : FlowPanel extracted from public ChunkOptionsPopupPanel() in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel",
        "comment": "There are two calls to verticalSpacer(sizeInPixels int) in the refactored version, the true Extract Method is for the second call",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 1522
}, {
    "id": 1120321,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "url": "https://github.com/VoltDB/voltdb/commit/a896b8bf8f7067e41291eb7771deed76b3621fa0",
    "author": "Anish Khanzode",
    "time": "6/19/15 4:07 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to class org.voltdb.importer.ImportProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120391,
    "repository": "https://github.com/apache/tomcat.git",
    "sha1": "40f00732b9652350ac11830367fd32db67987fc7",
    "url": "https://github.com/apache/tomcat/commit/40f00732b9652350ac11830367fd32db67987fc7",
    "author": "Mark Thomas",
    "time": "6/19/15 4:38 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private certificateKeystoreType : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getCertificateKeyAlias() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeyAlias() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private certificateKeystoreFile : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private certificateKeyAlias : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private certificateKeystoreProvider : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private certificateKeystorePassword : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getCertificateKeystoreFile() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreFile() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getCertificateKeystorePassword() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystorePassword() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getCertificateKeystoreType() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreType() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getCertificateKeystoreProvider() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreProvider() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setCertificateKeyAlias(certificateKeyAlias String) : void extracted from public setCertificateKeyAlias(certificateKeyAlias String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setCertificateKeystoreFile(certificateKeystoreFile String) : void extracted from public setCertificateKeystoreFile(certificateKeystoreFile String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setCertificateKeystorePassword(certificateKeystorePassword String) : void extracted from public setCertificateKeystorePassword(certificateKeystorePassword String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setCertificateKeystoreProvider(certificateKeystoreProvider String) : void extracted from public setCertificateKeystoreProvider(certificateKeystoreProvider String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div><p>&nbsp;</p><p style='color: gray;'>&nbsp;</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public setCertificateKeystoreType(certificateKeystoreType String) : void extracted from public setCertificateKeystoreType(certificateKeystoreType String) : void in class org.apache.tomcat.util.net.SSLHostConfig & moved to class org.apache.tomcat.util.net.SSLHostConfigCertificate",
        "comment": "<p>Extract and Move to other class.</p><div><p>Since RefDiff does not detect 'Extract and Move', we consider this one as CTP.</p><p>The method is extracted and moved to class <span class='pl-smi'>SSLHostConfigCertificate.</span></p></div>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 1133
}, {
    "id": 1120442,
    "repository": "https://github.com/liferay/liferay-plugins.git",
    "sha1": "7c7ecf4cffda166938efd0ae34830e2979c25c73",
    "url": "https://github.com/liferay/liferay-plugins/commit/7c7ecf4cffda166938efd0ae34830e2979c25c73",
    "author": "Shinn Lok",
    "time": "6/19/15 3:00 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected updateSyncDLObject(syncDLObject SyncDLObject) : void extracted from public onAfterUpdate(resourcePermission ResourcePermission) : void in class com.liferay.sync.hook.listeners.ResourcePermissionModelListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6318
}, {
    "id": 1120496,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "5d1a70a4d32ac4c96a32535c68c69b20288d8968",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/5d1a70a4d32ac4c96a32535c68c69b20288d8968",
    "author": "jinchul.kim",
    "time": "6/20/15 9:39 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package removeLruProcessLocked(app ProcessRecord) : void in class com.android.server.am.ActivityManagerService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package appDiedLocked(app ProcessRecord, pid int, thread IApplicationThread, fromBinderDied boolean) : void in class com.android.server.am.ActivityManagerService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package startProcessLocked(processName String, info ApplicationInfo, knownToBeDead boolean, intentFlags int, hostingType String, hostingName ComponentName, allowWhileBooting boolean, isolated boolean, isolatedUid int, keepIfLarge boolean, abiOverride String, entryPoint String, entryPointArgs String[], crashHandler Runnable) : ProcessRecord in class com.android.server.am.ActivityManagerService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from private crashApplication(r ProcessRecord, crashInfo ApplicationErrorReport.CrashInfo) : void in class com.android.server.am.ActivityManagerService",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 7362
}, {
    "id": 1120602,
    "repository": "https://github.com/open-keychain/open-keychain.git",
    "sha1": "de50b3becb31c367f867382ff9cd898ba1628350",
    "url": "https://github.com/open-keychain/open-keychain/commit/de50b3becb31c367f867382ff9cd898ba1628350",
    "author": "Adithya Abraham Philip",
    "time": "6/20/15 3:42 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public isOrbotInRequiredState(middleButton int, middleButtonRunnable Runnable, fragmentActivity FragmentActivity) : boolean extracted from public isOrbotInRequiredState(middleButton int, middleButtonRunnable Runnable, proxyPrefs Preferences.ProxyPrefs, fragmentActivity FragmentActivity) : boolean in class org.sufficientlysecure.keychain.util.orbot.OrbotHelper",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120650,
    "repository": "https://github.com/querydsl/querydsl.git",
    "sha1": "09b9d989658ef5bf9333c081c92b57a7611ad207",
    "url": "https://github.com/querydsl/querydsl/commit/09b9d989658ef5bf9333c081c92b57a7611ad207",
    "author": "Ruben Dijkstra",
    "time": "6/21/15 7:29 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310InstantTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310LocalDateTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310LocalTimeTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310ZonedDateTimeTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310LocalDateTimeTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310OffsetTimeTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310OffsetDateTimeTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120722,
    "repository": "https://github.com/osmandapp/Osmand.git",
    "sha1": "c45b9e6615181b7d8f4d7b5b1cc141169081c02c",
    "url": "https://github.com/osmandapp/Osmand/commit/c45b9e6615181b7d8f4d7b5b1cc141169081c02c",
    "author": "Victor Shcherb",
    "time": "6/20/15 5:09 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addPreviousToActionPoints(lastProjection Location, routeNodes List<Location>, DISTANCE_ACTION double, prevFinishPoint int, routePoint int, loc Location) : void extracted from private calculateActionPoints(topLatitude double, leftLongitude double, bottomLatitude double, rightLongitude double, lastProjection Location, routeNodes List<Location>, cd int, it Iterator<RouteDirectionInfo>, zoom int) : void in class net.osmand.plus.views.RouteLayer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1993
}, {
    "id": 1120782,
    "repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
    "sha1": "f2385a56e6aa040ea4ff18a23ce5b63a4eeacf29",
    "url": "https://github.com/phishman3579/java-algorithms-implementation/commit/f2385a56e6aa040ea4ff18a23ce5b63a4eeacf29",
    "author": "Justin Wetherell",
    "time": "6/21/15 5:27 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private putOutTheGarbage() : void extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 196
}, {
    "id": 1120785,
    "repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
    "sha1": "4ffcb5a65e6d24c58ef75a5cd7692e875619548d",
    "url": "https://github.com/phishman3579/java-algorithms-implementation/commit/4ffcb5a65e6d24c58ef75a5cd7692e875619548d",
    "author": "Justin Wetherell",
    "time": "6/21/15 4:41 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private collectGarbage() : void extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 689
}, {
    "id": 1120803,
    "repository": "https://github.com/codefollower/Lealone.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/Lealone.git",
    "sha1": "7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
    "url": "https://github.com/codefollower/Lealone/commit/7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
    "author": "Honghua Zhu",
    "time": "6/20/15 11:57 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getCharArray(e Expression) : char[] renamed to private getByteArray(session Session, e Expression) : byte[] in class org.lealone.command.ddl.CreateUser",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.AlterUser",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>&nbsp;setPassword is in class <span class='blob-code-inner'><span class='pl-smi'>CreateUser.</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.AlterUser",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>setSaltAndHash(..) is in class <span class='blob-code-inner'><span class='pl-smi'>CreateUser.</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 638
}, {
    "id": 1120836,
    "repository": "https://github.com/SlimeKnights/TinkersConstruct.git",
    "sha1": "71820e573134be3fad3935035249cd77c4412f4e",
    "url": "https://github.com/SlimeKnights/TinkersConstruct/commit/71820e573134be3fad3935035249cd77c4412f4e",
    "author": "Bernhard Bonigl",
    "time": "6/20/15 11:27 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public matches(stacks Collection) : RecipeMatch.Match extracted from public matches(stacks ItemStack[]) : RecipeMatch.Match in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class RecipeMatchRegistry is extracted from Modifier.</p><p>See that RecipeMatchRegistry is an attribute of class Modifier in the refactored version, and the 3 addItem(..) methods in the refactored version of Modifier are now delegating to the 3 addItem(..) in RecipeMatchRegistry.</p><p>Nikos: This method has been extracted and moved to newly added class <span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry. Consider as CTP<br /></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Nikos"
    }, {
        "type": "Move Class",
        "description": "Move Class tconstruct.library.modifiers.RecipeMatch.Match moved to tconstruct.library.mantle.RecipeMatch.Match",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addItem(oredictItem String) : void extracted from public addItem(item Item) : void in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class RecipeMatchRegistry is extracted from Modifier.</p><p>See that RecipeMatchRegistry is an attribute of class Modifier in the refactored version, and the 3 addItem(..) methods in the refactored version of Modifier are now delegating to the 3 addItem(..) in RecipeMatchRegistry.</p><p>Nikos: After refactoring method delegates to {<span class='blob-code-inner'><span class='x x-first'>modifierItems</span><span class='pl-k x x-last'>.</span>addItem(oredictItem String)</span>}<br />Modifier. addItem(oredictItem String) {<span class='blob-code-inner'>addItem(oredictItem<span class='x x-first'>, </span><span class='pl-c1 x x-last'>1</span>);</span> }<br />RecipeMatchRegistry.addItem(item Item) {<span class='blob-code-inner'>addItem(item, <span class='pl-c1'>1</span>, <span class='pl-c1'>1</span>);</span>}</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private oredictEntry : String from class tconstruct.library.modifiers.RecipeMatch.Oredict to class tconstruct.library.mantle.RecipeMatch.Oredict",
        "comment": "<p>class tconstruct.library.modifiers.RecipeMatch.Oredict is moved to&nbsp; tconstruct.library.mantle.RecipeMatch.Oredict.</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public removeMatch(stacks ItemStack[], match Match) : void from class tconstruct.library.modifiers.RecipeMatch to public removeMatch(stacks ItemStack[], match Match) : void from class tconstruct.library.mantle.RecipeMatch",
        "comment": "<p>Move class tconstruct.library.modifiers.RecipeMatch to tconstruct.library.mantle.RecipeMatch&nbsp; is already detetced by RefDiff and it is TP. So this case is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addItem(oredictItem String) : void extracted from public addItem(oredictItem String) : void in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This method has been extracted and moved to newly added class RecipeMatchRegistry. Consider as CTP</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addItem(block Block, amountMatched int) : void extracted from public addItem(block Block, count int) : void in class tconstruct.library.modifiers.Modifier",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This method has been extracted and moved to newly added class RecipeMatchRegistry. Consider as CTP</span></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public addItem(oredictItem String, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(oredictItem String, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This case was considered as Extract and Move Method. Move Method will be considered FP. </span></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private template : ItemStack from class tconstruct.library.modifiers.RecipeMatch.Item to class tconstruct.library.mantle.RecipeMatch.Item",
        "comment": "<p>Basically the inner class <span class='blob-code-inner'><span class='pl-smi'>tconstruct.library.<span class='x x-first x-last'>modifiers</span></span></span>.RecipeMatch.Item is moved to class construct.library.mantle.RecipeMatch.Item.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public addItem(item Item, count int) : void from class tconstruct.library.modifiers.Modifier to public addItem(item Item, amountNeeded int, amountMatched int) : void from class tconstruct.library.mantle.RecipeMatchRegistry",
        "comment": "<p>For me, it is an 'extract class' refactoring. Class&nbsp;<span class='blob-code-inner'><span class='pl-en'>RecipeMatchRegistry</span></span> is extracted from Modifier.</p><p>See that <span class='blob-code-inner'><span class='pl-smi x x-first x-last'>RecipeMatchRegistry is an attribute of class&nbsp; Modifier in the refactored version, and the&nbsp; 3 </span></span><span class='blob-code-inner'><span class='pl-en'>addItem(..)</span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'> methods in the refactored version of Modifier are now </span></span></span><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>delegating to the 3 addItem(..) in RecipeMatchRegistry.</span></span></span></p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'><span class='pl-en'>Nikos: This case was considered as Extract and Move Method. Move Method will be considered FP.</span></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood, Nikos"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120898,
    "repository": "https://github.com/joel-costigliola/assertj-core.git",
    "sha1": "b36ab386559d04db114db8edd87c8d4cbf850c12",
    "url": "https://github.com/joel-costigliola/assertj-core/commit/b36ab386559d04db114db8edd87c8d4cbf850c12",
    "author": "Joel Costigliola",
    "time": "6/21/15 2:25 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.assertj.core.api.StrictAssertions from class org.assertj.core.api.Assertions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1120903,
    "repository": "https://github.com/k9mail/k-9.git",
    "sha1": "9d44f0e06232661259681d64002dd53c7c43099d",
    "url": "https://github.com/k9mail/k-9/commit/9d44f0e06232661259681d64002dd53c7c43099d",
    "author": "cketti",
    "time": "6/21/15 7:43 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private handleSendFailure(account Account, localStore Store, localFolder Folder, message Message, exception Exception, permanentFailure boolean) : void extracted from public sendPendingMessagesSynchronous(account Account) : void in class com.fsck.k9.controller.MessagingController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private notifySynchronizeMailboxFailed(account Account, localFolder Folder, exception Exception) : void extracted from public sendPendingMessagesSynchronous(account Account) : void in class com.fsck.k9.controller.MessagingController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1503
}, {
    "id": 1120931,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "7e104c3ed4b80ec8e9b72356396f879d1067cc40",
    "url": "https://github.com/facebook/buck/commit/7e104c3ed4b80ec8e9b72356396f879d1067cc40",
    "author": "Eugene Susla",
    "time": "6/19/15 6:27 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map<Path,SortedSet<Prebuilt>>, graph MutableDirectedGraph<Artifact>) : void extracted from public resolve(mavenCoords String[]) : void in class com.facebook.buck.maven.Resolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createBuckFiles(buckFilesData Map<Path,SortedSet<Prebuilt>>) : void extracted from public resolve(mavenCoords String[]) : void in class com.facebook.buck.maven.Resolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1910
}, {
    "id": 1120985,
    "repository": "https://github.com/mockito/mockito.git",
    "sha1": "2d036ecf1d7170b4ec7346579a1ef8904109530a",
    "url": "https://github.com/mockito/mockito/commit/2d036ecf1d7170b4ec7346579a1ef8904109530a",
    "author": "Brice Dutheil",
    "time": "6/19/15 4:07 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private allMockedTypes(features MockFeatures<T>) : Class<?>[] extracted from public generateMockClass(features MockFeatures<T>) : Class<? extends T> in class org.mockito.internal.creation.bytebuddy.MockBytecodeGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 548
}, {
    "id": 1120997,
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "sha1": "1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "url": "https://github.com/brettwooldridge/HikariCP/commit/1571049ec04b1e7e6f082ed5ec071584e7200c12",
    "author": "Brett Wooldridge",
    "time": "6/20/15 3:12 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.IConcurrentBagEntry moved to com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.IBagStateListener moved to com.zaxxer.hikari.util.ConcurrentBag.IBagStateListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 462
}, {
    "id": 1120998,
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "sha1": "cd8c4d578a609bdd6395d3a8c49bfd19ed700dea",
    "url": "https://github.com/brettwooldridge/HikariCP/commit/cd8c4d578a609bdd6395d3a8c49bfd19ed700dea",
    "author": "Brett Wooldridge",
    "time": "6/20/15 3:06 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.NanosecondClockSource moved to com.zaxxer.hikari.util.ClockSource.NanosecondClockSource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.zaxxer.hikari.util.MillisecondClockSource moved to com.zaxxer.hikari.util.ClockSource.MillisecondClockSource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 527
}, {
    "id": 1121053,
    "repository": "https://github.com/processing/processing.git",
    "sha1": "acf67c8cb58d13827e14bbeeec11a66f9277015f",
    "url": "https://github.com/processing/processing/commit/acf67c8cb58d13827e14bbeeec11a66f9277015f",
    "author": "Ben Fry",
    "time": "6/19/15 6:31 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method protected runSketchEDT(args String[], constructedSketch PApplet) : void inlined to public runSketch(args String[], constructedSketch PApplet) : void in class processing.core.PApplet",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1106
}, {
    "id": 1121219,
    "repository": "https://github.com/ratpack/ratpack.git",
    "sha1": "da6167af3bdbf7663af6c20fb603aba27dd5e174",
    "url": "https://github.com/ratpack/ratpack/commit/da6167af3bdbf7663af6c20fb603aba27dd5e174",
    "author": "Luke Daley",
    "time": "6/19/15 10:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private post(responseStatus HttpResponseStatus, lastContentFuture ChannelFuture) : void extracted from private post(responseStatus HttpResponseStatus) : void in class ratpack.server.internal.DefaultResponseTransmitter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1342
}, {
    "id": 1121326,
    "repository": "https://github.com/droolsjbpm/drools.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/drools.git",
    "sha1": "c8e09e2056c54ead97bce4386a25b222154223b1",
    "url": "https://github.com/droolsjbpm/drools/commit/c8e09e2056c54ead97bce4386a25b222154223b1",
    "author": "kedzie",
    "time": "6/21/15 6:50 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.drools.core.util.ByteArrayClassLoader from class org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public loadClass(className String, classLoader ClassLoader) : Class<?> extracted from public instantiateObject(className String, classLoader ClassLoader) : Object in class org.drools.core.util.ClassUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public instantiateObject(className String, args Object[]) : Object extracted from public instantiateObject(className String) : Object in class org.drools.core.util.ClassUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.drools.core.base.ClassFieldAccessorCache.ByteArrayClassLoader renamed to org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method protected loadClass(name String, resolve boolean) : Class from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to protected loadClass(name String, resolve boolean) : Class from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "comment": "InternalTypesClassLoader renamed to DefaultInternalTypesClassLoader. a new interface is added which is called InternalTypesClassLoader ",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private makeClassLoader() : InternalTypesClassLoader extracted from private defineType(name String, bytecode byte[]) : Class in class org.drools.core.common.ProjectClassLoader",
        "comment": "<p>There is only one class instance creation statement in the extracted method which exists in the place where the method is also extracted. It&nbsp;<strong>can be</strong>&nbsp;extract method then.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private makeClassLoader() : ClassLoader extracted from public onAdd(registry DialectRuntimeRegistry, rootClassLoader ClassLoader) : void in class org.drools.core.rule.JavaDialectRuntimeData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private makeClassLoader() : ClassLoader extracted from public reload() : void in class org.drools.core.rule.JavaDialectRuntimeData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private loadType(name String, resolve boolean) : Class from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public loadType(name String, resolve boolean) : Class from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadClass(name String, resolve boolean) : Class from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to protected loadClass(name String, resolve boolean) : Class from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public defineClass(name String, bytecode byte[]) : Class from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to public defineClass(name String, bytecode byte[]) : Class from class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private projectClassLoader : ProjectClassLoader from class org.drools.core.common.ProjectClassLoader.InternalTypesClassLoader to class org.drools.core.common.ProjectClassLoader.DefaultInternalTypesClassLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2686
}, {
    "id": 1121362,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "f841d8dda2bf461f595755f85c3eba786783702d",
    "url": "https://github.com/gradle/gradle/commit/f841d8dda2bf461f595755f85c3eba786783702d",
    "author": "Adam Murdoch",
    "time": "6/19/15 1:38 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private adaptResult(result BuildResult, startTime long, endTime long) : AbstractOperationResult inlined to private adaptResult(source BuildOperationInternal) : AbstractOperationResult in class org.gradle.tooling.internal.provider.runner.ClientForwardingBuildListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getPayload() : Object renamed to public getFailure() : Throwable in class org.gradle.internal.progress.BuildOperationInternal",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 4945
}, {
    "id": 1121377,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "797fb7fc1415ac0ebe9a8262677dfa4462ed6cb4",
    "url": "https://github.com/JetBrains/MPS/commit/797fb7fc1415ac0ebe9a8262677dfa4462ed6cb4",
    "author": "Artem Tikhomirov",
    "time": "6/19/15 11:28 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private doAppendNode(node SNode) : void extracted from public appendNode(node SNode) : void in class jetbrains.mps.text.impl.TextGenSupport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public hasTextGen(node SNode) : boolean extracted from public appendNode(node SNode) : void in class jetbrains.mps.text.impl.TextGenSupport",
        "comment": "<p>Extract and Move to other class.</p><p>Laleh: The body of 'public appendNode(node SNode) : void' in base version is identical to the new method '<span class='blob-code-inner'><span class='pl-k'>private</span> <span class='pl-en'>doAppendNode</span>(<span class='pl-smi'>SNode</span> <span class='pl-v'>node</span>): void</span>' in the refactored version.</p><p>The body of 'public appendNode(node SNode) : void' in the refactored version is completely changed and there is a call to&nbsp; <span class='blob-code-inner'><span class='pl-en'>doAppendNode</span>(<span class='pl-smi'>SNode</span> <span class='pl-v'>node</span>)</span><span class='blob-code-inner'><span class='pl-en'>.</span></span></p><p>For me the body of appendNode is first modifed (code added to it) and then part of its code is refactored to <span class='blob-code-inner'><span class='pl-en'>doAppendNode and not to hasTextGen(node SNode). So i am for a FP.<br /></span></span></p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }],
    "refDiffExecutionTime": 25438
}, {
    "id": 1121417,
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "sha1": "bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "url": "https://github.com/languagetool-org/languagetool/commit/bec15926deb49d2b3f7b979d4cfc819947a434ec",
    "author": "Andriy Rysin",
    "time": "6/21/15 12:33 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public VIDMINKY_MAP : Map<String,String> from class org.languagetool.tagging.uk.UkrainianTagger to class org.languagetool.tagging.uk.PosTagHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private hasRequiredPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean renamed to private getReadingWithVidmPosTag(posTagsToFind Collection<String>, tokenReadings AnalyzedTokenReadings) : boolean in class org.languagetool.rules.uk.TokenAgreementRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1121426,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "dd4bc630c3de70204081ab196945d6b55ab03beb",
    "url": "https://github.com/spring-projects/spring-framework/commit/dd4bc630c3de70204081ab196945d6b55ab03beb",
    "author": "Juergen Hoeller",
    "time": "6/21/15 7:29 PM",
    "refactorings": [{
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private completableFuturePresent : boolean from class org.springframework.aop.interceptor.AsyncExecutionInterceptor to class org.springframework.aop.interceptor.AsyncExecutionAspectSupport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.aop.interceptor.AsyncExecutionInterceptor.CompletableFutureDelegate moved to org.springframework.aop.interceptor.AsyncExecutionAspectSupport.CompletableFutureDelegate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method protected doSubmit(task Callable<Object>, executor AsyncTaskExecutor, returnType Class<?>) : Object extracted from public invoke(invocation MethodInvocation) : Object in class org.springframework.aop.interceptor.AsyncExecutionInterceptor & moved to class org.springframework.aop.interceptor.AsyncExecutionAspectSupport",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method protected doSubmit(task Callable, executor AsyncTaskExecutor, returnType Class) : Object extracted from public invoke(invocation MethodInvocation) : Object in class org.springframework.aop.interceptor.AsyncExecutionInterceptor & moved to class org.springframework.aop.interceptor.AsyncExecutionAspectSupport",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 2258
}, {
    "id": 1121439,
    "repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
    "sha1": "e32f161fc023d1ee153c49df312ae10b06941465",
    "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/e32f161fc023d1ee153c49df312ae10b06941465",
    "author": "Andrew Byrd",
    "time": "6/19/15 7:36 PM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.opentripplanner.analyst.qbroker to org.opentripplanner.analyst.broker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private users : CircularList from class org.opentripplanner.analyst.qbroker.Broker to class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public deliver(job Job, response Response) : boolean from class org.opentripplanner.analyst.qbroker.Broker to public deliver(job Job, response Response) : boolean from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.User moved to org.opentripplanner.analyst.broker.User",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring, we consider move class as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public deleteTask(queuePath QueuePath) : boolean from class org.opentripplanner.analyst.qbroker.Broker to public deleteTask(queuePath QueuePath) : boolean from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private broker : Broker from class org.opentripplanner.analyst.qbroker.BrokerHttpHandler to class org.opentripplanner.analyst.broker.BrokerHttpHandler",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nWaitingConsumers : int from class org.opentripplanner.analyst.qbroker.Broker to class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public jobId : String from class org.opentripplanner.analyst.qbroker.Job to class org.opentripplanner.analyst.broker.Job",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package invisibleTasks : TIntObjectMap from class org.opentripplanner.analyst.qbroker.Job to class org.opentripplanner.analyst.broker.Job",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public writeJson(response Response, object Object) : void from class org.opentripplanner.analyst.qbroker.BrokerHttpHandler to public writeJson(response Response, object Object) : void from class org.opentripplanner.analyst.broker.BrokerHttpHandler",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nTasks : int from class org.opentripplanner.analyst.qbroker.Job to class org.opentripplanner.analyst.broker.Job",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public findUser(userId String, create boolean) : User from class org.opentripplanner.analyst.qbroker.Broker to public findUser(userId String, create boolean) : User from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private mapper : ObjectMapper from class org.opentripplanner.analyst.qbroker.BrokerHttpHandler to class org.opentripplanner.analyst.broker.BrokerHttpHandler",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private logQueueStatus() : void from class org.opentripplanner.analyst.qbroker.Broker to private logQueueStatus() : void from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.CircularList moved to org.opentripplanner.analyst.broker.CircularList",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring, we consider move class as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public markTasksDelivered(tasks List) : void from class org.opentripplanner.analyst.qbroker.Job to public markTasksDelivered(tasks List) : void from class org.opentripplanner.analyst.broker.Job",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p><p>The method argument in both versions need to be updated</p><p>&nbsp;tasks List -&gt; <span class='blob-code-inner'><span class='pl-v'>tasks</span></span> <span class='blob-code-inner'><span class='pl-k'>List&lt;<span class='pl-smi x x-first x-last'>Task</span>&gt;</span>&nbsp;</span></p><p><span class='blob-code-inner'>&nbsp;tasks List -&gt; <span class='pl-k'>List&lt;<span class='pl-smi x x-first x-last'>AnalystClusterRequest</span>&gt;</span> <span class='pl-v'>tasks</span><br /></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.BrokerMain moved to org.opentripplanner.analyst.broker.BrokerMain",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring, we consider move class as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.QueueType moved to org.opentripplanner.analyst.broker.QueueType",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring, we consider move class as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerSuspendedResponse(graphId String, response Response) : void from class org.opentripplanner.analyst.qbroker.Broker to public registerSuspendedResponse(graphId String, response Response) : void from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public run() : void from class org.opentripplanner.analyst.qbroker.Broker to public run() : void from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public service(request Request, response Response) : void from class org.opentripplanner.analyst.qbroker.BrokerHttpHandler to public service(request Request, response Response) : void from class org.opentripplanner.analyst.broker.BrokerHttpHandler",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public deliverTasksForOneJob() : void from class org.opentripplanner.analyst.qbroker.Broker to public deliverTasksForOneJob() : void from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package visibleTasks : Queue from class org.opentripplanner.analyst.qbroker.Job to class org.opentripplanner.analyst.broker.Job",
        "comment": "<p>The package qbrokeris renamed to broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package connectionsForGraph : Map from class org.opentripplanner.analyst.qbroker.Broker to class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nUndeliveredTasks : int from class org.opentripplanner.analyst.qbroker.Broker to class org.opentripplanner.analyst.broker.Broker",
        "comment": "<div><p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p></div>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public removeSuspendedResponse(graphId String, response Response) : boolean from class org.opentripplanner.analyst.qbroker.Broker to public removeSuspendedResponse(graphId String, response Response) : boolean from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public enqueueTasks(queuePath QueuePath, taskBodies Collection) : void from class org.opentripplanner.analyst.qbroker.Broker to public enqueueTasks(queuePath QueuePath, tasks Collection) : void from class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p><p>The method paprameter in the refactored version needs to be updated to:&nbsp;</p><p><span class='blob-code-inner'>'tasks Collection' -&gt;&nbsp; '<span class='pl-v'>tasks <span class='pl-k'>Collection&lt;<span class='pl-smi'>AnalystClusterRequest</span>&gt;'</span><br /></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.QueuePath moved to org.opentripplanner.analyst.broker.QueuePath",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring, we consider move class as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG : Logger from class org.opentripplanner.analyst.qbroker.Broker to class org.opentripplanner.analyst.broker.Broker",
        "comment": "<p>The package qbrokeris renamed to&nbsp;broker.</p><p>Since RefDiff does not detect package level refactoring I was expecting a 'move class' refactoring.</p><p>Since abstract refactoring (move class) is not detested the sub-refactoring is FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.BrokerHttpHandler moved to org.opentripplanner.analyst.broker.BrokerHttpHandler",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.qbroker.Broker moved to org.opentripplanner.analyst.broker.Broker",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1121499,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "e2dd54ab180b577b08cf6b0e69310ac81fc99fd3",
    "url": "https://github.com/apache/hive/commit/e2dd54ab180b577b08cf6b0e69310ac81fc99fd3",
    "author": "Jason Dere",
    "time": "6/19/15 7:19 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private foldExprFull(desc ExprNodeDesc, constants Map<ColumnInfo,ExprNodeDesc>, cppCtx ConstantPropagateProcCtx, op Operator<? extends Serializable>, tag int, propagate boolean) : ExprNodeDesc extracted from private foldExpr(desc ExprNodeDesc, constants Map<ColumnInfo,ExprNodeDesc>, cppCtx ConstantPropagateProcCtx, op Operator<? extends Serializable>, tag int, propagate boolean) : ExprNodeDesc in class org.apache.hadoop.hive.ql.optimizer.ConstantPropagateProcFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private foldExprShortcut(desc ExprNodeDesc, constants Map<ColumnInfo,ExprNodeDesc>, cppCtx ConstantPropagateProcCtx, op Operator<? extends Serializable>, tag int, propagate boolean) : ExprNodeDesc extracted from private foldExpr(desc ExprNodeDesc, constants Map<ColumnInfo,ExprNodeDesc>, cppCtx ConstantPropagateProcCtx, op Operator<? extends Serializable>, tag int, propagate boolean) : ExprNodeDesc in class org.apache.hadoop.hive.ql.optimizer.ConstantPropagateProcFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 10064
}, {
    "id": 1121538,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "ebb1c2c364e888d4a0f47abe691cb2bad4eb4e75",
    "url": "https://github.com/VoltDB/voltdb/commit/ebb1c2c364e888d4a0f47abe691cb2bad4eb4e75",
    "error": true,
    "author": "Xin Jia",
    "time": "6/22/15 3:24 PM",
    "ignore": true,
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private isGroupbyMatchingIndex(matchingCase MatViewIndexMacthingGroupby, groupbyColRefs List<ColumnRef>, groupbyExprs List<AbstractExpression>, indexedColRefs List<ColumnRef>, indexedExprs List<AbstractExpression>, srcColumnArray List<Column>) : boolean extracted from private findBestMatchIndexForMatviewMinOrMax(matviewinfo MaterializedViewInfo, srcTable Table, groupbyExprs List<AbstractExpression>, singleUniqueMinMaxAggExpr AbstractExpression) : Index in class org.voltdb.compiler.DDLCompiler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isIndexOptimalForMinMax(matchingCase MatViewIndexMacthingGroupby, singleUniqueMinMaxAggExpr AbstractExpression, indexedColRefs List<ColumnRef>, indexedExprs List<AbstractExpression>, srcColumnArray List<Column>) : boolean extracted from private findBestMatchIndexForMatviewMinOrMax(matviewinfo MaterializedViewInfo, srcTable Table, groupbyExprs List<AbstractExpression>, singleUniqueMinMaxAggExpr AbstractExpression) : Index in class org.voltdb.compiler.DDLCompiler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1121720,
    "repository": "https://github.com/mrniko/redisson.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/redisson.git",
    "sha1": "186357ac6c2da1a5a12c0287a08408ac5ec6683b",
    "url": "https://github.com/mrniko/redisson/commit/186357ac6c2da1a5a12c0287a08408ac5ec6683b",
    "author": "Nikita",
    "time": "6/22/15 2:24 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public createClient(host String, port int, timeout int) : RedisClient extracted from public createClient(host String, port int) : RedisClient in class org.redisson.connection.MasterSlaveConnectionManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 722
}, {
    "id": 1121723,
    "repository": "https://github.com/wicketstuff/core.git",
    "sha1": "8ea46f48063c38473c12ca7c114106ca910b6e74",
    "url": "https://github.com/wicketstuff/core/commit/8ea46f48063c38473c12ca7c114106ca910b6e74",
    "author": "Andrea Del Bene",
    "time": "6/22/15 7:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private testRenderedTab() : void extracted from public renderSimpleTab() : void in class org.wicketstuff.foundation.tab.FoundationTabTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2824
}, {
    "id": 1121732,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "ffae1691c0cd526ed1095fbabbc0855d016790d7",
    "url": "https://github.com/apache/drill/commit/ffae1691c0cd526ed1095fbabbc0855d016790d7",
    "author": "Jinfeng Ni",
    "time": "6/20/15 7:42 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(sqlNode SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected convertToDrel(relNode RelNode) : DrillRel extracted from protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected convertToDrel(relNode RelNode) : DrillRel extracted from private convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
        "comment": "<p>Extract and Move to other class.</p><p>The convertToDrel(relNode RelNode)&nbsp; in the parent class (<span class='pl-e'>DefaultSqlHandler</span>) is extratced form convertToDrel(relNode RelNode, schema AbstractSchema, tableName String, partitionColumns List) .</p><p>See refacoting: http://refactoring.encs.concordia.ca/oracle/refactoring-details/1121732/1073</p><p>So for this class consider it as CTP since it is 'extratc and move to other class'</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(node SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.ExplainHandler",
        "comment": "<p>Extratc and Move to other class.</p><p>The validateAndConvert(sqlNode SqlNode) in the parent class (DefaultSqlHandler) is extracted from getPlan(node SqlNode).</p><p>See refactroing:&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1121732/1072</p><p>So for this class we should consider it as Extract and move to other (here parent) class.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 2598
}, {
    "id": 1121744,
    "repository": "https://github.com/scobal/seyren.git",
    "sha1": "5fb36a321af7df470d4c845cb18da8f85be31c38",
    "url": "https://github.com/scobal/seyren/commit/5fb36a321af7df470d4c845cb18da8f85be31c38",
    "author": "alenkacz",
    "time": "6/20/15 4:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private evaluateTemplate(check Check, subscription Subscription, alerts List<Alert>, templateContent String) : String extracted from public createBody(check Check, subscription Subscription, alerts List<Alert>) : String in class com.seyren.core.util.velocity.VelocityEmailHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public subjectIsCorrect() : void renamed to public bodyContainsItemsFromModel() : void in class com.seyren.core.util.velocity.VelocityEmailHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 414
}, {
    "id": 1121834,
    "repository": "https://github.com/languagetool-org/languagetool.git",
    "sha1": "01cddc5afb590b4d36cb784637a8ea8aa31d3561",
    "url": "https://github.com/languagetool-org/languagetool/commit/01cddc5afb590b4d36cb784637a8ea8aa31d3561",
    "author": "Daniel Naber",
    "time": "6/22/15 5:37 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getMouseAdapter() : MouseAdapter extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createNonOfficeElements(cons GridBagConstraints, portPanel JPanel) : void extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getMotherTonguePanel(cons GridBagConstraints) : JPanel extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getTreeModel(rootNode DefaultMutableTreeNode) : DefaultTreeModel extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getTreeButtonPanel() : JPanel extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 876
}, {
    "id": 1121836,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "url": "https://github.com/spring-projects/spring-framework/commit/31a5434ea433bdec2283797bf9415c02bb2f41c1",
    "author": "Sebastien Deleuze",
    "time": "6/22/15 12:05 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected addDefaultHeaders(headers HttpHeaders, t T, contentType MediaType) : void extracted from public write(t T, contentType MediaType, outputMessage HttpOutputMessage) : void in class org.springframework.http.converter.AbstractHttpMessageConverter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests.JacksonViewController renamed to org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessorTests.JacksonController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.http.converter.AbstractGenericHttpMessageConverter from class org.springframework.http.converter.json.GsonHttpMessageConverter",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.http.converter.AbstractGenericHttpMessageConverter from class org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter",
        "comment": "<p>No method or attribute has been pulled up</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3276
}, {
    "id": 1121850,
    "repository": "https://github.com/mongodb/morphia.git",
    "sha1": "70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
    "url": "https://github.com/mongodb/morphia/commit/70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
    "author": "Ross Lodge",
    "time": "6/22/15 10:05 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private performBasicMappingTest() : void extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1121855,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "3b95d10985776fb7b710089ff71074fd2bf860ee",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/3b95d10985776fb7b710089ff71074fd2bf860ee",
    "author": "Will Kwon",
    "time": "6/22/15 1:48 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getBlogsForCurrentView() : List<Map<String,Object>> extracted from protected doInBackground(params Void[]) : SiteList in class org.wordpress.android.ui.main.SitePickerAdapter.LoadSitesTask",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 946
}, {
    "id": 1121861,
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "sha1": "72acc2126611f0bff9b672de18b9b2f8dacdc03a",
    "url": "https://github.com/Graylog2/graylog2-server/commit/72acc2126611f0bff9b672de18b9b2f8dacdc03a",
    "author": "Kay Roepke",
    "time": "6/22/15 1:20 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.graylog2.bootstrap.CliCommand from class org.graylog2.bootstrap.CmdLineTool",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.graylog2.bootstrap.CliCommand from class org.graylog2.bootstrap.commands.ShowVersion",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.bootstrap.commands.journal.JournalDecode moved to org.graylog2.commands.journal.JournalDecode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.UI moved to org.graylog2.shared.UI",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.bootstrap.commands.journal.AbstractJournalCommand moved to org.graylog2.commands.journal.AbstractJournalCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.bootstrap.commands.journal.JournalTruncate moved to org.graylog2.commands.journal.JournalTruncate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.bootstrap.commands.journal.JournalShow moved to org.graylog2.commands.journal.JournalShow",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.bootstrap.commands.Radio moved to org.graylog2.radio.commands.Radio",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.graylog2.bootstrap.commands.Server moved to org.graylog2.commands.Server",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2028
}, {
    "id": 1121897,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "becced5f0b7bac8200df7a5706b568687b517b90",
    "url": "https://github.com/spring-projects/spring-boot/commit/becced5f0b7bac8200df7a5706b568687b517b90",
    "author": "Tomasz Przyby?a",
    "time": "6/23/15 3:43 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createPreparedEvent(propName String, propValue String) : SpringApplicationEvent extracted from public overridePidFileWithSpring() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createEnvironmentPreparedEvent(propName String, propValue String) : SpringApplicationEvent extracted from public differentEventTypes() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getEnvironment(event SpringApplicationEvent) : Environment from class org.springframework.boot.actuate.system.ApplicationPidFileWriter to private getEnvironment(event SpringApplicationEvent) : Environment from class org.springframework.boot.actuate.system.ApplicationPidFileWriter.SpringProperty",
        "comment": "The method is moved to the inner class of ApplicationPidFileWriter. The inner class  is added in the refactored version. Thus it is more like an extarct class",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getProperty(event SpringApplicationEvent, candidates List) : String extracted from private writePidFile(event SpringApplicationEvent) : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriter",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1721
}, {
    "id": 1121904,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "f166866cd68efa963534c5bc7fc9ca38e4aa2838",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/f166866cd68efa963534c5bc7fc9ca38e4aa2838",
    "author": "Kra1o5",
    "time": "6/22/15 7:02 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public is24HourFormatLocale(context Context) : boolean inlined to public is24HourFormat(context Context, userHandle int) : boolean in class android.text.format.DateFormat",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 8091
}, {
    "id": 1121973,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6540dde58190f642e59ca10516f84eb85f855373",
    "url": "https://github.com/JetBrains/intellij-community/commit/6540dde58190f642e59ca10516f84eb85f855373",
    "author": "Alexey Kudravtsev",
    "time": "6/23/15 6:36 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public averageAmongMedians(time long[], part int) : long from class com.intellij.testFramework.PlatformTestUtil to public averageAmongMedians(time long[], part int) : long from class com.intellij.util.ArrayUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 19276
}, {
    "id": 1122130,
    "repository": "https://github.com/facebook/presto.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/presto.git",
    "sha1": "b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "url": "https://github.com/facebook/presto/commit/b7f4914d81a7a618acf2eba52af1093fc23cfba9",
    "author": "Nileema Shingte",
    "time": "6/22/15 9:56 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private tryGetLookupSource() : void extracted from public getOutput() : Page in class com.facebook.presto.operator.LookupJoinOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private tryGetLookupSource() : void extracted from public needsInput() : boolean in class com.facebook.presto.operator.LookupJoinOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4057
}, {
    "id": 1122159,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "77fab3caea4495798a248035f0e928f745c7c2db",
    "url": "https://github.com/neo4j/neo4j/commit/77fab3caea4495798a248035f0e928f745c7c2db",
    "author": "Jacob Hansson",
    "time": "6/22/15 2:06 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public releaseAllShared() : void inlined to public releaseAll() : void in class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public releaseAllExclusive() : void inlined to public releaseAll() : void in class org.neo4j.kernel.impl.locking.community.CommunityLockClient",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public acquireExclusive(resourceType Locks.ResourceType, resourceIds long[]) : void renamed to public acquireShared(resourceType Locks.ResourceType, resourceId long) : void in class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public acquireShared(resourceType Locks.ResourceType, resourceIds long[]) : void renamed to public acquireExclusive(resourceType Locks.ResourceType, resourceId long) : void in class org.neo4j.kernel.ha.lock.SlaveLocksClient",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4194
}, {
    "id": 1122164,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "url": "https://github.com/neo4j/neo4j/commit/001de307492df8f84ad15f6aaa0bd1e748d4ce27",
    "author": "Davide Grohmann",
    "time": "6/22/15 1:34 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.Recovery moved to org.neo4j.kernel.recovery.Recovery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationControl renamed to org.neo4j.kernel.impl.transaction.log.rotation.StoreFlusher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package rotateDone() : void renamed to package checkPointDone() : void in class synchronization.TestConcurrentRotation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLog() : void renamed to private checkPoint() : void in class recovery.CountsStoreRecoveryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotate(db GraphDatabaseAPI) : void renamed to private rotateAndCheckPoint(db GraphDatabaseAPI) : void in class org.neo4j.backup.BackupServiceIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLog(db GraphDatabaseAPI) : void renamed to private rotateLogAndCheckPoint(db GraphDatabaseAPI) : void in class org.neo4j.backup.BackupServiceStressTestingBuilder.RunTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLog() : void renamed to private rotateLogAndCheckPoint() : void in class org.neo4j.index.recovery.UniqueIndexRecoveryTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLogs() : void renamed to private rotateLogsAndCheckPoint() : void in class org.neo4j.kernel.api.impl.index.LuceneIndexRecoveryIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLogicalLog(graphdb GraphDatabaseAPI) : void renamed to private checkPoint(graphdb GraphDatabaseAPI) : void in class synchronization.TestConcurrentRotation.RotateIndexLogTask",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLog(db GraphDatabaseAPI) : void renamed to private checkPoint(db GraphDatabaseAPI) : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rotateLog() : void renamed to private checkPoint() : void in class recovery.TestRecoveryScenarios",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public start() : void from class org.neo4j.kernel.Recovery to public start() : void from class org.neo4j.kernel.recovery.Recovery",
        "comment": "It is like rename package refactroing, but since RefDiff does not detetc package level refactroing, I was expecting a move class refactroing at least. But since the class body is changed as well, it is really hard to decide which type of refactoring it is",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public awaitAllTransactionsClosed() : void from class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationControl to private awaitAllTransactionsClosed() : void from class org.neo4j.kernel.NeoStoreDataSource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public close() : void extracted from public close() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
        "comment": "<p>Extract and Move to other inner class.</p><p>Statement in method close() is extracted and moved to method close() in class LogEntryCursor.java (is an added class).</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public next() : boolean extracted from public next() : boolean in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
        "comment": "<p>Extract and Move to other inner class.</p><p>Statements in method next() are extracted and move to method next() in class LogEntryCursor.java (is an added class).</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public start(logVersion long) : LogPosition extracted from private verifyThatIndexCreationTransactionIsTheFirstOne() : void in class org.neo4j.index.impl.lucene.IndexCreationTest & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public start(logVersion long) : LogPosition extracted from public accept(visitor LogHeaderVisitor) : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFile & moved to class org.neo4j.kernel.impl.transaction.log.LogPosition",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public start(logVersion long) : LogPosition extracted from private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable) : TransactionLogModule in class org.neo4j.kernel.NeoStoreDataSource",
        "comment": "<p>Extract and Move to other class</p><p>Since RefDiff does not detect&nbsp; 'Extract and Move' we consider it as CTP.</p><p>The method start(logVersion long) is extratced and moved to LogPosition.</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public start(logVersion long) : LogPosition extracted from public getTimestampForVersion(version long) : long in class org.neo4j.kernel.NeoStoreDataSource$10",
        "comment": "<p>Extract and Move to other class</p><p>Since RefDiff does not detect 'Extract and Move' refactoring, we consider it as CTP.</p><p>The extracted method start(logVersion long) is in class <span class='blob-code-inner'><span class='pl-en'>LogPosition.</span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public currentPosition() : long extracted from public next() : boolean in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood, Automatic"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldExposeGapFreeSequenceSingleThreaded() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldExtendArrayIfNeedBe() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldDealWithThisScenario() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private assertGet(sequence OutOfOrderSequence, number long, meta long) : void inlined to public shouldKeepItsCoolWhenMultipleThreadsAreHammeringIt() : void in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private pruneLock : Lock from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
        "comment": "LogPruning changed to an interface and the LogPruningImpl did not exist (it is a new class)",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private pruneStrategy : LogPruneStrategy from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private msgLog : Log from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
        "comment": "LogPruning changed to an interface and the LogPruningImpl did not exist (it is a new class)",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private monitor : Monitor from class org.neo4j.kernel.Recovery to class org.neo4j.kernel.recovery.Recovery",
        "comment": "It is a move class or move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to class org.neo4j.kernel.impl.transaction.log.LogEntryCursor",
        "comment": "<p>channel appears now in two new classes,&nbsp;LogEntryCursor and Maker. Both of them are now used in the source class, and the old channel (coming from the ctor's param) is passed to both of them</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private recoveredLog : boolean from class org.neo4j.kernel.Recovery to class org.neo4j.kernel.recovery.Recovery",
        "comment": "It is a move class or move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private spi : SPI from class org.neo4j.kernel.Recovery to class org.neo4j.kernel.recovery.Recovery",
        "comment": "It is a move class or move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private entryReader : LogEntryReader from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to class org.neo4j.kernel.impl.transaction.log.LogEntryCursor",
        "comment": "<p>The attribute is moved to the new class which has been instantiated in the source class.</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logVersionRepository : LogVersionRepository from class org.neo4j.kernel.impl.transaction.log.pruning.ThresholdBasedPruneStrategyTest to class org.neo4j.kernel.recovery.DefaultRecoverySPI",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private msgLog : Log from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to class org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointerImpl",
        "comment": "<p>There are&nbsp;different possibilities: The old class has become an interface and a new class implementing the interface is created.</p><p>1) The old class has become an interface and a new class implementing the interface is created. The attribute is pushed down to this new class</p><p>2) The new interface is extracted from the existing class (<span style='background-color: #f6d5d9;'>something&nbsp;</span>like extract super class)</p><p>3) The old class is renamed to the new class and an interface with the same name as the old class is created and the old class is now implementing it</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private channel : T from class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor to class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor.Marker",
        "comment": "<p>channel appears now in two new classes,&nbsp;LogEntryCursor and Maker. Both of them are now used in the source class, and the old channel (coming from the ctor's param) is passed to both of them</p><p>Davood &amp; Laleh: The places where channel is used in PhysicalTransactionCursor do not relate to the places where Marker is used in the new version</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public finishedRotating(currentVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to public pruneLogs(upToVersion long) : void from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
        "comment": "Move and rename",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public LogPruning(pruneStrategy LogPruneStrategy, logProvider LogProvider) from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruning to public LogPruningImpl(pruneStrategy LogPruneStrategy, logProvider LogProvider) from class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImpl",
        "comment": "<p>new</p><p>In can be this case: LogPruning has been renamed to&nbsp;LogPruningImpl, but it now implements the interface with the same name =&gt; it will be extract interface in this case and should be pull up</p><p>Note that the method is constructor</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private channel : WritableLogChannel from class org.neo4j.kernel.impl.transaction.log.BatchingTransactionAppenderConcurrencyTest to class org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointerImpl",
        "comment": "<p>new</p><p>channel still exists in the source class, but as local variable.CheckPointerImpl does not have any relationship with&nbsp;WritableLogChannel</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 11758
}, {
    "id": 1122167,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "url": "https://github.com/neo4j/neo4j/commit/74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
    "author": "Alistair Jones",
    "time": "6/22/15 7:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private availability() : Availability extracted from private availability(millis long) : Availability in class org.neo4j.kernel.AvailabilityGuard",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public givenAccessGuardWith2ConditionsWhenGrantTwiceAndAwaitThenTrue() : void renamed to public givenAccessGuardWith2ConditionsWhenGrantEachAndAwaitThenTrue() : void in class org.neo4j.kernel.AvailabilityGuardTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public deny(requirementNotMet AvailabilityRequirement) : void renamed to public require(requirement AvailabilityRequirement) : void in class org.neo4j.kernel.AvailabilityGuard",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public checkAvailability(millis long, cls Class) : void renamed to public await(millis long) : void in class org.neo4j.kernel.AvailabilityGuard",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public grant(requirementNowMet AvailabilityRequirement) : void renamed to public fulfill(requirement Object) : void in class org.neo4j.kernel.AvailabilityGuard",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private checkAvailability() : void extracted from public beginTx() : Transaction in class org.neo4j.kernel.impl.factory.GraphDatabaseFacade",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private checkAvailability() : void extracted from public execute(query String, parameters Map) : Result in class org.neo4j.kernel.impl.factory.GraphDatabaseFacade",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3955
}, {
    "id": 1122338,
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "sha1": "0b93231025f51c7ec62fd8588985c5dc807854e4",
    "url": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/0b93231025f51c7ec62fd8588985c5dc807854e4",
    "author": "Sergey Ignatov",
    "time": "6/23/15 6:55 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected doSomething(virtualFile VirtualFile, module Module, project Project, title String, withProgress boolean) : boolean extracted from protected doSomething(virtualFile VirtualFile, module Module, project Project, title String) : boolean in class com.goide.actions.fmt.GoExternalToolsAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 794
}, {
    "id": 1122348,
    "repository": "https://github.com/mongodb/mongo-java-driver.git",
    "sha1": "8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "url": "https://github.com/mongodb/mongo-java-driver/commit/8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
    "author": "Jeff Yemin",
    "time": "6/22/15 6:05 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.mongodb.JsonPoweredTestHelper moved to util.JsonPoweredTestHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1039
}, {
    "id": 1122401,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "url": "https://github.com/apache/cassandra/commit/9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
    "author": "branimir",
    "time": "6/23/15 8:03 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getRandomToken(r Random) : LongToken extracted from public getRandomToken() : LongToken in class org.apache.cassandra.dht.Murmur3Partitioner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void extracted from private generateFakeEndpoints(numOldNodes int) : void in class org.apache.cassandra.dht.BootStrapperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection<String>) : Collection<Token> extracted from public getBootstrapTokens(metadata TokenMetadata) : Collection<Token> in class org.apache.cassandra.dht.BootStrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getBootstrapTokens(metadata TokenMetadata) : Collection renamed to private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection) : Collection in class org.apache.cassandra.dht.BootStrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 8768
}, {
    "id": 1122454,
    "repository": "https://github.com/crate/crate.git",
    "sha1": "5373a852a7e45715e0a6771b7cd56592994c07dd",
    "url": "https://github.com/crate/crate/commit/5373a852a7e45715e0a6771b7cd56592994c07dd",
    "author": "Philipp Bogensberger",
    "time": "6/23/15 10:52 AM",
    "refactorings": [{
        "type": "Push Down Method",
        "description": "Push Down Method public plan() : Plan from class io.crate.planner.node.dql.ESDQLPlanNode to public plan() : Plan from class io.crate.planner.node.dql.ESGetNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1122508,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "url": "https://github.com/spring-projects/spring-framework/commit/e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
    "author": "Rossen Stoyanchev",
    "time": "6/22/15 11:30 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.web.socket.server.support.AbstractHandshakeHandler from class org.springframework.web.socket.server.support.DefaultHandshakeHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2473
}, {
    "id": 1122541,
    "repository": "https://github.com/mongodb/morphia.git",
    "sha1": "5db323b99f7064af8780f2c35f245461cf55cc8e",
    "url": "https://github.com/mongodb/morphia/commit/5db323b99f7064af8780f2c35f245461cf55cc8e",
    "author": "Justin Lee",
    "time": "6/23/15 9:30 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private performBasicMappingTest() : void extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getClassNameCache() : Map extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 1159
}, {
    "id": 1122760,
    "repository": "https://github.com/openhab/openhab.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/openhab1-addons.git",
    "sha1": "a9b1e5d67421ed98b49ae25c3bbd6e27a0ab1590",
    "url": "https://github.com/openhab/openhab/commit/a9b1e5d67421ed98b49ae25c3bbd6e27a0ab1590",
    "author": "Bernd Pfrommer",
    "time": "6/22/15 4:45 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private bail(txt String) : void extracted from public processData() : Msg in class org.openhab.binding.insteonplm.internal.message.MsgFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private processBindingConfiguration() : void extracted from public updated(config Dictionary<String,?>) : void in class org.openhab.binding.insteonplm.InsteonPLMActiveBinding",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3517
}, {
    "id": 1122778,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "4d05a3b1168441216dcaea8282c39338285182af",
    "url": "https://github.com/hazelcast/hazelcast/commit/4d05a3b1168441216dcaea8282c39338285182af",
    "author": "alarmnummer",
    "time": "6/22/15 3:53 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.ExecutorCallbackAdapter moved to com.hazelcast.spi.InvocationBuilder.ExecutorCallbackAdapter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.cache.impl.operation.CacheCreateConfigOperation.CacheConfigCreateCallback",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.client.impl.client.MultiTargetClientRequest.SingleTargetCallback",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.partition.impl.MigrationRequestOperation.MigrationCallback",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.client.impl.protocol.task.AbstractMultiTargetMessageTask.SingleTargetCallback",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public notify(response Object) : void renamed to public onResponse(response Object) : void in class com.hazelcast.map.impl.proxy.MapProxySupport.MapExecutionCallbackAdapter",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected getTargetExecutionCallback() : ExecutionCallback extracted from public invoke() : InternalCompletableFuture in class com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl",
        "comment": "<p>Extract and Move to the parent class</p><p>Since RefDiff does not detects 'Extract and Move', we consider it as CTP. </p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 5152
}, {
    "id": 1122787,
    "repository": "https://github.com/wildfly/wildfly.git",
    "sha1": "37d842bfed9779e662321a5ee43c36b058386843",
    "url": "https://github.com/wildfly/wildfly/commit/37d842bfed9779e662321a5ee43c36b058386843",
    "author": "Brian Stansberry",
    "time": "6/23/15 8:14 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void extracted from public executeReloadAndWaitForCompletion(client ModelControllerClient) : void in class org.jboss.as.test.shared.ServerReload",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 7514
}, {
    "id": 1122892,
    "repository": "https://github.com/Netflix/zuul.git",
    "sha1": "b25d3f32ed2e2da86f5c746098686445c2e2a314",
    "url": "https://github.com/Netflix/zuul/commit/b25d3f32ed2e2da86f5c746098686445c2e2a314",
    "author": "Mike Smith",
    "time": "6/23/15 11:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private putFilter(sName String, filter ZuulFilter, lastModified long) : void extracted from public putFilter(file File) : boolean in class com.netflix.zuul.FilterLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getLocations() : String[] renamed to public getClassNames() : String[] in class com.netflix.zuul.FilterFileManager.FilterFileManagerConfig",
        "comment": "<p>new</p><p>There is one hint that&nbsp;getLocations() is renamed to getDirectories() (line 138 of FilterFileManager.java in the new version). getClassNames() is used only in the new code.</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 312
}, {
    "id": 1122979,
    "repository": "https://github.com/jankotek/MapDB.git",
    "sha1": "32dd05fc13b53873bf18c589622b55d12e3883c7",
    "url": "https://github.com/jankotek/MapDB/commit/32dd05fc13b53873bf18c589622b55d12e3883c7",
    "author": "Jan Kotek",
    "time": "6/24/15 8:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private insertOrUpdate(recid long, out DataIO.DataOutputByteArray, isInsert boolean) : void extracted from protected update2(recid long, out DataIO.DataOutputByteArray) : void in class org.mapdb.StoreAppend",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected longStackValParitySet(value long) : long from class org.mapdb.StoreDirect to protected longParitySet(value long) : long from class org.mapdb.Store",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1520
}, {
    "id": 1123103,
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "sha1": "3d5e343df6a39ce3b41624b90974d83e9899541e",
    "url": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/3d5e343df6a39ce3b41624b90974d83e9899541e",
    "author": "Alexander Zolotov",
    "time": "6/23/15 4:19 PM",
    "refactorings": [{
        "type": "Rename Method",
        "description": "Rename Method public getVariants() : Object[] renamed to public processResolveVariants(processor GoScopeProcessor) : void in class com.goide.psi.impl.GoVarReference",
        "comment": "<p>getVariants() now has default implementation in the super class (GoCachedReference), and the rename is not observed in the abstract super class.</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public processResolveVariants(processor GoScopeProcessor) : void extracted from public resolveInner() : PsiElement in class com.goide.psi.impl.GoVarReference",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood, Nikos"
    }],
    "refDiffExecutionTime": 849
}, {
    "id": 1123108,
    "repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
    "sha1": "b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "url": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin/commit/b8929ccb4057c74ac64679216487a4abcd3ae1c3",
    "author": "Alexander Zolotov",
    "time": "6/23/15 1:18 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private GO_CHECK_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to class com.goide.runconfig.GoRunUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isAvailableInModule(module Module) : boolean extracted from protected setupConfigurationFromContext(configuration GoTestRunConfigurationBase, context ConfigurationContext, sourceElement Ref) : boolean in class com.goide.runconfig.testing.GoTestRunConfigurationProducerBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private GO_CHECK_GITHUB_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to class com.goide.runconfig.GoRunUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public hasGoCheckSupport(module Module) : boolean extracted from public checkConfiguration() : void in class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration & moved to class com.goide.runconfig.GoRunUtil",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }],
    "refDiffExecutionTime": 917
}, {
    "id": 1123124,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "url": "https://github.com/apache/drill/commit/8815eb7d947be6d2a0281c15a3a60d8ba040db95",
    "author": "Sudheesh Katkam",
    "time": "6/23/15 4:01 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.SchemaUtilites",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.client.PrintingResultsListener",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.store.parquet.ParquetReaderUtility",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.common.exceptions.TestUserException",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.DrillSqlWorker",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : org.slf4j.Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.ShowTablesHandler",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method package ListWriter() : null from class org.apache.drill.exec.vector.complex.impl.Mode to package ListWriter() : null from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public clear() : void from class org.apache.drill.exec.vector.complex.impl.Mode to public clear() : void from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getField() : MaterializedField from class org.apache.drill.exec.vector.complex.impl.Mode to public getField() : MaterializedField from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public end() : void from class org.apache.drill.exec.vector.complex.impl.Mode to public end() : void from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public setPosition(index int) : void from class org.apache.drill.exec.vector.complex.impl.Mode to public setPosition(index int) : void from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getValueCapacity() : int from class org.apache.drill.exec.vector.complex.impl.Mode to public getValueCapacity() : int from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public list() : ListWriter from class org.apache.drill.exec.vector.complex.impl.Mode to public list() : ListWriter from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private currentChildIndex : int from class org.apache.drill.exec.vector.complex.impl.Mode to class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private getUnsupportedErrorMsg(expected String, found String) : String from class org.apache.drill.exec.vector.complex.impl.Mode to private getUnsupportedErrorMsg(expected String, found String) : String from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected innerVector : RepeatedValueVector from class org.apache.drill.exec.vector.complex.impl.Mode to class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public allocate() : void from class org.apache.drill.exec.vector.complex.impl.Mode to public allocate() : void from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public setValueCount(count int) : void from class org.apache.drill.exec.vector.complex.impl.Mode to public setValueCount(count int) : void from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private writer : FieldWriter from class org.apache.drill.exec.vector.complex.impl.Mode to class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public start() : void from class org.apache.drill.exec.vector.complex.impl.Mode to public start() : void from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public map() : MapWriter from class org.apache.drill.exec.vector.complex.impl.Mode to public map() : MapWriter from class org.apache.drill.exec.vector.complex.impl.$",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1123128,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "711992f22ae6d6dfc43bdb4c01bf8f921d175b38",
    "url": "https://github.com/apache/drill/commit/711992f22ae6d6dfc43bdb4c01bf8f921d175b38",
    "author": "dbarclay",
    "time": "6/22/15 5:05 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private nextRowInternally() : boolean extracted from public next() : boolean in class org.apache.drill.jdbc.impl.DrillCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 825
}, {
    "id": 1123153,
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "sha1": "ec5230abc7500734d7b78a176c291378e100a927",
    "url": "https://github.com/spring-projects/spring-integration/commit/ec5230abc7500734d7b78a176c291378e100a927",
    "author": "Gary Russell",
    "time": "6/23/15 4:35 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private doClose() : void inlined to public close() : void in class org.springframework.integration.ip.tcp.connection.CachingClientConnectionFactory.CachedConnection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2231
}, {
    "id": 1123376,
    "repository": "https://github.com/springfox/springfox.git",
    "sha1": "e70b04810eb1e73f60e3d8b3980b8271ce473565",
    "url": "https://github.com/springfox/springfox/commit/e70b04810eb1e73f60e3d8b3980b8271ce473565",
    "author": "Dilip Krishnan",
    "time": "6/23/15 2:54 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class springfox.documentation.schema.property.provider.DefaultModelPropertiesProvider moved to springfox.documentation.schema.property.DefaultModelPropertiesProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class springfox.documentation.schema.property.provider.ModelPropertiesProvider moved to springfox.documentation.schema.property.ModelPropertiesProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1123482,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "4184c577f4bbc57f3ac13639557cfd99cdaca3e7",
    "url": "https://github.com/infinispan/infinispan/commit/4184c577f4bbc57f3ac13639557cfd99cdaca3e7",
    "author": "Karsten Blees",
    "time": "6/23/15 8:24 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private stopped : boolean from class org.infinispan.persistence.async.State to class org.infinispan.persistence.async.AsyncCacheWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2042
}, {
    "id": 1123501,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "5f78f9ef1e6c798849d34cc66721e6c1d9709b6f",
    "url": "https://github.com/apache/hive/commit/5f78f9ef1e6c798849d34cc66721e6c1d9709b6f",
    "author": "Prasanth Jayachandran",
    "time": "6/23/15 6:19 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package generateSplitsInfo(conf Configuration, numSplits int) : List<OrcSplit> extracted from package generateSplitsInfo(conf Configuration) : List<OrcSplit> in class org.apache.hadoop.hive.ql.io.orc.OrcInputFormat",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3621
}, {
    "id": 1123509,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "abe6cd5d4614eb2ae3a78d85196f4d786d5886bd",
    "url": "https://github.com/apache/hive/commit/abe6cd5d4614eb2ae3a78d85196f4d786d5886bd",
    "author": "Pengcheng Xiong",
    "time": "6/23/15 3:02 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private uniqueCounter : int from class org.apache.hadoop.hive.ql.optimizer.calcite.translator.HiveOpConverterPostProc to class org.apache.hadoop.hive.ql.optimizer.calcite.translator.HiveOpConverter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3562
}, {
    "id": 1123527,
    "repository": "https://github.com/structr/structr.git",
    "sha1": "6c59050b8b03adf6d8043f3fb7add0496f447edf",
    "url": "https://github.com/structr/structr/commit/6c59050b8b03adf6d8043f3fb7add0496f447edf",
    "author": "Axel Morgner",
    "time": "6/24/15 10:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getSchemaProperties(schemaNode SchemaNode) : List<SchemaProperty> extracted from private getPropertiesForView(type Class, view String, schemaNode SchemaNode) : Map<String,Object> in class org.structr.rest.resource.SchemaTypeResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1425
}, {
    "id": 1123651,
    "repository": "https://github.com/WhisperSystems/Signal-Android.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/Signal-Android.git",
    "sha1": "99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
    "url": "https://github.com/WhisperSystems/Signal-Android/commit/99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
    "author": "Moxie Marlinspike",
    "time": "6/23/15 2:15 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.thoughtcrime.securesms.contacts.ContactPhotoFactory.ExpandingLayerDrawable moved to org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto.ExpandingLayerDrawable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private getSynchronousRecipient(context Context, recipientId long) : Recipient inlined to package getRecipient(context Context, recipientId long, asynchronous boolean) : Recipient in class org.thoughtcrime.securesms.recipients.RecipientProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getRecipientDetails(context Context, number String) : RecipientDetails renamed to private getIndividualRecipientDetails(context Context, number String) : RecipientDetails in class org.thoughtcrime.securesms.recipients.RecipientProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1123684,
    "repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
    "sha1": "ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
    "url": "https://github.com/phishman3579/java-algorithms-implementation/commit/ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
    "author": "Justin Wetherell",
    "time": "6/24/15 5:48 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private runTests(testable Testable, tests int, unsorteds Integer[][], sorteds Integer[][], strings String[]) : boolean extracted from private runTests() : boolean in class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaRedBlackTreeString : java.util.TreeSet from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackStringTree",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaLinkedQueue : java.util.Deque from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedQueue",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaLinkedList : java.util.List from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaLinkedList",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaMaxArrayHeap : java.util.PriorityQueue from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMaxHeap",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaMinArrayHeap : java.util.PriorityQueue from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaMinHeap",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaStack : java.util.Stack from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaStack",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaArrayList : java.util.List from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayList",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaArrayQueue : java.util.Deque from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaArrayQueue",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaRedBlackTreeInteger : java.util.TreeSet from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaRedBlackIntegerTree",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaSkipListMap : ConcurrentSkipListMap from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaSkipListMap",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaTreeMap : java.util.Map from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaTreeMap",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package javaHashMap : java.util.Map from class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming to class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming.testJavaHashMap",
        "comment": "the target did not exist in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 644
}, {
    "id": 1123699,
    "repository": "https://github.com/rackerlabs/blueflood.git",
    "sha1": "fce2d1f07c14bbac286e16ec666fd4bf26abd43d",
    "url": "https://github.com/rackerlabs/blueflood/commit/fce2d1f07c14bbac286e16ec666fd4bf26abd43d",
    "author": "Chinmay Gupte",
    "time": "6/24/15 2:36 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to class com.rackspacecloud.blueflood.http.DefaultHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4099
}, {
    "id": 1123712,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "84b7b3974ae8171a4de2f804eb94fcd1d6cd6647",
    "url": "https://github.com/facebook/buck/commit/84b7b3974ae8171a4de2f804eb94fcd1d6cd6647",
    "author": "Simon Stewart",
    "time": "6/24/15 1:23 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.facebook.buck.java.ReportGenerator moved to com.facebook.buck.java.coverage.ReportGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1685
}, {
    "id": 1123715,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "d49765899cb9df6781fff9773ffc244b5167351c",
    "url": "https://github.com/facebook/buck/commit/d49765899cb9df6781fff9773ffc244b5167351c",
    "author": "Russell Porter",
    "time": "6/24/15 1:21 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet<Path>, locales ImmutableSet<String>) : Predicate<Path> extracted from public testFilterLocales() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet<Path>, locales ImmutableSet<String>) : Predicate<Path> extracted from public testFilterStrings() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertNotMatchesRegex(path String) : void extracted from public testNonEnglishStringsPathRegex() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public enableStringsFilter() : Builder renamed to public enableStringWhitelisting() : Builder in class com.facebook.buck.android.FilterResourcesStep.Builder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testFilterStrings() : void renamed to public testWhitelistFilter() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testFilterStrings() : void renamed to private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet, locales ImmutableSet) : Predicate in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private matchesRegex(input String) : boolean renamed to private assertNotMatchesRegex(path String) : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testFilterStringsIncludingEnglishStrings() : void renamed to public testWhitelistFilter() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertMatchesRegex(path String, language String, country String) : void extracted from public testNonEnglishStringsPathRegex() : void in class com.facebook.buck.android.FilterResourcesStepTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2754
}, {
    "id": 1123736,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "cfea606b129dbfc5703eb279d4803185afc99c58",
    "url": "https://github.com/facebook/buck/commit/cfea606b129dbfc5703eb279d4803185afc99c58",
    "author": "Natthu Bharambe",
    "time": "6/24/15 1:08 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getPathToJSBundleDir(target BuildTarget) : Path extracted from protected ReactNativeBundle(ruleParams BuildRuleParams, resolver SourcePathResolver, entryPath SourcePath, isDevMode boolean, bundleName String, jsPackager SourcePath, platform ReactNativePlatform, depsFinder ReactNativeDeps) in class com.facebook.buck.js.ReactNativeBundle",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getPathToResources() : Path renamed to public getResources() : Path in class com.facebook.buck.js.ReactNativeBundle",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getPathToResources(target BuildTarget) : Path extracted from protected ReactNativeBundle(ruleParams BuildRuleParams, resolver SourcePathResolver, entryPath SourcePath, isDevMode boolean, bundleName String, jsPackager SourcePath, platform ReactNativePlatform, depsFinder ReactNativeDeps) in class com.facebook.buck.js.ReactNativeBundle",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3024
}, {
    "id": 1123761,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
    "author": "Michael Bell",
    "time": "6/24/15 10:29 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public updatedChannel(channel StoredServerChannel) : void extracted from public closeChannel(channel StoredServerChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelServerStates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from package removeChannel(channel StoredClientChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from private putChannel(channel StoredClientChannel, updateWallet boolean) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from private updateChannelInWallet() : void in class org.bitcoinj.protocols.channels.PaymentChannelClientState",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>Move to class StoredPaymentChannelServerStates</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public updatedChannel(channel StoredServerChannel) : void extracted from private updateChannelInWallet() : void in class org.bitcoinj.protocols.channels.PaymentChannelServerState",
        "comment": "<p>Extract and Move to other&nbsp; class.</p><p>Moved to class StoredPaymentChannelServerStates</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }],
    "refDiffExecutionTime": 1268
}, {
    "id": 1123770,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
    "author": "Amichai Rothman",
    "time": "6/24/15 10:21 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private digest : MessageDigest from class org.bitcoinj.core.Utils to class org.bitcoinj.core.Sha256Hash",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1883
}, {
    "id": 1123773,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "2fd96c777164dd812e8b5a4294b162889601df1d",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/2fd96c777164dd812e8b5a4294b162889601df1d",
    "author": "Amichai Rothman",
    "time": "6/24/15 10:21 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public newSha256Digest() : MessageDigest extracted from public sha256hash160(input byte[]) : byte[] in class org.bitcoinj.core.Utils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public newSha256Digest() : MessageDigest extracted from public hash(contents byte[]) : Sha256Hash in class org.bitcoinj.core.Sha256Hash",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public newSha256Digest() : MessageDigest extracted from private readBinary(inputStream InputStream) : Sha256Hash in class org.bitcoinj.core.CheckpointManager",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public newSha256Digest() : MessageDigest extracted from public executeScript(txContainingThis Transaction, index long, script Script, stack LinkedList, enforceNullDummy boolean) : void in class org.bitcoinj.script.Script",
        "comment": "<p>Extract and Move to other&nbsp; class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public newSha256Digest() : MessageDigest extracted from public MnemonicCode(wordstream InputStream, wordListDigest String) in class org.bitcoinj.crypto.MnemonicCode",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public newSha256Digest() : MessageDigest extracted from private writeBinaryCheckpoints(checkpoints TreeMap, file File) : void in class org.bitcoinj.tools.BuildCheckpoints",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }],
    "refDiffExecutionTime": 1994
}, {
    "id": 1123789,
    "repository": "https://github.com/jersey/jersey.git",
    "sha1": "fab1516773d50bf86d9cc37e2f6db13496f0ecae",
    "url": "https://github.com/jersey/jersey/commit/fab1516773d50bf86d9cc37e2f6db13496f0ecae",
    "author": "Michal Gajdos",
    "time": "6/24/15 6:33 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public close() : void extracted from public hasNext() : boolean in class org.glassfish.jersey.server.internal.scanning.JarFileScanner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public FilesScanner(fileNames String[], recursive boolean) in class org.glassfish.jersey.server.internal.scanning.FilesScanner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public reset() : void in class org.glassfish.jersey.server.internal.scanning.FilesScanner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.glassfish.jersey.server.internal.scanning.ResourceFinderStackTest renamed to org.glassfish.jersey.server.internal.scanning.CompositeResourceFinderTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.glassfish.jersey.server.internal.scanning.ResourceFinderStack renamed to org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public close() : void extracted from public reset() : void in class org.glassfish.jersey.server.internal.scanning.FilesScanner",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 6782
}, {
    "id": 1123840,
    "repository": "https://github.com/apache/giraph.git",
    "sha1": "add1d4f07c925b8a9044cb3aa5bb4abdeaf49fc7",
    "url": "https://github.com/apache/giraph/commit/add1d4f07c925b8a9044cb3aa5bb4abdeaf49fc7",
    "author": "Maja Kabiljo",
    "time": "6/24/15 4:23 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private registerSerializer(kryo HadoopKryo, className String, serializer Serializer) : void extracted from private createKryo() : HadoopKryo in class org.apache.giraph.writable.kryo.HadoopKryo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1159
}, {
    "id": 1123899,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "f797bfa4da53315b49f8d97b784047f33ba1bf5f",
    "url": "https://github.com/apache/cassandra/commit/f797bfa4da53315b49f8d97b784047f33ba1bf5f",
    "author": "Stefania Alborghetti",
    "time": "6/24/15 1:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fromUnixTimestamp(timestamp long, nanos long) : long extracted from private fromUnixTimestamp(timestamp long) : long in class org.apache.cassandra.utils.UUIDGen",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected createTableName() : String extracted from protected createTable(query String) : String in class org.apache.cassandra.cql3.CQLTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private makeCasRequest(queryState QueryState, options QueryOptions) : CQL3CasRequest extracted from public executeWithCondition(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.cql3.TypeTest moved to org.apache.cassandra.cql3.validation.entities.TypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private makeCasRequest(options BatchQueryOptions, state QueryState) : Pair<CQL3CasRequest,Set<ColumnDefinition>> extracted from private executeWithConditions(options BatchQueryOptions, state QueryState) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.cql3.CrcCheckChanceTest moved to org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.cql3.SSTableMetadataTrackingTest moved to org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object[]) : void extracted from protected assertInvalidMessage(errorMessage String, query String, values Object[]) : void in class org.apache.cassandra.cql3.CQLTester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.cql3.FrozenCollectionsTest moved to org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.cql3.UserTypesTest moved to org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.SliceQueryFilterWithTombstonesTest renamed to org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.UseStatementTest renamed to org.apache.cassandra.cql3.validation.operations.UseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.MultiColumnRelationTest renamed to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.SingleColumnRelationTest renamed to org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.apache.cassandra.cql3.MultiColumnRelationTest moved to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.apache.cassandra.cql3.UseStatementTest moved to org.apache.cassandra.cql3.validation.operations.UseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.apache.cassandra.cql3.AlterTableTest moved to org.apache.cassandra.cql3.validation.operations.AlterTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testInvalidCollectionsMix() : void from class org.apache.cassandra.cql3.CollectionsTest to public testInvalidCollectionsMix() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
        "comment": "<p>It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting to see move class refactroing instead.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testLists() : void from class org.apache.cassandra.cql3.CollectionsTest to public testLists() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
        "comment": "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testMapBulkRemoval() : void from class org.apache.cassandra.cql3.CollectionsTest to public testMapBulkRemoval() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
        "comment": "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testMaps() : void from class org.apache.cassandra.cql3.CollectionsTest to public testMaps() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
        "comment": "It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting  to see move class refactroing instead.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method public testSets() : void from class org.apache.cassandra.cql3.CollectionsTest to public testSets() : void from class org.apache.cassandra.cql3.validation.entities.CollectionsTest",
        "comment": "<p>It is more like extract sub package refactoring, since RefDiff cannot detetc package level refactroing I was expecting to see move class refactroing instead.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testContainsKeyAndContainsWithIndexOnMapKey() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testContainsKeyAndContainsWithIndexOnMapKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testContainsKeyAndContainsWithIndexOnMapValue() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testContainsKeyAndContainsWithIndexOnMapValue() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testFilterForContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testFilterForContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexLookupWithClusteringPrefix() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testIndexLookupWithClusteringPrefix() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>class ContainsRelationTest is deleted in the base version and class SelectTest is added in the refactored versions. Most of the methods in ContainsRelationTest are moved to class SelectTest. Thus it is more like move and rename class.</p><p>Davood &amp; Matin: It seems to be a merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testListContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testListContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testListContainsWithFiltering() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testListContainsWithFiltering() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testMapKeyContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testMapKeyContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testMapValueContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testMapValueContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testQueryMultipleIndexTypes() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testQueryMultipleIndexTypes() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testSetContains() : void from class org.apache.cassandra.cql3.ContainsRelationTest to public testSetContains() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private removeQuotes(indexName String) : String from class org.apache.cassandra.cql3.CreateIndexStatementTest to private removeQuotes(indexName String) : String from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "Possible move and rename ro merge class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateAndDropIndex() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndex() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "Possible move and rename ro merge class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateAndDropIndexWithCamelCaseIdentifier() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndexWithCamelCaseIdentifier() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "Possible move and rename ro merge class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateAndDropIndexWithQuotedIdentifier() : void from class org.apache.cassandra.cql3.CreateIndexStatementTest to public testCreateAndDropIndexWithQuotedIdentifier() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "Possible move and rename ro merge class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCQL3PartitionKeyOnlyTable() : void from class org.apache.cassandra.cql3.CreateTableTest to public testCQL3PartitionKeyOnlyTable() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>Possible merge</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method private assertTriggerExists(name String, clazz Class) : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to private assertTriggerExists(name String, clazz Class) : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>This seems to be a rename class!</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateTrigger() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testCreateTrigger() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>This seems to be a rename class!</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateTriggerIfNotExists() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testCreateTriggerIfNotExists() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>This seems to be a rename class!</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testDropTrigger() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testDropTrigger() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>This seems to be a rename class!</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public testDropTriggerIfExists() : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to public testDropTriggerIfExists() : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>This seems to be rename class!</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public augment(key ByteBuffer, update ColumnFamily) : Collection from class org.apache.cassandra.cql3.CreateTriggerStatementTest.TestTrigger to public augment(key ByteBuffer, update ColumnFamily) : Collection from class org.apache.cassandra.cql3.validation.operations.CreateTest.TestTrigger",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public failInsert(insertCQL String, args Object[]) : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public failInsert(insertCQL String, args Object[]) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>It seems that several classes are merged into&nbsp;SecondaryIndexTest</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public succeedInsert(insertCQL String, args Object[]) : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public succeedInsert(insertCQL String, args Object[]) : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCompactTableWithValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testCompactTableWithValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnClusteringColumnInsertPartitionKeyAndClusteringsOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnClusteringColumnInsertPartitionKeyAndClusteringsOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnClusteringColumnInsertValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnClusteringColumnInsertValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnCollectionKeyInsertPartitionKeyAndClusteringOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCollectionKeyInsertPartitionKeyAndClusteringOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnCollectionValueInsertPartitionKeyAndCollectionKeyOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCollectionValueInsertPartitionKeyAndCollectionKeyOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnCompositeValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnCompositeValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnFullCollectionEntryInsertCollectionValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnFullCollectionEntryInsertCollectionValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testIndexOnPartitionKeyInsertValueOver64k() : void from class org.apache.cassandra.cql3.IndexedValuesValidationTest to public testIndexOnPartitionKeyInsertValueOver64k() : void from class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTokenFunctionWithCompoundPartitionAndClusteringCols() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithCompoundPartitionAndClusteringCols() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
        "comment": "<p>Rename class, but with the possibility of move method</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTokenFunctionWithMultiColumnPartitionKey() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithMultiColumnPartitionKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
        "comment": "<p>Rename class, but with the possibility of move method</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTokenFunctionWithPartitionKeyAndClusteringKeyArguments() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithPartitionKeyAndClusteringKeyArguments() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
        "comment": "<p>Rename class, but with the possibility of move method</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTokenFunctionWithSingleColumnPartitionKey() : void from class org.apache.cassandra.cql3.SelectWithTokenFunctionTest to public testTokenFunctionWithSingleColumnPartitionKey() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderedPartitionerTest",
        "comment": "<p>Rename class, but with the possibility of move method</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testFieldSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFieldSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
        "comment": "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testFunctionSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFunctionSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
        "comment": "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testFunctionSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testFunctionSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
        "comment": "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testNormalSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testNormalSelectionOrderMultipleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
        "comment": "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testNormalSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.SelectionOrderingTest to public testNormalSelectionOrderSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectOrderByTest",
        "comment": "<p>Seems to be rename class</p><p>It can be move as well, but there are new methods in the target class that did not exist in the previous revision</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testSingleClustering() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClustering() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testSingleClusteringReversed() : void from class org.apache.cassandra.cql3.StaticColumnsQueryTest to public testSingleClusteringReversed() : void from class org.apache.cassandra.cql3.validation.operations.SelectTest",
        "comment": "<p>Merge</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testNegativeTimestamps() : void from class org.apache.cassandra.cql3.TimestampTest to public testNegativeTimestamps() : void from class org.apache.cassandra.cql3.validation.entities.TimestampTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testInvalidQueries() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testInvalidQueries() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testNestedTuple() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testNestedTuple() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTupleInClusteringKey() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTupleInClusteringKey() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
        "comment": "<p>It's move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTupleInPartitionKey() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTupleInPartitionKey() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTuplePutAndGet() : void from class org.apache.cassandra.cql3.TupleTypeTest to public testTuplePutAndGet() : void from class org.apache.cassandra.cql3.validation.entities.TupleTypeTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlterUDT() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlterUDT() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlteringUserTypeNestedWithinList() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinList() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlteringUserTypeNestedWithinMap() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinMap() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlteringUserTypeNestedWithinNestedTuple() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinNestedTuple() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlteringUserTypeNestedWithinSet() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinSet() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlteringUserTypeNestedWithinTuple() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinTuple() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testAlteringUserTypeNestedWithinUserType() : void from class org.apache.cassandra.cql3.UserTypesTest to public testAlteringUserTypeNestedWithinUserType() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCassandra8105() : void from class org.apache.cassandra.cql3.UserTypesTest to public testCassandra8105() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testCreateInvalidTablesWithUDT() : void from class org.apache.cassandra.cql3.UserTypesTest to public testCreateInvalidTablesWithUDT() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testFor7684() : void from class org.apache.cassandra.cql3.UserTypesTest to public testFor7684() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testInvalidField() : void from class org.apache.cassandra.cql3.UserTypesTest to public testInvalidField() : void from class org.apache.cassandra.cql3.validation.entities.UserTypesTest",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private assertTriggerDoesNotExists(name String, clazz Class) : void from class org.apache.cassandra.cql3.CreateTriggerStatementTest to private assertTriggerDoesNotExists(name String, clazz Class) : void from class org.apache.cassandra.cql3.validation.operations.CreateTest",
        "comment": "<p>Seems to be rename class.</p><p>Move method can also be correct, because of&nbsp;Assert.assertFalse in this method</p><p>Nikos: This is a merge of multiple test classes to one.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public requestNames() : List extracted from public metadata() : List in class org.apache.cassandra.cql3.UntypedResultSet.FromResultSet",
        "comment": "<p>Extract and Move to other&nbsp; class</p><p>Moved to class&nbsp; ResultSet.<span class='pl-en'>Metadata</span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private TOO_BIG : int from class org.apache.cassandra.cql3.IndexedValuesValidationTest to class org.apache.cassandra.cql3.validation.entities.SecondaryIndexTest",
        "comment": "<p>Merge class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.CreateTableTest renamed to org.apache.cassandra.cql3.validation.entities.DateTypeTest",
        "comment": "<p>I cannot find a compelling reason to accept this change. The functionalities of the two classes are dissimilar. Git detects another rename TimestampTest.java &rarr; DateTypeTest.java, which seems to be more reasonable (but still I can't vote for accepting that either)&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 7672
}, {
    "id": 1123966,
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "sha1": "071588a418dbc743e0f7dbfe218cd8a6c0f97421",
    "url": "https://github.com/spring-projects/spring-data-neo4j/commit/071588a418dbc743e0f7dbfe218cd8a6c0f97421",
    "author": "Vince Bickers",
    "time": "6/24/15 2:10 PM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.springframework.data.neo4j.integration.movies to org.springframework.data.neo4j.queries",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Rename Package org.springframework.data.neo4j.integration.helloworld to org.springframework.data.neo4j.examples.galaxy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.ApplicationConfig moved to org.springframework.data.neo4j.transactions.ApplicationConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.ProgrammaticRepositoryTest moved to org.springframework.data.neo4j.repositories.ProgrammaticRepositoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.UserRepository moved to org.springframework.data.neo4j.extensions.UserRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.ExceptionTranslationTest moved to org.springframework.data.neo4j.template.ExceptionTranslationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.MovieRepository moved to org.springframework.data.neo4j.repositories.repo.MovieRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.TransactionBoundaryTest moved to org.springframework.data.neo4j.transactions.TransactionBoundaryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.Cinema moved to org.springframework.data.neo4j.web.domain.Cinema",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.RepoScanningTest moved to org.springframework.data.neo4j.repositories.RepoScanningTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.RepositoryDefinitionTest moved to org.springframework.data.neo4j.repositories.RepositoryDefinitionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.TransactionIntegrationTest moved to org.springframework.data.neo4j.transactions.TransactionIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.WebIntegrationTest moved to org.springframework.data.neo4j.web.WebIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryTest moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.repository.support.GraphRepositoryFactoryTest moved to org.springframework.data.neo4j.repositories.support.GraphRepositoryFactoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.UserRepository moved to org.springframework.data.neo4j.repositories.repo.UserRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.TemplateApplicationEventTest moved to org.springframework.data.neo4j.template.TemplateApplicationEventTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.context.DataManipulationEventConfiguration moved to org.springframework.data.neo4j.template.context.DataManipulationEventConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.service.WrapperService moved to org.springframework.data.neo4j.transactions.service.WrapperService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomPersistenceContext moved to org.springframework.data.neo4j.extensions.CustomPersistenceContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.repo.UserRepository moved to org.springframework.data.neo4j.web.repo.UserRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepository moved to org.springframework.data.neo4j.extensions.CustomGraphRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.context.WebAppContext moved to org.springframework.data.neo4j.web.context.WebAppContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.domain.Movie moved to org.springframework.data.neo4j.repositories.domain.Movie",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.service.UserService moved to org.springframework.data.neo4j.web.service.UserService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.domain.User moved to org.springframework.data.neo4j.extensions.domain.User",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryImpl moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.service.UserServiceImpl moved to org.springframework.data.neo4j.web.service.UserServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.transactions.service.BusinessService moved to org.springframework.data.neo4j.transactions.service.BusinessService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.repo.GenreRepository moved to org.springframework.data.neo4j.web.repo.GenreRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.domain.User moved to org.springframework.data.neo4j.repositories.domain.User",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.User moved to org.springframework.data.neo4j.web.domain.User",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.Neo4jTemplateTest moved to org.springframework.data.neo4j.template.Neo4jTemplateTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext moved to org.springframework.data.neo4j.web.context.WebPersistenceContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.controller.UserController moved to org.springframework.data.neo4j.web.controller.UserController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.template.TestNeo4jEventListener moved to org.springframework.data.neo4j.template.TestNeo4jEventListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.PersistenceContextInTheSamePackage moved to org.springframework.data.neo4j.repositories.repo.PersistenceContextInTheSamePackage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.repositories.context.PersistenceContext renamed to org.springframework.data.neo4j.repositories.context.RepositoriesTestContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.movies.context.PersistenceContext renamed to org.springframework.data.neo4j.examples.movies.context.MoviesContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.helloworld.context.HelloWorldContext renamed to org.springframework.data.neo4j.examples.galaxy.context.GalaxyContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.movies.End2EndIntegrationTest renamed to org.springframework.data.neo4j.examples.movies.MoviesIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.data.neo4j.integration.jsr303.PersistenceConfiguration renamed to org.springframework.data.neo4j.examples.jsr303.JSR303Context",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.CinemaRepository moved to org.springframework.data.neo4j.examples.movies.repo.CinemaRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : Long from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getId() : Long from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.TempMovie moved to org.springframework.data.neo4j.examples.movies.domain.TempMovie",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.DerivedQueryTest moved to org.springframework.data.neo4j.queries.DerivedQueryTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Cinema moved to org.springframework.data.neo4j.examples.movies.domain.Cinema",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.TempMovieRepository moved to org.springframework.data.neo4j.examples.movies.repo.TempMovieRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getName() : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.UnmanagedUserPojo moved to org.springframework.data.neo4j.examples.movies.repo.UnmanagedUserPojo",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.data.neo4j.integration.helloworld.domain.World to public equals(obj Object) : boolean from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Person moved to org.springframework.data.neo4j.examples.movies.domain.Person",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public canBeReachedFrom(otherWorld World) : boolean from class org.springframework.data.neo4j.integration.helloworld.domain.World to public canBeReachedFrom(otherWorld World) : boolean from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private reachableByRocket : Set from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public validator() : LocalValidatorFactoryBean from class org.springframework.data.neo4j.integration.jsr303.WebConfiguration to public validator() : LocalValidatorFactoryBean from class org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.RatingRepository moved to org.springframework.data.neo4j.examples.movies.repo.RatingRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.service.AdultService moved to org.springframework.data.neo4j.examples.jsr303.service.AdultService",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Movie moved to org.springframework.data.neo4j.examples.movies.domain.Movie",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.User moved to org.springframework.data.neo4j.examples.movies.domain.User",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.ReleasedMovie moved to org.springframework.data.neo4j.examples.movies.domain.ReleasedMovie",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.service.UserService moved to org.springframework.data.neo4j.examples.movies.service.UserService",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.UserRepository moved to org.springframework.data.neo4j.examples.movies.repo.UserRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSession() : Session from class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext to public getSession() : Session from class org.springframework.data.neo4j.web.context.WebPersistenceContext",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext to public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.transactions.ApplicationConfig",
        "comment": "<p>No method removed from&nbsp;WebPersistenceContext!</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.helloworld.GalaxyServiceTest moved to org.springframework.data.neo4j.examples.galaxy.GalaxyServiceTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.integration.transactions.ApplicationConfig to public neo4jServer() : Neo4jServer from class org.springframework.data.neo4j.transactions.ApplicationConfig",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.helloworld.service.GalaxyService moved to org.springframework.data.neo4j.examples.galaxy.service.GalaxyService",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.AbstractEntity moved to org.springframework.data.neo4j.examples.movies.domain.AbstractEntity",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.QueryIntegrationTest moved to org.springframework.data.neo4j.queries.QueryIntegrationTest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.AbstractEntityRepository moved to org.springframework.data.neo4j.examples.movies.repo.AbstractEntityRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.RichUserQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.RichUserQueryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.GenreRepository moved to org.springframework.data.neo4j.examples.movies.repo.GenreRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.Gender moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.Gender",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.domain.Adult moved to org.springframework.data.neo4j.examples.jsr303.domain.Adult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.service.UserServiceImpl moved to org.springframework.data.neo4j.examples.movies.service.UserServiceImpl",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.AbstractAnnotatedEntity moved to org.springframework.data.neo4j.examples.movies.domain.AbstractAnnotatedEntity",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setReachableByRocket(reachableByRocket Set) : void from class org.springframework.data.neo4j.integration.helloworld.domain.World to public setReachableByRocket(reachableByRocket Set) : void from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.ActorRepository moved to org.springframework.data.neo4j.examples.movies.repo.ActorRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.controller.AdultController moved to org.springframework.data.neo4j.examples.jsr303.controller.AdultController",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private id : Long from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to public hashCode() : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.EntityWrappingQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.EntityWrappingQueryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.JSR303Test moved to org.springframework.data.neo4j.examples.jsr303.JSR303Test",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.UserQueryResultInterface moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.UserQueryResultInterface",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Rating moved to org.springframework.data.neo4j.examples.movies.domain.Rating",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private moons : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.data.neo4j.integration.helloworld.domain.World to public toString() : String from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getReachableByRocket() : Set from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getReachableByRocket() : Set from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.repo.AbstractAnnotatedEntityRepository moved to org.springframework.data.neo4j.examples.movies.repo.AbstractAnnotatedEntityRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public addRocketRouteTo(otherWorld World) : void from class org.springframework.data.neo4j.integration.helloworld.domain.World to public addRocketRouteTo(otherWorld World) : void from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.queryresult.UserQueryResult moved to org.springframework.data.neo4j.examples.movies.domain.queryresult.UserQueryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMoons() : int from class org.springframework.data.neo4j.integration.helloworld.domain.World to public getMoons() : int from class org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "added",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Actor moved to org.springframework.data.neo4j.examples.movies.domain.Actor",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.repo.AdultRepository moved to org.springframework.data.neo4j.examples.jsr303.repo.AdultRepository",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.jsr303.WebConfiguration moved to org.springframework.data.neo4j.examples.jsr303.WebConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.integration.helloworld.domain.World moved to org.springframework.data.neo4j.examples.galaxy.domain.World",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1124301,
    "repository": "https://github.com/mockito/mockito.git",
    "sha1": "7f20e63a7252f33c888085134d16ee8bf45f183f",
    "url": "https://github.com/mockito/mockito/commit/7f20e63a7252f33c888085134d16ee8bf45f183f",
    "author": "Szczepan Faber",
    "time": "6/25/15 11:28 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.mockito.internal.matchers.MatchersPrinter moved to org.mockito.internal.matchers.text.MatchersPrinter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.LocalizedMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.NotNull",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Contains",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.EndsWith",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.InstanceOf",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.StartsWith",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Matches",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Find",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.CompareTo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Any",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Equals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.apachecommons.ReflectionEquals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.EqualsWithDelta",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Null",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.VarargCapturingMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.CapturingMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.ArrayEquals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.mockito.internal.util.text.ArrayIterator moved to org.mockito.internal.matchers.text.ArrayIterator",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.mockito.internal.util.text.HamcrestPrinter moved to org.mockito.internal.matchers.text.HamcrestPrinter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Or",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.And",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Not",
        "comment": "Doing the same thing",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.LocalizedMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getArgumentsBlock(matchers List, printSettings PrintSettings) : String from class org.mockito.internal.matchers.MatchersPrinter to public getArgumentsBlock(matchers List, printSettings PrintSettings) : String from class org.mockito.internal.matchers.text.MatchersPrinter",
        "comment": "Its a move class. In this method there is a singature change too",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getArgumentsLine(matchers List, printSettings PrintSettings) : String from class org.mockito.internal.matchers.MatchersPrinter to public getArgumentsLine(matchers List, printSettings PrintSettings) : String from class org.mockito.internal.matchers.text.MatchersPrinter",
        "comment": "Its a move class. In this method there is a singature change too",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected append(str String) : void from class org.mockito.internal.util.text.ValuePrinter to protected append(str String) : void from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public appendList(start String, separator String, end String, i Iterator) : ValuePrinter from class org.mockito.internal.util.text.ValuePrinter to public appendList(start String, separator String, end String, i Iterator) : ValuePrinter from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public appendText(text String) : ValuePrinter from class org.mockito.internal.util.text.ValuePrinter to public appendText(text String) : ValuePrinter from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private descriptionOf(value Object) : String from class org.mockito.internal.util.text.ValuePrinter to private descriptionOf(value Object) : String from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private toJavaSyntax(unformatted String) : void from class org.mockito.internal.util.text.ValuePrinter to private toJavaSyntax(unformatted String) : void from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.mockito.internal.util.text.ValuePrinter to public toString() : String from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private applyPrintSettings(matchers List, printSettings PrintSettings) : Iterator from class org.mockito.internal.matchers.MatchersPrinter to private applyPrintSettings(matchers List, printSettings PrintSettings) : Iterator from class org.mockito.internal.matchers.text.MatchersPrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public appendValue(value Object) : ValuePrinter from class org.mockito.internal.util.text.ValuePrinter to public appendValue(value Object) : ValuePrinter from class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public describe() : String extracted from private applyPrintSettings(matchers List, printSettings PrintSettings) : Iterator in class org.mockito.internal.matchers.MatchersPrinter",
        "comment": "<p>RefDiff detetcedit as Extartc Method but if it was TP it should have been under Extratc and move since method describe() is added in class <span class='blob-code-inner'><span class='pl-en'>MockitoMatcher.</span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Davood: This is FP not because it is moved to another class, but because the functionality in the extracted method does not have anything to do with the original code. Basically, nothing can be extracted:</span></span></p><p><span class='blob-code-inner'><span class='pl-en'><code>out<span class='pl-k'>.</span>add(matcher)</code> =&gt;&nbsp;<code>out<span class='pl-k'>.</span>add(<span class='pl-k x x-first'>new</span> <span class='pl-smi x'>FormattedText</span><span class='x x-last'>(</span>matcher<span class='pl-k x x-first'>.</span><span class='x x-last'>describe())</span>);</code></span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private content : StringBuilder from class org.mockito.internal.util.text.ValuePrinter to class org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "Its a move class.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Not",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.EqualsWithDelta",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Same",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.IsSorZ",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Equals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.IsAnyBoolean",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.And",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.apachecommons.ReflectionEquals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Or",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.ContainsFoo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.IsZeroOrOne",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockitousage.matchers.CustomMatchersTest.StringThatContainsXxx",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.VarargCapturingMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.AnyVararg",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Any",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.CompareTo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.EndsWith",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Null",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.StartsWith",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Matches",
        "comment": "<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.CapturingMatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Contains",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.NotNull",
        "comment": "<p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.InstanceOf",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.mockito.internal.util.text.ValuePrinter moved to org.mockito.internal.matchers.text.ValuePrinter",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.Find",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1564
}, {
    "id": 1124354,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "3f0d9221d3f96c20db10e868cc33c2e972318ba6",
    "url": "https://github.com/apache/drill/commit/3f0d9221d3f96c20db10e868cc33c2e972318ba6",
    "author": "adeneche",
    "time": "6/24/15 8:54 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public createNewWrapperCurrent(batchRecordCount int) : SelectionVector4 extracted from public createNewWrapperCurrent() : SelectionVector4 in class org.apache.drill.exec.record.selection.SelectionVector4",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 952
}, {
    "id": 1124355,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
    "url": "https://github.com/apache/drill/commit/00aa01fb90f3210d1e3027d7f759fb1085b814bd",
    "author": "Sudheesh Katkam",
    "time": "6/24/15 8:24 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from public setControls(drillClient DrillClient, controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void inlined to private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private assertCompleteState(result Pair<QueryState,Exception>, expectedState QueryState) : void renamed to private assertStateCompleted(result Pair<QueryState,Exception>, expectedState QueryState) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public resumeFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void renamed to public unpauseFragment(outcomeListener RpcOutcomeListener<Ack>, handle FragmentHandle) : void in class org.apache.drill.exec.rpc.control.ControlTunnel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public cancelBeforeAnyResultsArrive() : void renamed to public cancelWhenQueryIdArrives() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingPartitionerThreadFragment() : void renamed to public interruptingPartitionerThreadFragment() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingAfterMSorterSetup() : void renamed to public failsAfterMSorterSetup() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingAfterMSorterSorting() : void renamed to public failsAfterMSorterSorting() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private testInterruptingBlockedFragmentsWaitingForData(control String) : void renamed to private interruptingBlockedFragmentsWaitingForData(control String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private assertExceptionInjected(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void renamed to private assertExceptionMessage(throwable Throwable, exceptionClass Class<? extends Throwable>, desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public settingNoopInjectionsAndQuery() : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void renamed to public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingBlockedMergingRecordBatch() : void renamed to public interruptingBlockedMergingRecordBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testInterruptingBlockedUnorderedReceiverBatch() : void renamed to public interruptingBlockedUnorderedReceiverBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private createExceptionOnBit(endpoint DrillbitEndpoint, desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createExceptionOnBit(siteClass Class, desc String, nSkip int, nFire int, exceptionClass Class, endpoint DrillbitEndpoint) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private createException(desc String, nSkip int, nFire int, exceptionClass String) : String from class org.apache.drill.exec.testing.TestExceptionInjection to public createException(siteClass Class, desc String, nSkip int, nFire int, exceptionClass Class) : String from class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public newBuilder() : Builder extracted from private testForeman(desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addException(siteClass Class, desc String, exceptionClass Class, nSkip int, nFire int) : Builder extracted from public checkedInjection() : void in class org.apache.drill.exec.testing.TestExceptionInjection",
        "comment": "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addException(siteClass Class, desc String, exceptionClass Class, nSkip int, nFire int) : Builder extracted from public skipAndLimit() : void in class org.apache.drill.exec.testing.TestExceptionInjection",
        "comment": "<p>Extract and Move to other&nbsp; class</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it as an added class)</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public addExceptionOnBit(siteClass Class, desc String, exceptionClass Class, endpoint DrillbitEndpoint, nSkip int, nFire int) : Builder extracted from public injectionOnSpecificBit() : void in class org.apache.drill.exec.testing.TestExceptionInjection",
        "comment": "<p>Extract and Move to other class.</p><p>Moved to class <span class='blob-code-inner'><span class='pl-en'>Controls.<span class='pl-smi'>Builder</span> (it is an added class)</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from private setSessionOption(option String, value String) : void in class org.apache.drill.exec.server.TestDrillbitResilience",
        "comment": "<p>Detected&nbsp; as Extract and Move to other class.&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public validateControlsString(jsonString String) : void extracted from private validateControlsString(controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public validateControlsString(jsonString String) : void extracted from public validate(v OptionValue) : void in class org.apache.drill.exec.testing.ExecutionControls.ControlsOptionValidator & moved to class org.apache.drill.exec.testing.ExecutionControls",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }],
    "refDiffExecutionTime": 2963
}, {
    "id": 1124370,
    "repository": "https://github.com/aws/aws-sdk-java.git",
    "sha1": "4baf0a4de8d03022df48d696d210cc8b3117d38a",
    "url": "https://github.com/aws/aws-sdk-java/commit/4baf0a4de8d03022df48d696d210cc8b3117d38a",
    "author": "AWS",
    "time": "6/24/15 8:54 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private killServer() : void inlined to public cleanUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private pause(delay long) : void extracted from private pauseExponentially(retries int) : void in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private callUntilCompletion(batch Map<String,List<WriteRequest>>) : FailedBatch renamed to private doBatchWriteItemWithRetry(batch Map<String,List<WriteRequest>>, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.amazonaws.services.elasticfilesystem.model.transform.DependencyTimeoutExceptionUnmarshaller renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemAlreadyExistsExceptionUnmarshaller renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private server : ServerSocket from class com.amazonaws.util.EC2MetadataUtilsTest to class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputInstanceInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCredList(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private handleConnection(input BufferedReader, output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamCred(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private outputIamInfo(output PrintWriter) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsTest to private ignoreRequest(input BufferedReader) : void from class com.amazonaws.util.EC2MetadataUtilsServer",
        "comment": "<p>This seems to be extract class refactoring!</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1124507,
    "repository": "https://github.com/gwtproject/gwt.git",
    "sha1": "22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387",
    "url": "https://github.com/gwtproject/gwt/commit/22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387",
    "author": "Goktug Gokdogan",
    "time": "6/24/15 6:41 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void extracted from public visit(type JInterfaceType, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void extracted from public visit(type JClassType, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public _disabled_testJsType3DimArray_castedFromNativeWithACall() : void renamed to public __disabled__testJsType3DimArray_castedFromNativeWithACall() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private rescueMembersIfInstantiable(type JDeclaredType) : void renamed to private rescueMembers(type JDeclaredType) : void in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public _disabled_testJsTypeArray_returnFromNativeWithACall() : void renamed to public testJsTypeArray_returnFromNativeWithACall() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public _disabled_testJsTypeArray_asAField() : void renamed to public __disabled__testJsTypeArray_asAField() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private rescueAndInstantiate(type JClassType) : void inlined to public visit(x JNewInstance, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private rescueAndInstantiate(type JClassType) : void inlined to public visit(x JsniMethodRef, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public _disabled_testString3DimArray_castedFromNative() : void renamed to public __disabled__testObjectArray_castedFromNative() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 6656
}, {
    "id": 1124509,
    "repository": "https://github.com/libgdx/libgdx.git",
    "sha1": "2bd1557bc293cb8c2348374771aad832befbe26f",
    "url": "https://github.com/libgdx/libgdx/commit/2bd1557bc293cb8c2348374771aad832befbe26f",
    "author": "NathanSweet",
    "time": "6/25/15 11:30 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public setCheckBoxRight(right boolean) : void inlined to public CheckBox(text String, style CheckBoxStyle) in class com.badlogic.gdx.scenes.scene2d.ui.CheckBox",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2425
}, {
    "id": 1124816,
    "repository": "https://github.com/SonarSource/sonarqube.git",
    "sha1": "0d9fcaa4415ee996e423a97cfe0d965586ca59a5",
    "url": "https://github.com/SonarSource/sonarqube/commit/0d9fcaa4415ee996e423a97cfe0d965586ca59a5",
    "author": "Julien HENRY",
    "time": "6/25/15 11:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private doStop(swallowException boolean) : void extracted from public stop() : void in class org.sonar.batch.bootstrapper.Batch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3281
}, {
    "id": 1124846,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "d3533c1a0716ca114d294b3ea183504c9725698f",
    "url": "https://github.com/neo4j/neo4j/commit/d3533c1a0716ca114d294b3ea183504c9725698f",
    "author": "Jacob Hansson",
    "time": "6/23/15 2:17 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createNewThread(group Group, job Runnable, metadata Map<String,String>) : Thread extracted from public schedule(group Group, job Runnable, metadata Map<String,String>) : JobHandle in class org.neo4j.kernel.impl.util.Neo4jJobScheduler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.neo4j.ndp.transport.socket.client.WebSocketConnection renamed to org.neo4j.ndp.transport.socket.client.SecureWebSocketConnection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private serverResponds(host String, port int) : boolean inlined to private assertEventuallyServerResponds(host String, port int) : void in class org.neo4j.server.Neo4jDataProtocolIT",
        "comment": "<p><span class='blob-code-inner'>The statements in method serverRespondsare(..) are actually move to two methods&nbsp; <span class='pl-en'>SocketConnection</span>.<span class='pl-en'>connect(..) and SocketConnection.send(..).</span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Thus it is not an inline refacatroing. It could be that the statements were first inlined to assertEventuallyServerResponds(..) and then extracted into two above mentioned methods.<br /></span></span></p><p>&nbsp;</p><p><span class='blob-code-inner'><span class='pl-en'>So for me it is a FP but needs Matin and Davoods opinion. </span></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }],
    "refDiffExecutionTime": 7200
}, {
    "id": 1124975,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "be292763b8c4cb09988023d6081b0a2d57b4c778",
    "url": "https://github.com/facebook/buck/commit/be292763b8c4cb09988023d6081b0a2d57b4c778",
    "author": "Simon Stewart",
    "time": "6/25/15 3:55 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private PATH_TO_URL : Function<Path,URL> from class com.facebook.buck.util.ClassLoaderCache to class com.facebook.buck.java.JarBackedJavac",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private PATH_TO_URL : Function<Path,URL> from class com.facebook.buck.util.ClassLoaderCacheTest to class com.facebook.buck.java.JarBackedJavac",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2467
}, {
    "id": 1125062,
    "repository": "https://github.com/fabric8io/fabric8.git",
    "sha1": "e068eb7f484f24dee285d29b8a910d9019592020",
    "url": "https://github.com/fabric8io/fabric8/commit/e068eb7f484f24dee285d29b8a910d9019592020",
    "author": "Jimmi Dyson",
    "time": "6/25/15 4:54 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getHTTPGetAction(prefix String, properties Properties) : HTTPGetAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getExecAction(prefix String, properties Properties) : ExecAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getTCPSocketAction(prefix String, properties Properties) : TCPSocketAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1151
}, {
    "id": 1125095,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
    "url": "https://github.com/apache/drill/commit/c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
    "author": "vkorukanti",
    "time": "6/25/15 11:53 AM",
    "refactorings": [{
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org2Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoaderLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createTestData() : void extracted from public addMiniDfsBasedStorageAndGenerateTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org1Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableNameLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableNameLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org1Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.DatabaseLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.DatabaseLoader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected org2Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public createFileSystem(proxyUserName String, fsConf Configuration, stats OperatorStats) : DrillFileSystem inlined to public createFileSystem(proxyUserName String, fsConf Configuration) : DrillFileSystem in class org.apache.drill.exec.util.ImpersonationUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected addMiniDfsBasedStorage(workspaces Map<String,WorkspaceConfig>) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.store.hive.HiveTestDataGenerator to public executeQuery(hiveDriver Driver, query String) : void from class org.apache.drill.exec.hive.HiveTestUtilities",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public getTempDir(dirName String) : String extracted from public getInstance() : HiveTestDataGenerator in class org.apache.drill.exec.store.hive.HiveTestDataGenerator & moved to class org.apache.drill.BaseTestQuery",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getTempDir(dirName String) : String extracted from private generateTestData() : void in class org.apache.drill.exec.store.hive.HiveTestDataGenerator",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to BaseTestQuery</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public createNonCloseableClientWithCaching(hiveConf HiveConf, hiveConfigOverride Map) : DrillHiveMetaStoreClient extracted from public HiveSchemaFactory(plugin HiveStoragePlugin, name String, hiveConfigOverride Map) in class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private tableLoaders : LoadingCache from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private tableNameLoader : LoadingCache from class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory to class org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2022
}, {
    "id": 1125111,
    "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
    "sha1": "abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
    "url": "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
    "author": "Chris Kittrell",
    "time": "6/24/15 6:52 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.broadleafcommerce.openadmin.dto.override.MetadataOverride from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1125117,
    "repository": "https://github.com/redsolution/xabber-android.git",
    "sha1": "faaf826e901f43d1b46105b18e655eb120f3ffef",
    "url": "https://github.com/redsolution/xabber-android/commit/faaf826e901f43d1b46105b18e655eb120f3ffef",
    "author": "Grigory Fedorov",
    "time": "6/26/15 10:16 AM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface com.xabber.android.ui.ContactAdder from class com.xabber.android.ui.ContactAddFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1125333,
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "sha1": "e813a0be86c87366157a0201e6c61662cadee586",
    "url": "https://github.com/facebook/facebook-android-sdk/commit/e813a0be86c87366157a0201e6c61662cadee586",
    "author": "Sean Wiese",
    "time": "6/25/15 3:56 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getAndroidIdViaReflection(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.iconicus.GameBoard moved to com.example.iconicus.GameBoard",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.iconicus.GameController moved to com.example.iconicus.GameController",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.hellofacebook.HelloFacebookBroadcastReceiver moved to com.example.hellofacebook.HelloFacebookBroadcastReceiver",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.CommonObjects moved to com.example.rps.CommonObjects",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.ContentFragment moved to com.example.rps.ContentFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.MainActivity moved to com.example.rps.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.OpenGraphConsts moved to com.example.rps.OpenGraphConsts",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.RpsFragment moved to com.example.rps.RpsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.RpsGameUtils moved to com.example.rps.RpsGameUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.rps.usersettings.UserSettingsFragment moved to com.example.rps.usersettings.UserSettingsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.ProfileFragment moved to com.example.switchuser.ProfileFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.Slot moved to com.example.switchuser.Slot",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.UserInfo moved to com.example.switchuser.UserInfo",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.UserInfoCache moved to com.example.switchuser.UserInfoCache",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.BaseListElement moved to com.example.scrumptious.BaseListElement",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.FullListView moved to com.example.scrumptious.FullListView",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.MainActivity moved to com.example.scrumptious.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.PickerActivity moved to com.example.scrumptious.PickerActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.ScrumptiousApplication moved to com.example.scrumptious.ScrumptiousApplication",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.SelectionFragment moved to com.example.scrumptious.SelectionFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.SplashFragment moved to com.example.scrumptious.SplashFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.GraphObjectAdapter moved to com.example.scrumptious.picker.GraphObjectAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.GraphObjectCursor moved to com.example.scrumptious.picker.GraphObjectCursor",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.GraphObjectPagingLoader moved to com.example.scrumptious.picker.GraphObjectPagingLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.usersettings.UserSettingsFragment moved to com.example.scrumptious.usersettings.UserSettingsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.SettingsFragment moved to com.example.switchuser.SettingsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.PickerFragment moved to com.example.scrumptious.picker.PickerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.hellofacebook.HelloFacebookSampleActivity moved to com.example.hellofacebook.HelloFacebookSampleActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.samples.switchuser.MainActivity moved to com.example.switchuser.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.PlacePickerFragment moved to com.example.scrumptious.picker.PlacePickerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.scrumptious.picker.FriendPickerFragment moved to com.example.scrumptious.picker.FriendPickerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.facebook.iconicus.MainActivity moved to com.example.iconicus.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getAndroidIdViaService(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2914
}, {
    "id": 1125334,
    "repository": "https://github.com/killbill/killbill.git",
    "sha1": "4b5b74b6467a28fb9b7712f8091e4aa61c2d64b6",
    "url": "https://github.com/killbill/killbill/commit/4b5b74b6467a28fb9b7712f8091e4aa61c2d64b6",
    "author": "Pierre-Alexandre Meyer",
    "time": "6/26/15 8:14 AM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner from class org.killbill.billing.payment.core.janitor.CompletionTaskBase to class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public updatePaymentAndTransactionIfNeeded(payment PaymentModelDao, paymentTransaction PaymentTransactionModelDao, paymentTransactionInfoPlugin PaymentTransactionInfoPlugin, internalTenantContext InternalTenantContext) : boolean extracted from public doIteration(paymentTransaction PaymentTransactionModelDao) : void in class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private findPaymentTransactionInfoPlugin(paymentTransactionModelDao PaymentTransactionModelDao, pluginTransactions Iterable) : PaymentTransactionInfoPlugin extracted from private toPayment(curPaymentModelDao PaymentModelDao, transactionsModelDao Iterable, pluginTransactions Iterable) : Payment in class org.killbill.billing.payment.core.PaymentProcessor",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1250
}, {
    "id": 1125606,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "e58c9c3eef4c6e44b21a97cfbd2862bb2eb4627a",
    "url": "https://github.com/VoltDB/voltdb/commit/e58c9c3eef4c6e44b21a97cfbd2862bb2eb4627a",
    "author": "Bill White",
    "time": "6/28/15 6:25 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public hasSize(size int) : SymbolTableAssert extracted from public isEmpty() : SymbolTableAssert in class org.voltdb.sqlparser.symtab.SymbolTableAssert",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1125661,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "9de5f0d408f861455716b8410fd53f62b360787d",
    "url": "https://github.com/datastax/java-driver/commit/9de5f0d408f861455716b8410fd53f62b360787d",
    "author": "Andrew Tolbert",
    "time": "6/27/15 8:18 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package sendRequest(reportNoMoreHosts boolean) : boolean extracted from package sendRequest() : void in class com.datastax.driver.core.RequestHandler.SpeculativeExecution",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected query(session Session) : ResultSet extracted from protected query() : ResultSet in class com.datastax.driver.core.policies.AbstractRetryPolicyIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel, connection Connection, response Response) : void extracted from private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel) : void in class com.datastax.driver.core.RequestHandler.SpeculativeExecution",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1125721,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "8d7a26edd1fedb9505b4f2b4fe57b2d2958b4dd9",
    "url": "https://github.com/JetBrains/intellij-community/commit/8d7a26edd1fedb9505b4f2b4fe57b2d2958b4dd9",
    "author": "Kirill Likhodedov",
    "time": "6/27/15 6:56 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private writeContentToFile(revision byte[]) : void inlined to private write(revision byte[]) : void in class com.intellij.openapi.vcs.history.FileHistoryPanelImpl.MyGetVersionAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 18389
}, {
    "id": 1126206,
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "sha1": "51b8b0e1ad4be1b137d67774eab28dc0ef52cb0a",
    "url": "https://github.com/QuantumBadger/RedReader/commit/51b8b0e1ad4be1b137d67774eab28dc0ef52cb0a",
    "author": "QuantumBadger",
    "time": "6/28/15 5:50 PM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.MainActivity to protected onSharedPreferenceChangedInner(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.RefreshableActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.CommentListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MoreCommentsListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MainActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.PostListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 995
}, {
    "id": 1126248,
    "repository": "https://github.com/cbeust/testng.git",
    "sha1": "b5cf7a0252c8b0465c4dbd906717f7a12e26e6f8",
    "url": "https://github.com/cbeust/testng/commit/b5cf7a0252c8b0465c4dbd906717f7a12e26e6f8",
    "author": "Julien Herr",
    "time": "6/27/15 6:02 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class test.testng234.ParentTest moved to test.inheritance.testng234.ParentTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class test.testng234.PolymorphicFailureTest moved to test.inheritance.testng234.PolymorphicFailureTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class test.testng234.ChildTest moved to test.inheritance.testng234.ChildTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1126375,
    "repository": "https://github.com/spring-projects/spring-data-jpa.git",
    "sha1": "c13f3469e1d64ec97b11f0509e45f9c3fa8ff88a",
    "url": "https://github.com/spring-projects/spring-data-jpa/commit/c13f3469e1d64ec97b11f0509e45f9c3fa8ff88a",
    "author": "Oliver Gierke",
    "time": "6/29/15 7:28 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected getCountQuery(spec Specification<T>, mode QueryMode) : TypedQuery<Long> extracted from protected getCountQuery(spec Specification<T>) : TypedQuery<Long> in class org.springframework.data.jpa.repository.support.SimpleJpaRepository",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1126459,
    "repository": "https://github.com/ratpack/ratpack.git",
    "sha1": "2581441eda268c45306423dd4c515514d98a14a0",
    "url": "https://github.com/ratpack/ratpack/commit/2581441eda268c45306423dd4c515514d98a14a0",
    "author": "John Engelman",
    "time": "6/28/15 12:21 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class ratpack.jackson.JacksonModule moved to ratpack.jackson.guice.JacksonModule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1137
}, {
    "id": 1126550,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "d4992887291cc0a7eeda87ad547fa9e1e7fda41c",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/d4992887291cc0a7eeda87ad547fa9e1e7fda41c",
    "author": "Adam Gibson",
    "time": "6/27/15 2:38 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public output(x INDArray, test boolean) : INDArray extracted from public output(x INDArray) : INDArray in class org.deeplearning4j.nn.layers.OutputLayer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1408
}, {
    "id": 1126576,
    "repository": "https://github.com/apache/zookeeper.git",
    "sha1": "3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
    "url": "https://github.com/apache/zookeeper/commit/3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
    "author": "Raúl Gutiérrez Segalés",
    "time": "6/28/15 4:09 PM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NIOServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NettyServerCnxn to public cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.ServerCnxn",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1126591,
    "repository": "https://github.com/AntennaPod/AntennaPod.git",
    "sha1": "c64217e2b485f3c6b997a55b1ef910c8b72779d3",
    "url": "https://github.com/AntennaPod/AntennaPod/commit/c64217e2b485f3c6b997a55b1ef910c8b72779d3",
    "author": "Martin Fietz",
    "time": "6/27/15 1:01 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public addQueueItem(context Context, performAutoDownload boolean, itemIds long[]) : Future<?> extracted from public addQueueItem(context Context, itemIds long[]) : Future<?> in class de.danoeh.antennapod.core.storage.DBWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 827
}, {
    "id": 1126709,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "79c66ceab11dae0b9fd1dade7bb4120028738705",
    "url": "https://github.com/gradle/gradle/commit/79c66ceab11dae0b9fd1dade7bb4120028738705",
    "author": "Lorant Pinter",
    "time": "6/29/15 5:34 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getInputs() : Set<LanguageSourceSet> extracted from public getAllSources() : Set<LanguageSourceSet> in class org.gradle.platform.base.binary.BaseBinarySpec",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getAllSources() : Set<LanguageSourceSet> renamed to public getInputs() : Set<LanguageSourceSet> in class org.gradle.nativeplatform.test.internal.DefaultNativeTestSuiteBinarySpec",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1126720,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "0e7345a9c10863dca9217ad902b825db50fed01f",
    "url": "https://github.com/gradle/gradle/commit/0e7345a9c10863dca9217ad902b825db50fed01f",
    "author": "Lari Hotari",
    "time": "6/28/15 8:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getConfiguration() : Configuration extracted from package getFileCollection() : FileCollection in class org.gradle.play.plugins.PlayPluginConfigurations.PlayConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1127199,
    "repository": "https://github.com/koush/AndroidAsync.git",
    "sha1": "1bc7905b07821f840068089343e6b77a8686d1ab",
    "url": "https://github.com/koush/AndroidAsync/commit/1bc7905b07821f840068089343e6b77a8686d1ab",
    "author": "Koushik Dutta",
    "time": "6/28/15 6:25 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private terminate() : void extracted from protected report(e Exception) : void in class com.koushikdutta.async.http.AsyncHttpResponseImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package spewInternal() : void renamed to package sendCachedDataOnNetworkThread() : void in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package spew() : void renamed to package sendCachedData() : void in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 570
}, {
    "id": 1127268,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "102b23b16bf26cbf439009b4b95542490a082710",
    "url": "https://github.com/apache/hive/commit/102b23b16bf26cbf439009b4b95542490a082710",
    "author": "Ferdinand Xu",
    "time": "6/28/15 9:42 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private executeInternal(sql String, call boolean) : boolean extracted from private execute(line String, call boolean, entireLineAsCommand boolean) : boolean in class org.apache.hive.beeline.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getFirstCmd(cmd String, length int) : String from class org.apache.hive.beeline.BeeLine to private getFirstCmd(cmd String, length int) : String from class org.apache.hive.beeline.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public handleMultiLineCmd(line String) : String extracted from private execute(line String, call boolean, entireLineAsCommand boolean) : boolean in class org.apache.hive.beeline.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private cliToBeelineCmd(cmd String) : String from class org.apache.hive.beeline.BeeLine to private cliToBeelineCmd(cmd String) : String from class org.apache.hive.beeline.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.hadoop.hive.ql.parse.VariableSubstitution moved to org.apache.hadoop.hive.conf.VariableSubstitution",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public substitute(conf HiveConf, expr String) : String from class org.apache.hadoop.hive.ql.parse.VariableSubstitution to public substitute(conf HiveConf, expr String) : String from class org.apache.hadoop.hive.conf.VariableSubstitution",
        "comment": "it is a rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getSubstitute(conf Configuration, var String) : String from class org.apache.hadoop.hive.ql.parse.VariableSubstitution to protected getSubstitute(conf Configuration, var String) : String from class org.apache.hadoop.hive.conf.VariableSubstitution",
        "comment": "it is a rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private tokenizeCmd(cmd String) : String[] extracted from private cliToBeelineCmd(cmd String) : String in class org.apache.hive.beeline.BeeLine",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private l4j : Log from class org.apache.hadoop.hive.ql.parse.VariableSubstitution to class org.apache.hadoop.hive.conf.VariableSubstitution",
        "comment": "it is a rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 5292
}, {
    "id": 1127274,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
    "url": "https://github.com/apache/hive/commit/7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
    "author": "Swarnim Kulkarni",
    "time": "6/27/15 8:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private unionTester(ws Schema, rs Schema, record GenericData.Record) : ResultPair extracted from private unionTester(s Schema, record GenericData.Record) : ResultPair in class org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3223
}, {
    "id": 1127383,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "1e464da2480568014a87dd0bac6febe63a76c889",
    "url": "https://github.com/spring-projects/spring-boot/commit/1e464da2480568014a87dd0bac6febe63a76c889",
    "author": "Dave Syer",
    "time": "6/30/15 5:42 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private CLASSPATH_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.ResourceProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private addStaticIndexHtmlViewControllers(registry ViewControllerRegistry) : void inlined to public addViewControllers(registry ViewControllerRegistry) : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private STATIC_INDEX_HTML_RESOURCES : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private resourceLoader : ResourceLoader from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private SERVLET_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public environmentMvcEndpoint(delegate EnvironmentEndpoint) : EnvironmentMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getCorsConfiguration(properties EndpointCorsProperties) : CorsConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to private getCorsConfiguration(properties EndpointCorsProperties) : CorsConfiguration from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public healthMvcEndpoint(delegate HealthEndpoint) : HealthMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public logfileMvcEndpoint() : LogFileMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public logfileMvcEndpoint() : LogFileMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public metricsMvcEndpoint(delegate MetricsEndpoint) : MetricsMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public mvcEndpoints() : MvcEndpoints from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public mvcEndpoints() : MvcEndpoints from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public shutdownMvcEndpoint(delegate ShutdownEndpoint) : ShutdownMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public shutdownMvcEndpoint(delegate ShutdownEndpoint) : ShutdownMvcEndpoint from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to public endpointHandlerMapping() : EndpointHandlerMapping from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getRequestMatcher() : RequestMatcher extracted from protected configure(http HttpSecurity) : void in class org.springframework.boot.actuate.autoconfigure.ManagementSecurityAutoConfiguration.ManagementWebSecurityConfigurerAdapter",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private corsProperties : EndpointCorsProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private healthMvcEndpointProperties : HealthMvcEndpointProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private mappingCustomizers : List from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private mappingCustomizers : List from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcChildContextConfiguration.EndpointHandlerMappingConfiguration to class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private managementServerProperties : ManagementServerProperties from class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration to class org.springframework.boot.actuate.autoconfigure.EndpointWebMvcConfiguration",
        "comment": "EndpointWebMvcConfiguration added in the new revision and seems it is a extracted",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 3535
}, {
    "id": 1127493,
    "repository": "https://github.com/rstudio/rstudio.git",
    "sha1": "229d1b60c03a3f8375451c68a6911660a3993777",
    "url": "https://github.com/rstudio/rstudio/commit/229d1b60c03a3f8375451c68a6911660a3993777",
    "author": "Jonathan McPherson",
    "time": "6/30/15 3:32 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.RSConnect to private checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput<Boolean>) : void from class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void inlined to public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void in class org.rstudio.studio.client.rsconnect.RSConnect",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isUpdate() : boolean extracted from public getResult() : RSConnectPublishResult in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected validate(input T) : boolean renamed to protected validateAsync(input T, onValidated OperationWithInput) : void in class org.rstudio.core.client.widget.Wizard",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3785
}, {
    "id": 1127907,
    "repository": "https://github.com/facebook/presto.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/presto.git",
    "sha1": "364f50274d4b4b83d40930c0d2c4d0e57fb34589",
    "url": "https://github.com/facebook/presto/commit/364f50274d4b4b83d40930c0d2c4d0e57fb34589",
    "author": "Haozhun Jin",
    "time": "6/30/15 12:08 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass com.facebook.presto.PartitionedPagePartitionFunction from class com.facebook.presto.HashPagePartitionFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package getPartitionHashBucket(partitionCount int, position int, page Page) : int renamed to package getPartitionBucket(partitionCount int, position int, page Page) : int in class com.facebook.presto.operator.HashGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setHashPartitionedOutput(partitionKeys List<Symbol>, hash Optional<Symbol>) : FragmentProperties renamed to public setPartitionedOutput(partitionKeys Optional<List<Symbol>>, hash Optional<Symbol>) : FragmentProperties in class com.facebook.presto.sql.planner.PlanFragmenter.FragmentProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3382
}, {
    "id": 1129294,
    "repository": "https://github.com/Activiti/Activiti.git",
    "sha1": "53036cece662f9c796d2a187b0077059c3d9088a",
    "url": "https://github.com/Activiti/Activiti/commit/53036cece662f9c796d2a187b0077059c3d9088a",
    "author": "Tijs Rademakers",
    "time": "6/30/15 9:29 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public isAsynchronous() : boolean from class org.activiti.bpmn.model.Activity to public isAsynchronous() : boolean from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public isAsynchronous() : boolean from class org.activiti.bpmn.model.Gateway to public isAsynchronous() : boolean from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public isNotExclusive() : boolean from class org.activiti.bpmn.model.Activity to public isNotExclusive() : boolean from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public isNotExclusive() : boolean from class org.activiti.bpmn.model.Gateway to public isNotExclusive() : boolean from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.Activity to public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.Gateway to public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected asynchronous : boolean from class org.activiti.bpmn.model.Activity to class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected asynchronous : boolean from class org.activiti.bpmn.model.Gateway to class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected notExclusive : boolean from class org.activiti.bpmn.model.Activity to class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected notExclusive : boolean from class org.activiti.bpmn.model.Gateway to class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.Activity to public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.Gateway to public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.FlowNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2715
}, {
    "id": 1129493,
    "repository": "https://github.com/FasterXML/jackson-databind.git",
    "sha1": "cfe88fe3fbcc6b02ca55cee7b1f4ab13e249edea",
    "url": "https://github.com/FasterXML/jackson-databind/commit/cfe88fe3fbcc6b02ca55cee7b1f4ab13e249edea",
    "author": "lufe66",
    "time": "6/30/15 10:35 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected classForName(name String) : Class<?> extracted from public findClass(className String) : Class<?> in class com.fasterxml.jackson.databind.type.TypeFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected classForName(name String, initialize boolean, loader ClassLoader) : Class<?> extracted from public findClass(className String) : Class<?> in class com.fasterxml.jackson.databind.type.TypeFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1039
}, {
    "id": 1129517,
    "repository": "https://github.com/droolsjbpm/jbpm.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/jbpm.git",
    "sha1": "83cfa21578e63956bca0715eefee2860c3b6d39a",
    "url": "https://github.com/droolsjbpm/jbpm/commit/83cfa21578e63956bca0715eefee2860c3b6d39a",
    "author": "Tibor Zimanyi",
    "time": "6/30/15 7:05 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private prepareWorkItemWithTaskVariables(taskDescriptionParam String) : WorkItemImpl extracted from public testTaskWithVariables() : void in class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private testTaskWithExpectedDescription(task Task, expectedDescription String) : void extracted from public testTaskWithVariables() : void in class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 821
}, {
    "id": 1129518,
    "repository": "https://github.com/droolsjbpm/jbpm.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/jbpm.git",
    "sha1": "a739d16d301f0e89ab0b9dfa56b4585bbad6b793",
    "url": "https://github.com/droolsjbpm/jbpm/commit/a739d16d301f0e89ab0b9dfa56b4585bbad6b793",
    "author": "Jan Hrcek",
    "time": "6/30/15 6:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testActivateFromIncorrectStatus() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testForwardFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testDelegateFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testNominateOnOtherThanCreated() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testForwardFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testRemoveNotInRecipientList() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testNominateWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testNominateToUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testDelegateFromReady() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testCompleteWithComments() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method private createUser(id String) : User extracted from public testDelegateFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest & moved to class org.jbpm.services.task.wih.util.PeopleAssignmentHelperTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testForwardFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testDelegateFromReserved() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testNominateOnOtherThanCreated() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testForwardFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testRemoveNotInRecipientList() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testNominateWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testDelegateFromReady() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createUser(id String) : User extracted from public testDelegateFromReservedWithIncorrectUser() : void in class org.jbpm.services.task.LifeCycleBaseTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 1802
}, {
    "id": 1129630,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "35668435090eb47cf8c5e704243510b6cee35a7b",
    "url": "https://github.com/apache/cassandra/commit/35668435090eb47cf8c5e704243510b6cee35a7b",
    "author": "Aleksey Yeschenko",
    "time": "6/30/15 9:04 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.functions.Functions renamed to org.apache.cassandra.cql3.functions.FunctionResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData extracted from public readSchemaFromSystemTables() : Collection in class org.apache.cassandra.schema.LegacySchemaTables",
        "comment": "createKeyspaceFromSchemaPartitions exists in both revisions",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 8203
}, {
    "id": 1129713,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "527ac38334000e105daacb2aca25cb345d77c01e",
    "url": "https://github.com/gradle/gradle/commit/527ac38334000e105daacb2aca25cb345d77c01e",
    "author": "Gary Hale",
    "time": "6/30/15 9:10 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private stopped : AtomicBoolean from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle to class org.gradle.play.internal.run.PlayApplicationRunnerToken",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public isRunning() : boolean extracted from public isRunning() : boolean in class org.gradle.play.internal.run.PlayApplicationDeploymentHandle & moved to class org.gradle.play.internal.run.PlayApplicationRunnerToken",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }],
    "refDiffExecutionTime": 5368
}, {
    "id": 1130125,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "9dc3cbd59a20f03406f295a4a8f3b8676dbc939e",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/9dc3cbd59a20f03406f295a4a8f3b8676dbc939e",
    "author": "Dan Roundhill",
    "time": "6/30/15 2:48 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.wordpress.android.ui.prefs.NotificationsPreference moved to org.wordpress.android.ui.prefs.notifications.NotificationsPreference",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.wordpress.android.ui.prefs.NotificationsSettingsActivity moved to org.wordpress.android.ui.prefs.notifications.NotificationsSettingsActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.wordpress.android.ui.prefs.NotificationsSettingsFragment moved to org.wordpress.android.ui.prefs.notifications.NotificationsSettingsFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 660
}, {
    "id": 1130153,
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "sha1": "767171c90110c4c5781e8f6d19ece1fba0d492e9",
    "url": "https://github.com/Graylog2/graylog2-server/commit/767171c90110c4c5781e8f6d19ece1fba0d492e9",
    "author": "Jochen Schalanda",
    "time": "6/30/15 8:46 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public testTimestampStatsOfIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.searches.Searches to protected timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.ranges.EsIndexRangeService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 933
}, {
    "id": 1130163,
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "sha1": "f05e86c4d31987ff2f30330745c3eb605de4c4dc",
    "url": "https://github.com/Graylog2/graylog2-server/commit/f05e86c4d31987ff2f30330745c3eb605de4c4dc",
    "author": "Jochen Schalanda",
    "time": "6/30/15 8:11 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute package COMPARATOR : Comparator<IndexRange> from class org.graylog2.indexer.ranges.MongoIndexRangeService to class org.graylog2.indexer.ranges.IndexRange",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1095
}, {
    "id": 1130197,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "d69e5cb21c04d9eede314aaa9ad059fc603fb025",
    "url": "https://github.com/apache/hive/commit/d69e5cb21c04d9eede314aaa9ad059fc603fb025",
    "author": "Rui Li",
    "time": "6/30/15 5:31 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private tag : byte from class org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator to class org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public setTag(tag byte) : void from class org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator to public setTag(tag byte) : void from class org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5726
}, {
    "id": 1130631,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "d1a6ae2a16ba1d53b1de02eea8745d67c6a1a005",
    "url": "https://github.com/neo4j/neo4j/commit/d1a6ae2a16ba1d53b1de02eea8745d67c6a1a005",
    "author": "pgpv",
    "time": "7/2/15 5:18 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fileSelection() : File extracted from public actionPerformed(e ActionEvent) : void in class org.neo4j.desktop.ui.BrowseForDatabaseActionListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2339
}, {
    "id": 1130638,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "8d9bedbf96b14beb027ebc1338bc6d5750e1feb5",
    "url": "https://github.com/neo4j/neo4j/commit/8d9bedbf96b14beb027ebc1338bc6d5750e1feb5",
    "author": "Tobias Lindaaker",
    "time": "7/2/15 2:23 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.constraints.PropertyConstraint from class org.neo4j.kernel.api.constraints.UniquenessConstraint",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldBeAbleToResolveConflictsAndRecreateConstraintAfterFailingToCreateConstraintDueToConflict() : void renamed to public shouldBeAbleToResolveConflictsAndRecreateConstraintAfterFailingToCreateUniquePropertyConstraintDueToConflict() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldNotLeaveAnyStateBehindAfterFailingToCreateConstraint() : void renamed to public shouldNotLeaveAnyStateBehindAfterFailingToCreateUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldNotPersistUniquenessConstraintsCreatedInAbortedTransaction() : void renamed to public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldBeAbleToStoreAndRetrieveUniquenessConstraintRule() : void renamed to public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldNotStoreUniquenessConstraintThatIsRemovedInTheSameTransaction() : void renamed to public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldNotRemoveConstraintThatGetsReAdded() : void renamed to public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldNotCreateUniquenessConstraintThatAlreadyExists() : void renamed to public shouldNotCreateUniquePropertyConstraintThatAlreadyExists() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldCreateAnIndexToGoAlongWithAUniquenessConstraint() : void renamed to public shouldCreateAnIndexToGoAlongWithAUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public canListConstraints() : void renamed to public canListUniquePropertyConstraints() : void in class org.neo4j.shell.TestApps",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public canListConstraintsByLabel() : void renamed to public canListUniquePropertyConstraintsByLabel() : void in class org.neo4j.shell.TestApps",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public canListConstraintsByLabelAndProperty() : void renamed to public canListUniquePropertyConstraintsByLabelAndProperty() : void in class org.neo4j.shell.TestApps",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public uniquenessConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.OperationsFacade",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.LockingStatementOperations",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.neo4j.kernel.impl.store.UniquenessConstraintRule renamed to org.neo4j.kernel.impl.store.UniquePropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.neo4j.kernel.impl.coreapi.schema.PropertyUniqueConstraintDefinition renamed to org.neo4j.kernel.impl.coreapi.schema.PropertyConstraintDefinition",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public uniquenessConstraint(labelId int, propertyKeyId int) : UniquenessConstraintRule renamed to private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule in class org.neo4j.kernel.impl.store.SchemaStorage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public label() : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public label() : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public equals(obj Object) : boolean from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public equals(obj Object) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public propertyKeyId() : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public propertyKeyId() : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public hashCode() : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public hashCode() : int from class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public userDescription(tokenNameLookup TokenNameLookup) : String from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public userDescription(tokenNameLookup TokenNameLookup) : String from class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private propertyKeyId : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private labelId : int from class org.neo4j.kernel.api.constraints.UniquenessConstraint to class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedMandatoryPropertyConstraint(element MandatoryPropertyConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor.Adapter",
        "comment": "renamed in the Interface",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.api.txstate.TxStateVisitor.Adapter",
        "comment": "renamed in the Interface",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public equals(labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.UniquenessConstraint to public equals(type ConstraintType, labelId int, propertyKeyId int) : boolean from class org.neo4j.kernel.api.constraints.PropertyConstraint",
        "comment": "its an Extract Superclass",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private propertyConstraint(type Class, labelId int, propertyKeyId int) : Rule extracted from public uniquenessConstraint(labelId int, propertyKeyId int) : UniquenessConstraintRule in class org.neo4j.kernel.impl.store.SchemaStorage",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.impl.store.PropertyConstraintRule from class org.neo4j.kernel.impl.store.UniquePropertyConstraintRule",
        "comment": "<p>no method pulled up</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 10145
}, {
    "id": 1130859,
    "repository": "https://github.com/katzer/cordova-plugin-local-notifications.git",
    "sha1": "51f498a96b2fa1822e392027982c20e950535fd1",
    "url": "https://github.com/katzer/cordova-plugin-local-notifications/commit/51f498a96b2fa1822e392027982c20e950535fd1",
    "author": "PKnittel",
    "time": "7/2/15 11:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public handleEndTag(xml XmlPullParser) : void extracted from public parse(xml XmlResourceParser) : void in class org.apache.cordova.ConfigXmlParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public handleStartTag(xml XmlPullParser) : void extracted from public parse(xml XmlResourceParser) : void in class org.apache.cordova.ConfigXmlParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public postMessage(id String, data Object) : void inlined to public onCreateOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public postMessage(id String, data Object) : void inlined to public onOptionsItemSelected(item MenuItem) : boolean in class org.apache.cordova.CordovaActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public postMessage(id String, data Object) : void inlined to public onPrepareOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaWebView to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parse(xml XmlResourceParser) : void renamed to public handleStartTag(xml XmlPullParser) : void in class org.apache.cordova.ConfigXmlParser",
        "comment": "It is an extract method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package onNativeToJsMessageAvailable() : void from class org.apache.cordova.NativeToJsMessageQueue.PollingBridgeMode to public onNativeToJsMessageAvailable(queue NativeToJsMessageQueue) : void from class org.apache.cordova.NativeToJsMessageQueue.NoOpBridgeMode",
        "comment": "PollingBridgeMode is deleted",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public contains(name String) : boolean extracted from protected createViews() : void in class org.apache.cordova.CordovaActivity",
        "comment": "<p>Extract and Move to other&nbsp; class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaWebViewClient to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
        "comment": "The attribute moved to inner class from outer class",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaChromeClient to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
        "comment": "The attribute moved to inner class from outer class",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaUriHelper to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode",
        "comment": "The attribute moved to inner class from outer class",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public init(webView CordovaWebView, webViewClient CordovaWebViewClient, webChromeClient CordovaChromeClient) : void inlined to protected init() : void in class org.apache.cordova.CordovaActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 2163
}, {
    "id": 1131658,
    "repository": "https://github.com/realm/realm-java.git",
    "sha1": "9b5b10a0c254017a48651771029f4dfc0a61bcfa",
    "url": "https://github.com/realm/realm-java/commit/9b5b10a0c254017a48651771029f4dfc0a61bcfa",
    "author": "Chen Mulong",
    "time": "7/3/15 5:44 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute package CASTING_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package NULLABLE_JAVA_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package JAVA_TO_COLUMN_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package JAVA_TO_REALM_TYPES : Map<String,String> from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1247
}, {
    "id": 1131681,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "3f2a0e7629d032712ab38ab1431cd0a9d91d4db6",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/3f2a0e7629d032712ab38ab1431cd0a9d91d4db6",
    "author": "d34d",
    "time": "7/3/15 3:18 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private IDMAP_HASH_VERSION : byte from class com.android.server.pm.PackageManagerService to class android.content.pm.ThemeUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 11201
}, {
    "id": 1131689,
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "sha1": "0a1ff849ec7709be8553383fe9c2c7301980dde0",
    "url": "https://github.com/orientechnologies/orientdb/commit/0a1ff849ec7709be8553383fe9c2c7301980dde0",
    "author": "Luigi Dell'Aquila",
    "time": "7/3/15 5:48 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.sql.parser.OStatement to public getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.sql.parser.SimpleNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2618
}, {
    "id": 1131927,
    "repository": "https://github.com/square/wire.git",
    "sha1": "85a690e3cdbbb8447342eefdf690e22ad1b33e02",
    "url": "https://github.com/square/wire/commit/85a690e3cdbbb8447342eefdf690e22ad1b33e02",
    "author": "jwilson",
    "time": "7/3/15 1:18 AM",
    "refactorings": [{
        "type": "Rename Class",
        "description": "Rename Class com.squareup.wire.model.LinkerTest renamed to com.squareup.wire.model.OptionsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public optionMatches(options List, namePattern String, valuePattern String) : boolean from class com.squareup.wire.internal.Util to public optionMatches(namePattern String, valuePattern String) : boolean from class com.squareup.wire.model.Options",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package resolveFieldPath(name String, fullyQualifiedNames Set) : String[] from class com.squareup.wire.model.Linker to package resolveFieldPath(name String, fullyQualifiedNames Set) : String[] from class com.squareup.wire.model.Options",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public packageName() : String from class com.squareup.wire.model.WireOption to public packageName() : String from class com.squareup.wire.model.Options",
        "comment": "<p>added</p><p>The class WireOption is deleted. Consistently, wherever we had&nbsp;List&lt;WireOption&gt; we now have Options</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1132279,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "fe6653db5fb9f1a25d5ee30e4d5d54ccdaba65fa",
    "url": "https://github.com/JetBrains/MPS/commit/fe6653db5fb9f1a25d5ee30e4d5d54ccdaba65fa",
    "author": "Simon Alperovich",
    "time": "7/2/15 5:52 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private createManyCells() : EditorCell_Collection inlined to public createCell() : EditorCell in class jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private createSingleCell() : EditorCell inlined to public createCell() : EditorCell in class jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 13014
}, {
    "id": 1132496,
    "repository": "https://github.com/jboss-developer/jboss-eap-quickstarts.git",
    "sha1": "983e0e0e22ab5bd2c6ea44235518057ea45dcca9",
    "url": "https://github.com/jboss-developer/jboss-eap-quickstarts/commit/983e0e0e22ab5bd2c6ea44235518057ea45dcca9",
    "author": "Bruno Oliveira",
    "time": "7/2/15 10:09 PM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.jboss.as.quickstarts.poh5helloworld to org.jboss.as.quickstarts.html5rest",
        "comment": "<p>The package renaming is TP</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.quickstarts.poh5helloworld.HelloWorld moved to org.jboss.as.quickstarts.html5rest.HelloWorld",
        "comment": "<p>Since RefDiff does not detect rename package we consider it as CTP</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.quickstarts.poh5helloworld.HelloService moved to org.jboss.as.quickstarts.html5rest.HelloService",
        "comment": "<p>Since RefDiff does not detect rename package we consider it as CTP</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1132646,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "4587c32ab8a1c8e2169e4f93491a8c927216a6ab",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/4587c32ab8a1c8e2169e4f93491a8c927216a6ab",
    "author": "Charles Tsai",
    "time": "7/6/15 3:49 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private startAsync() : void extracted from public start() : void in class com.android.systemui.usb.StorageNotification",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5921
}, {
    "id": 1132674,
    "repository": "https://github.com/orientechnologies/orientdb.git",
    "sha1": "f50f234b24e6ada29c82ce57830118508bf55d51",
    "url": "https://github.com/orientechnologies/orientdb/commit/f50f234b24e6ada29c82ce57830118508bf55d51",
    "author": "laa",
    "time": "7/6/15 10:20 AM",
    "refactorings": [{
        "type": "Rename Method",
        "description": "Rename Method public getAllocatedPages() : long renamed to public getExclusiveWriteCachePagesSize() : long in class com.orientechnologies.orient.core.storage.impl.memory.ODirectMemoryOnlyDiskCache",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Rename Package com.orientechnologies.orient.core.index.hashindex.local.cache to com.orientechnologies.orient.core.storage.cache.local",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.orientechnologies.orient.core.storage.cache.local.OWOWCacheMXBean from class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.orientechnologies.orient.core.storage.cache.local.O2QCacheMXBean from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.HashLRUListTest moved to com.orientechnologies.orient.core.storage.cache.local.HashLRUListTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.LRUEntry moved to com.orientechnologies.orient.core.storage.cache.local.LRUEntry",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.LRUList moved to com.orientechnologies.orient.core.storage.cache.local.LRUList",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OBlockedPageException moved to com.orientechnologies.orient.core.storage.cache.OBlockedPageException",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OPageDataVerificationError moved to com.orientechnologies.orient.core.storage.cache.OPageDataVerificationError",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OReadCache moved to com.orientechnologies.orient.core.storage.cache.OReadCache",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.PageGroup moved to com.orientechnologies.orient.core.storage.cache.local.PageGroup",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.SynchronizedLRUList moved to com.orientechnologies.orient.core.storage.cache.local.SynchronizedLRUList",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OCachePointer moved to com.orientechnologies.orient.core.storage.cache.OCachePointer",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.ConcurrentLRUList moved to com.orientechnologies.orient.core.storage.cache.local.ConcurrentLRUList",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.ReadWriteDiskCacheTest moved to com.orientechnologies.orient.core.storage.cache.local.ReadWriteDiskCacheTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.HashLRUList moved to com.orientechnologies.orient.core.storage.cache.local.HashLRUList",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OWOWCache moved to com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.PageKey moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.PageKey",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.PinnedPage moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.PinnedPage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache.UpdateCacheResult moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache.UpdateCacheResult",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getAllocatedPages() : long renamed to public getWriteCacheSize() : long in class com.orientechnologies.orient.core.storage.cache.local.OWOWCache",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public addFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public addFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public clear() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public clear() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public closeFile(fileId long, flush boolean, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public closeFile(fileId long, flush boolean, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public closeStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public closeStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public deleteFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public deleteFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public deleteStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public deleteStorage(writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private get(fileId long, pageIndex long, useOutQueue boolean) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private get(fileId long, pageIndex long, useOutQueue boolean) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package getA1in() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getA1in() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package getA1out() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getA1out() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package getAm() : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getAm() : LRUList from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package getMaxSize() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to package getMaxSize() : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getUsedMemory() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public getUsedMemory() : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private normalizeMemory(maxSize long, pageSize int) : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private normalizeMemory(maxSize long, pageSize int) : int from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public openFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public openFile(fileName String, writeCache OWriteCache) : long from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private removeColdestPagesIfNeeded() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdestPagesIfNeeded() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public truncateFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public truncateFile(fileId long, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public acquireExclusiveLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public acquireExclusiveLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public acquireSharedLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public acquireSharedLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public decrementUsages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public decrementUsages() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCachePointer() : OCachePointer from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getCachePointer() : OCachePointer from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getFileId() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getFileId() : long from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPageIndex() : long from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getPageIndex() : long from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getUsagesCount() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public getUsagesCount() : int from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public incrementUsages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public incrementUsages() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public releaseExclusiveLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public releaseExclusiveLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public releaseSharedLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public releaseSharedLock() : void from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public allocateNewPage(fileId long, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public allocateNewPage(fileId long, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public load(fileId long, pageIndex long, checkPinnedPages boolean, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public load(fileId long, pageIndex long, checkPinnedPages boolean, writeCache OWriteCache) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public hashCode() : int from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private updateCache(fileId long, pageIndex long, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(o Object) : boolean from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public equals(o Object) : boolean from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private doLoad(fileId long, pageIndex long, checkPinnedPages boolean, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private doLoad(fileId long, pageIndex long, checkPinnedPages boolean, addNewPages boolean, writeCache OWriteCache) : UpdateCacheResult from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private remove(fileId long, pageIndex long) : OCacheEntry from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private remove(fileId long, pageIndex long) : OCacheEntry from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private clearFile(fileId long) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearFile(fileId long) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private removeColdPagesWithoutCacheLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdPagesWithoutCacheLock() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public pinPage(cacheEntry OCacheEntry) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public pinPage(cacheEntry OCacheEntry) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private removeColdPagesWithCacheLock() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private removeColdPagesWithCacheLock() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry to public toString() : String from class com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private clearPinnedPages() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearPinnedPages() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private clearCacheContent() : void from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to private clearCacheContent() : void from class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public clearCachePointer() : void extracted from private clearCacheContent() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
        "comment": "<p>Extract and Move to the inner class</p><p><span class='pl-en'>Extract and Move to OCacheEntry</span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public clearCachePointer() : void extracted from private clearPinnedPages() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to <span class='pl-en'>OCacheEntry</span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public clearCachePointer() : void extracted from private clearFile(fileId long) : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to class <span class='pl-smi'>OCacheEntry</span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public clearCachePointer() : void extracted from private removeColdPagesWithCacheLock() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-smi'>OCacheEntry</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public clearCachePointer() : void extracted from private removeColdPagesWithoutCacheLock() : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to class OCacheEntry</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public clearDirty() : void extracted from public release(cacheEntry OCacheEntry, writeCache OWriteCache) : void in class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to class OCacheEntry</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private MAX_CACHE_OVERFLOW : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public MIN_CACHE_SIZE : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cacheLock : OReadersWriterSpinLock from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private coldPagesRemovalInProgress : AtomicBoolean from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private pageSize : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private maxSize : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private fileLockManager : ONewLockManager from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private pageLockManager : ONewLockManager from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private pinnedPages : ConcurrentMap from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private a1out : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private am : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private filePages : ConcurrentMap from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private a1in : LRUList from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private K_OUT : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private K_IN : int from class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache to class com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "its a move package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.OCacheEntry moved to com.orientechnologies.orient.core.storage.cache.OCacheEntry",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.orientechnologies.orient.core.index.hashindex.local.cache.O2QCache moved to com.orientechnologies.orient.core.storage.cache.local.O2QCache",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 5282
}, {
    "id": 1132736,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "05bd8ecda456e0901ef7375b9ff7b120ae668eca",
    "url": "https://github.com/VoltDB/voltdb/commit/05bd8ecda456e0901ef7375b9ff7b120ae668eca",
    "author": "peter shaw",
    "time": "7/6/15 4:02 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class exportbenchmark.SocketExporter moved to exportbenchmark2.exporter.exportbenchmark.SocketExporter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.Connect2Server moved to exportbenchmark2.client.exportbenchmark.Connect2Server",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.TruncateTables moved to exportbenchmark2.db.exportbenchmark.procedures.TruncateTables",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.InsertExport5 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport5",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.InsertExport10 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport10",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.InsertExport moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.SampleRecord moved to exportbenchmark2.db.exportbenchmark.procedures.SampleRecord",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.InsertExport0 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport0",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.procedures.InsertExport1 moved to exportbenchmark2.db.exportbenchmark.procedures.InsertExport1",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.NoOpExporter moved to exportbenchmark2.exporter.exportbenchmark.NoOpExporter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.ExportBenchmark.ExportCallback moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark.ExportCallback",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class exportbenchmark.ExportBenchmark.ExportBenchConfig moved to exportbenchmark2.client.exportbenchmark.ExportBenchmark.ExportBenchConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1132974,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "c00275e7f85c8a9af5785f66cc0f75dc027b6cb6",
    "url": "https://github.com/hazelcast/hazelcast/commit/c00275e7f85c8a9af5785f66cc0f75dc027b6cb6",
    "author": "mustafaiman",
    "time": "7/6/15 5:59 AM",
    "refactorings": [{
        "type": "Push Down Method",
        "description": "Push Down Method protected getConnection() : HazelcastConnection from class com.hazelcast.jca.AbstractDeploymentTest to protected getConnection() : HazelcastConnection from class com.hazelcast.jca.XATransactionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public Init() : void renamed to public init() : void in class com.hazelcast.jca.XATransactionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.AbstractDeploymentTest to class com.hazelcast.jca.XATransactionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.AbstractDeploymentTest to class com.hazelcast.jca.ConnectionFactoryImplTest",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2426
}, {
    "id": 1132984,
    "repository": "https://github.com/wildfly/wildfly.git",
    "sha1": "c0f8a7f2b4341601df63c5470f41f157dbd83781",
    "url": "https://github.com/wildfly/wildfly/commit/c0f8a7f2b4341601df63c5470f41f157dbd83781",
    "author": "Josh Kinlaw",
    "time": "7/6/15 3:03 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private standaloneCollect(cli CLI, protocol String, host String, port int) : void extracted from public main(args String[]) : void in class org.jboss.as.jdr.CommandLineMain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1133054,
    "repository": "https://github.com/WhisperSystems/Signal-Android.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/Signal-Android.git",
    "sha1": "fa62b9bde224341e0c2d43c0694fc10c4df7336f",
    "url": "https://github.com/WhisperSystems/Signal-Android/commit/fa62b9bde224341e0c2d43c0694fc10c4df7336f",
    "author": "Jake McGinty",
    "time": "7/6/15 8:50 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private init() : void inlined to public EmojiDrawer(context Context, attrs AttributeSet, defStyle int) in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private initializeResources() : void inlined to private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected onKeyboardShown(keyboardHeight int) : void renamed to protected onKeyboardOpen(keyboardHeight int) : void in class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onClick(v View) : void in class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener",
        "comment": "<p>Extract and Move to the outer class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onBackPressed() : void in class org.thoughtcrime.securesms.ConversationActivity",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private hideEmojiPopup(expectingKeyboard boolean) : void extracted from public onFocusChange(v View, hasFocus boolean) : void in class org.thoughtcrime.securesms.ConversationActivity.ComposeKeyPressedListener",
        "comment": "<p>Extract and Move to the outer class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }],
    "refDiffExecutionTime": 1255
}, {
    "id": 1133238,
    "repository": "https://github.com/google/truth.git",
    "sha1": "1768840bf1e69892fd2a23776817f620edfed536",
    "url": "https://github.com/google/truth/commit/1768840bf1e69892fd2a23776817f620edfed536",
    "author": "kak",
    "time": "7/6/15 1:54 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.google.common.truth.ListTest.Bar moved to com.google.common.truth.IterableTest.Bar",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.google.common.truth.ListTest.Foo moved to com.google.common.truth.IterableTest.Foo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listContainsExactlyArray() : void renamed to public iterableContainsExactlyArray() : void in class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public isOrderedFailure() : void from class com.google.common.truth.ListTest to public isOrderedFailure() : void from class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isStrictlyOrderedFailure() : void from class com.google.common.truth.ListTest to public isStrictlyOrderedFailure() : void from class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.ListTest to public isOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isStrictlyOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.ListTest to public isStrictlyOrderedWithNonComparableElementsFailure() : void from class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private FOO_COMPARATOR : Comparator from class com.google.common.truth.ListTest to class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private COMPARE_AS_DECIMAL : Comparator from class com.google.common.truth.ListTest to class com.google.common.truth.IterableTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 301
}, {
    "id": 1133240,
    "repository": "https://github.com/google/truth.git",
    "sha1": "200f1577d238a6d3fbcf99cb2a2585b2071214a6",
    "url": "https://github.com/google/truth/commit/200f1577d238a6d3fbcf99cb2a2585b2071214a6",
    "author": "kak",
    "time": "7/6/15 1:54 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public isOrdered(comparator Comparator<? super T>) : void extracted from public isPartiallyOrdered(comparator Comparator<? super T>) : void in class com.google.common.truth.IterableSubject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isOrdered() : void extracted from public isPartiallyOrdered() : void in class com.google.common.truth.IterableSubject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listIsPartiallyOrderedWithComparatorFailure() : void renamed to public listIsOrderedWithComparatorFailure() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isPartiallyOrderedFailure() : void renamed to public isOrderedFailure() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isPartiallyOrderedWithNonComparableElementsFailure() : void renamed to public isOrderedWithNonComparableElementsFailure() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listIsPartiallyOrdered() : void renamed to public listIsOrdered() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public listIsPartiallyOrderedWithComparator() : void renamed to public listIsOrderedWithComparator() : void in class com.google.common.truth.ListTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 405
}, {
    "id": 1133259,
    "repository": "https://github.com/slapperwan/gh4a.git",
    "sha1": "b8fffb706258db4c4d2f608d8e8dad9312e2230d",
    "url": "https://github.com/slapperwan/gh4a/commit/b8fffb706258db4c4d2f608d8e8dad9312e2230d",
    "author": "Danny Baumann",
    "time": "7/6/15 4:56 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public highlightImage(imageUrl String) : String from class com.gh4a.utils.StringUtils to private highlightImage(imageUrl String) : String from class com.gh4a.activities.FileViewerActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isExtensionIn(filename String, extensions List<String>) : boolean extracted from public isImage(filename String) : boolean in class com.gh4a.utils.FileUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.utils.StringUtils to protected writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.activities.WebViewerActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.utils.StringUtils to protected writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.activities.WebViewerActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private SKIP_PRETTIFY_EXT : List<String> from class com.gh4a.Constants to class com.gh4a.activities.WebViewerActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected loadCode(data String, fileName String) : void extracted from public onResultReady(result LoaderResult) : void in class com.gh4a.activities.GistViewerActivity$1",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 646
}, {
    "id": 1133355,
    "repository": "https://github.com/abarisain/dmix.git",
    "sha1": "885771d57c97bd2dd48951e8aeaaa87ceb87532b",
    "url": "https://github.com/abarisain/dmix/commit/885771d57c97bd2dd48951e8aeaaa87ceb87532b",
    "author": "Avuton Olrich",
    "time": "7/6/15 5:49 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method package processIntent(action String, mpd MPD) : void inlined to protected onHandleIntent(intent Intent) : void in class com.namelessdev.mpdroid.widgets.WidgetHelperService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 374
}, {
    "id": 1133515,
    "repository": "https://github.com/spring-projects/spring-data-mongodb.git",
    "sha1": "3224fa8ce7e0079d6ad507e17534cdf01f758876",
    "url": "https://github.com/spring-projects/spring-data-mongodb/commit/3224fa8ce7e0079d6ad507e17534cdf01f758876",
    "author": "Christoph Strobl",
    "time": "7/7/15 4:57 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private processTypeHintForNestedDocuments(source Object, info TypeInformation<?>) : TypeInformation<?> inlined to private getTypeHintForEntity(source Object, entity MongoPersistentEntity<?>) : TypeInformation<?> in class org.springframework.data.mongodb.core.convert.UpdateMapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 890
}, {
    "id": 1133583,
    "repository": "https://github.com/google/guava.git",
    "sha1": "5bab9e837cf273250aa26702204f139fdcfd9e7a",
    "url": "https://github.com/google/guava/commit/5bab9e837cf273250aa26702204f139fdcfd9e7a",
    "author": "Chris Povirk",
    "time": "7/6/15 1:19 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private checkForConcurrentModification() : void inlined to public hasNext() : boolean in class com.google.common.collect.HashBiMap.Itr",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private checkForConcurrentModification() : void inlined to public remove() : void in class com.google.common.collect.HashBiMap.Itr",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2437
}, {
    "id": 1133661,
    "repository": "https://github.com/real-logic/Aeron.git",
    "sha1": "4b762c2c70f06b0c5d2cd85866424c46478c827b",
    "url": "https://github.com/real-logic/Aeron/commit/4b762c2c70f06b0c5d2cd85866424c46478c827b",
    "author": "Martin Thompson",
    "time": "7/6/15 12:18 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd to class uk.co.real_logic.aeron.driver.NetworkPublication",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public onStatusMessage(termId int, termOffset int, receiverWindowLength int, srcAddress InetSocketAddress) : void extracted from private onStatusMessage(statusMsg StatusMessageFlyweight, srcAddress InetSocketAddress) : void in class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move class NetworkPublication</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.media.SendChannelEndpoint.PublicationAssembly to class uk.co.real_logic.aeron.driver.NetworkPublication",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1188
}, {
    "id": 1133761,
    "repository": "https://github.com/spring-projects/spring-data-jpa.git",
    "sha1": "36d1b0717bc5836bba39985caadc2df5f2533ac4",
    "url": "https://github.com/spring-projects/spring-data-jpa/commit/36d1b0717bc5836bba39985caadc2df5f2533ac4",
    "author": "Dev Naruka",
    "time": "7/7/15 9:13 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor.PropertyChangeEnsuringBeanWrapper moved to org.springframework.data.jpa.repository.augment.PropertyChangeEnsuringBeanWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1133865,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "b2bbd9941be6b132a83d27c0ae02c935e1dec5dd",
    "url": "https://github.com/apache/drill/commit/b2bbd9941be6b132a83d27c0ae02c935e1dec5dd",
    "author": "Hanifi Gunes",
    "time": "7/6/15 8:28 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private allocateBytes(size long) : void extracted from public allocateNew(valueCount int) : void in class org.apache.drill.exec.vector.BitVector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private allocateBytes(size long) : void extracted from public allocateNewSafe() : boolean in class org.apache.drill.exec.vector.BitVector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1133936,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "3325f5ccd23f8016fa28a24f878b54f1918546ed",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/3325f5ccd23f8016fa28a24f878b54f1918546ed",
    "author": "Carsten Schnober",
    "time": "7/6/15 7:41 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public loadGoogleModel(modelFile File, binary boolean, lineBreaks boolean) : Word2Vec extracted from public loadGoogleModel(modelFile File, binary boolean) : Word2Vec in class org.deeplearning4j.models.embeddings.loader.WordVectorSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 994
}, {
    "id": 1133977,
    "repository": "https://github.com/cucumber/cucumber-jvm.git",
    "sha1": "0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
    "url": "https://github.com/cucumber/cucumber-jvm/commit/0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
    "author": "Aslak Hellesøy",
    "time": "7/6/15 7:36 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class cucumber.runtime.java.ObjectFactory moved to cucumber.api.java.ObjectFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public loadObjectFactory(classFinder ClassFinder) : ObjectFactory from class cucumber.runtime.java.JavaBackend to public loadObjectFactory(classFinder ClassFinder, objectFactoryClassName String) : ObjectFactory from class cucumber.runtime.java.ObjectFactoryLoader",
        "comment": "<p>Though the body does not totally match, their call graphs match.</p><p>Indeed it is an extract class refactorings since two methods in JavaBackend are moved to a newly added class ObjectFactoryLoader.</p><p>Since RefDiff does not detect Extract Class, we consider it as CTP.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Method",
        "description": "Move Method private getMultipleObjectFactoryLogMessage() : String from class cucumber.runtime.java.JavaBackend to private getMultipleObjectFactoryLogMessage() : String from class cucumber.runtime.java.ObjectFactoryLoader",
        "comment": "<p>Methods are both private =&gt; no call graph outside the class, but their bodies match</p><p>Indeed it is an extract class refactorings since two methods in JavaBackend are moved to a newly added class ObjectFactoryLoader.</p><p>Since RefDiff does not detect Extract Class, we consider it as CTP.</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1134096,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "44a02e5efc39c6953ca6dd631669d91293ab67f6",
    "url": "https://github.com/hibernate/hibernate-orm/commit/44a02e5efc39c6953ca6dd631669d91293ab67f6",
    "author": "barreiro",
    "time": "7/6/15 3:34 PM",
    "refactorings": [{
        "type": "Rename Class",
        "description": "Rename Class org.hibernate.test.bytecode.enhancement.MostBasicEnhancementTest renamed to org.hibernate.test.bytecode.enhancement.basic.BasicInSessionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Rename Package org.hibernate.test.bytecode.enhancement.entity.customer to org.hibernate.test.bytecode.enhancement.association",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Rename Package org.hibernate.test.bytecode.enhancement.entity to org.hibernate.test.bytecode.enhancement.dirty",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.bytecode.enhancement.entity.MyEntity moved to org.hibernate.test.bytecode.enhancement.basic.MyEntity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.bytecode.enhancement.entity.Address moved to org.hibernate.test.bytecode.enhancement.dirty.Address",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.bytecode.enhancement.entity.Country moved to org.hibernate.test.bytecode.enhancement.dirty.Country",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.bytecode.enhancement.entity.SimpleEntity moved to org.hibernate.test.bytecode.enhancement.dirty.SimpleEntity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.hibernate.test.bytecode.enhancement.MostBasicEnhancementTest moved to org.hibernate.test.bytecode.enhancement.basic.BasicInSessionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils.LocalPersistentAttributeInterceptor moved to org.hibernate.test.bytecode.enhancement.basic.ObjectAttributeMarkerInterceptor",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getName() : String from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "group is moved to another package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSomeNumber() : long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public getSomeNumber() : long from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It is a rename class!",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isActive() : boolean from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public isActive() : boolean from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It is a rename class!",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setActive(active boolean) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setActive(active boolean) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It is a rename class!",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setId(id Long) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setId(id Long) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It is a rename class!",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "group is moved to another package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setSomeNumber(someNumber long) : void from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to public setSomeNumber(someNumber long) : void from class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It is a rename class!",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public addInventory(inventory CustomerInventory) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public addInventory(inventory CustomerInventory) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getFirstName() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getFirstName() : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : Integer from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getInventories() : List from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getInventories() : List from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getLastName() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getLastName() : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getUser() : User from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getUser() : User from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getVersion() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public getVersion() : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public hashCode() : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setFirstName(firstName String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setFirstName(firstName String) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setId(customerId Integer) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setId(customerId Integer) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setLastName(lastName String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setLastName(lastName String) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setUser(user User) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public setUser(user User) : void from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public toString() : String from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public compare(cdb1 CustomerInventory, cdb2 CustomerInventory) : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public compare(cdb1 CustomerInventory, cdb2 CustomerInventory) : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCustId() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getCustId() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getVehicle() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getVehicle() : String from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getVersion() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public getVersion() : int from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public hashCode() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCustId() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventoryPK to public getCustId() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventoryPK to public getId() : Integer from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public getName() : String from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getUsers() : Set from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public getUsers() : Set from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public removeUser(user User) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public removeUser(user User) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public setName(name String) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setUsers(users Set) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to public setUsers(users Set) : void from class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getCustomer() : Customer from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getGroups() : Set from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getGroups() : Set from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getLogin() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getLogin() : String from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPassword() : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public getPassword() : String from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setCustomer(customer Customer) : void from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "both clases are moved",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setGroups(groups Set) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setGroups(groups Set) : void from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setLogin(login String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setLogin(login String) : void from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setPassword(password String) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public setPassword(password String) : void from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(o Object) : boolean from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to public equals(o Object) : boolean from class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to public equals(obj Object) : boolean from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private decompileDumpedClass(className String) : void from class org.hibernate.test.bytecode.enhancement.EnhancerTestUtils to public decompileDumpedClass(workingDir String, className String) : void from class org.hibernate.test.bytecode.enhancement.DecompileUtils",
        "comment": "It is a extract class",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public addGroup(group Group) : void from class org.hibernate.test.bytecode.enhancement.entity.customer.User to public addGroup(group Group) : void from class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.hibernate.test.bytecode.enhancement.entity.customer.SupplierComponentPK to public hashCode() : int from class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private active : boolean from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package id : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.lazy.Child",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package name : String from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.lazy.Child",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private someNumber : long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.basic.SimpleEntity",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private id : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private user : User from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private custId : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private customer : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private id : Long from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private vehicle : String from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to class org.hibernate.test.bytecode.enhancement.association.CustomerInventory",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private version : int from class org.hibernate.test.bytecode.enhancement.entity.customer.CustomerInventory to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private users : Set from class org.hibernate.test.bytecode.enhancement.entity.customer.Group to class org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private customer : Customer from class org.hibernate.test.bytecode.enhancement.entity.customer.User to class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private login : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private password : String from class org.hibernate.test.bytecode.enhancement.entity.customer.User to class org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package id : Long from class org.hibernate.test.bytecode.enhancement.entity.SubEntity to class org.hibernate.test.bytecode.enhancement.lazy.Parent",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private customerInventories : List from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private firstName : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private lastName : String from class org.hibernate.test.bytecode.enhancement.entity.customer.Customer to class org.hibernate.test.bytecode.enhancement.association.Customer",
        "comment": "It seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testEnhancement() : void renamed to public testLazy() : void in class org.hibernate.test.bytecode.enhancement.EnhancerTest",
        "comment": "<p>new</p><p>Nikos: This is a False Positive</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Nikos"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.bytecode.enhancement.entity.customer.Group moved to org.hibernate.test.bytecode.enhancement.association.Group",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.bytecode.enhancement.entity.customer.User moved to org.hibernate.test.bytecode.enhancement.association.User",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Change Package",
        "description": "Change Package org.hibernate.test.bytecode.enhancement.entity to org.hibernate.test.bytecode.enhancement.basic",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3179
}, {
    "id": 1134102,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "2f1b67b03f6c48aa189d7478e16ed0dcf8d50af8",
    "url": "https://github.com/hibernate/hibernate-orm/commit/2f1b67b03f6c48aa189d7478e16ed0dcf8d50af8",
    "author": "Radim Vansa",
    "time": "7/6/15 1:40 PM",
    "refactorings": [{
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.collection.CollectionRegionImplTestCase to class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.entity.EntityRegionImplTestCase to class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4137
}, {
    "id": 1134145,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "f394599bf1423be0be2d5822ed7f1271d2841225",
    "url": "https://github.com/gradle/gradle/commit/f394599bf1423be0be2d5822ed7f1271d2841225",
    "author": "Lóránt Pintér",
    "time": "7/7/15 8:09 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.gradle.jvm.plugins.JarBinaryRules moved to org.gradle.jvm.internal.JarBinaryRules",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1134151,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "36ccb0f5c6771ff4be87a282560c090447520b66",
    "url": "https://github.com/gradle/gradle/commit/36ccb0f5c6771ff4be87a282560c090447520b66",
    "author": "Daz DeBoer",
    "time": "7/6/15 8:45 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolvedLocalComponentsResultGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.projectresult.ResolvedLocalComponentsResultGraphVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolutionResultDependencyGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolutionResultDependencyGraphVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.AbstractArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.AbstractArtifactSet",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ArtifactSet",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ConfigurationArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ConfigurationArtifactSet",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.DependencyArtifactSet moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.DependencyArtifactSet",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolvedConfigurationDependencyGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedConfigurationDependencyGraphVisitor",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public resolve(resolveContext ResolveContext, newModelBuilder ResolutionResultBuilder, oldModelBuilder ResolvedConfigurationBuilder, artifactsBuilder ResolvedArtifactsBuilder, projectModelBuilder ResolvedLocalComponentsResultBuilder) : void inlined to public resolve(resolveContext ResolveContext, repositories List, metadataHandler GlobalDependencyResolutionRules, results BuildableResolverResults) : void in class org.gradle.api.internal.artifacts.ivyservice.resolveengine.DefaultDependencyResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }],
    "refDiffExecutionTime": 3963
}, {
    "id": 1134188,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "b1fb1192daa1647b0bd525600dd41063765eca70",
    "url": "https://github.com/gradle/gradle/commit/b1fb1192daa1647b0bd525600dd41063765eca70",
    "author": "Benjamin Muschko",
    "time": "7/6/15 10:08 AM",
    "refactorings": [{
        "type": "Push Down Method",
        "description": "Push Down Method public setGradleUserHomeDir(gradleUserHomeDir File) : void from class org.gradle.testkit.functional.GradleRunner to public setGradleUserHomeDir(gradleUserHomeDir File) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private gradleUserHomeDir : File from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getTasks() : List<String> from class org.gradle.testkit.functional.GradleRunner to public getTasks() : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private arguments : List<String> from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private taskNames : List<String> from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public setArguments(arguments List<String>) : void from class org.gradle.testkit.functional.GradleRunner to public setArguments(arguments List<String>) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private workingDirectory : File from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getGradleUserHomeDir() : File from class org.gradle.testkit.functional.GradleRunner to public getGradleUserHomeDir() : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public setWorkingDir(workingDirectory File) : void from class org.gradle.testkit.functional.GradleRunner to public setWorkingDir(workingDirectory File) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getArguments() : List<String> from class org.gradle.testkit.functional.GradleRunner to public getArguments() : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public setTasks(taskNames List<String>) : void from class org.gradle.testkit.functional.GradleRunner to public setTasks(taskNames List<String>) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getWorkingDir() : File from class org.gradle.testkit.functional.GradleRunner to public getWorkingDir() : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3286
}, {
    "id": 1134191,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "ba1da95200d080aef6251f13ced0ca67dff282be",
    "url": "https://github.com/gradle/gradle/commit/ba1da95200d080aef6251f13ced0ca67dff282be",
    "author": "Rene Groeschke",
    "time": "7/6/15 7:43 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.gradle.tooling.tests.TestExecutionException moved to org.gradle.tooling.test.TestExecutionException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4581
}, {
    "id": 1134252,
    "repository": "https://github.com/crate/crate.git",
    "sha1": "d5f10a4958f5e870680be906689d92d1efb42480",
    "url": "https://github.com/crate/crate/commit/d5f10a4958f5e870680be906689d92d1efb42480",
    "author": "Christian Haudum",
    "time": "7/6/15 11:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public add(info ReferenceInfo, partitionBy boolean) : Builder extracted from public add(column String, type DataType, path List<String>, columnPolicy ColumnPolicy, indexType ReferenceInfo.IndexType, partitionBy boolean) : Builder in class io.crate.metadata.table.TestingTableInfo.Builder",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1134634,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "35b6c869546a7968b6fd2f640add6eea87e03c22",
    "url": "https://github.com/infinispan/infinispan/commit/35b6c869546a7968b6fd2f640add6eea87e03c22",
    "author": "Adrian Nistor",
    "time": "7/6/15 1:12 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery.ReverseFilterResultComparator moved to org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery.ReverseFilterResultComparator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private createAccount(id int) : AccountPB renamed to private createAccountPB(id int) : AccountPB in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.query.remote.QueryFacadeImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.query.dsl.embedded.impl.QueryEngine",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.objectfilter.impl.FilterRegistry",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected projection : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to class org.infinispan.query.dsl.impl.BaseQuery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getProjection() : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public getProjection() : String[] from class org.infinispan.query.dsl.impl.BaseQuery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private parseQuery(cacheConfiguration Configuration, serCtx SerializationContext, queryString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult renamed to private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult in class org.infinispan.query.remote.QueryFacadeImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse renamed to private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.objectfilter.impl.syntax.BooleShannonExpansionTest",
        "comment": "Extract Superclass",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Nikos"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private createAccountPB() : AccountPB inlined to public testRemoteQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.NonIndexedEmbeddedCompatTest",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private createAccountPB() : AccountPB inlined to public testPutAndGet() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private createAccountPB() : AccountPB inlined to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood, Nikos"
    }],
    "refDiffExecutionTime": 6361
}, {
    "id": 1135417,
    "repository": "https://github.com/google/j2objc.git",
    "sha1": "fa3e6fa02dadc675f0d487a15cd842b3ac4a0c11",
    "url": "https://github.com/google/j2objc/commit/fa3e6fa02dadc675f0d487a15cd842b3ac4a0c11",
    "author": "kstanger",
    "time": "7/7/15 1:03 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getOperatorFunctionModifier(expr Expression) : String extracted from private rewriteBoxedPrefixOrPostfix(node TreeNode, operand Expression, funcName String) : void in class com.google.devtools.j2objc.translate.Autoboxer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getOperatorFunctionModifier(expr Expression) : String extracted from private rewriteBoxedAssignment(node Assignment) : void in class com.google.devtools.j2objc.translate.Autoboxer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1926
}, {
    "id": 1135559,
    "repository": "https://github.com/tomahawk-player/tomahawk-android.git",
    "sha1": "56c273ee11296288cb15320c3de781b94a1e8eb4",
    "url": "https://github.com/tomahawk-player/tomahawk-android/commit/56c273ee11296288cb15320c3de781b94a1e8eb4",
    "author": "Enno Gottschalk",
    "time": "7/7/15 10:44 PM",
    "refactorings": [{
        "type": "Push Down Method",
        "description": "Push Down Method public getAlbumTimeStamps() : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getAlbumTimeStamps() : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected mAlbumTracks : ConcurrentHashMap<Album,Set<Query>> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public wipe() : void from class org.tomahawk.libtomahawk.collection.NativeCollection to public wipe() : void from class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected mQueries : Set<Query> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected mArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getArtistTimeStamps() : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getArtistTimeStamps() : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private mArtistTimeStamps : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public addQuery(query Query, addedTimeStamp long) : void from class org.tomahawk.libtomahawk.collection.NativeCollection to public addQuery(query Query, addedTimeStamp long) : void from class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public getQueryTimeStamps() : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getQueryTimeStamps() : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected mAlbumArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private mQueryTimeStamps : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected mAlbums : Set<Album> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private mAlbumTimeStamps : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.UserCollection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected mArtistAlbums : ConcurrentHashMap<Artist,Set<Album>> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1144
}, {
    "id": 1135604,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
    "author": "nyghtowl",
    "time": "7/7/15 8:06 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public testBackTrackLine() : void from class org.deeplearning4j.plot.ListenerTest to public testBackTrackLine() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getNewScore(oldParameters INDArray) : double extracted from public optimize(initialStep double, parameters INDArray, gradients INDArray) : double in class org.deeplearning4j.optimize.solvers.BackTrackLineSearch",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getIrisLogisticLayerConfig(activationFunction String, iterations int) : OutputLayer extracted from public testLineSearch() : void in class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 997
}, {
    "id": 1135734,
    "repository": "https://github.com/google/closure-compiler.git",
    "sha1": "b9a17665b158955ad28ef7f50cc0a8585460f053",
    "url": "https://github.com/google/closure-compiler/commit/b9a17665b158955ad28ef7f50cc0a8585460f053",
    "author": "tbreisacher",
    "time": "7/7/15 1:21 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private createUntaggedTemplateLiteral(n Node) : void inlined to package visitTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private createTaggedTemplateLiteral(t NodeTraversal, n Node) : void renamed to package visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2970
}, {
    "id": 1135909,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "ef0eb01f93d6c485cf37692fd193833a6821272a",
    "url": "https://github.com/spring-projects/spring-framework/commit/ef0eb01f93d6c485cf37692fd193833a6821272a",
    "author": "Brian Clozel",
    "time": "7/7/15 8:08 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected checkRequest(request HttpServletRequest) : void extracted from protected checkAndPrepare(request HttpServletRequest, response HttpServletResponse, cacheControl CacheControl) : void in class org.springframework.web.servlet.support.WebContentGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected lookupCacheSeconds(urlPath String) : CacheControl renamed to protected lookupCacheControl(urlPath String) : CacheControl in class org.springframework.web.servlet.mvc.WebContentInterceptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testSetPathMatcherToNull() : void renamed to public throwsExceptionWithNullPathMatcher() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequest() : void renamed to public cacheResourcesConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCustomCacheMapping() : void renamed to public mappedCacheConfigurationOverridesGlobal() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCachingDisabled() : void renamed to public emptyCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithNoCaching() : void renamed to public preventCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2657
}, {
    "id": 1136002,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
    "url": "https://github.com/apache/hive/commit/b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
    "author": "Sergey Shelukhin",
    "time": "7/7/15 10:30 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private doFirstFetchIfNeeded() : void extracted from private joinFinalLeftData() : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private doFirstFetchIfNeeded() : void extracted from public process(row Object, tag int) : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4288
}, {
    "id": 1136184,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
    "url": "https://github.com/JetBrains/intellij-community/commit/ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
    "author": "Vassiliy.Kudryashov",
    "time": "7/8/15 5:41 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private getLiveIndicator(base Icon) : Icon from class com.intellij.execution.ui.RunContentManagerImpl to public getLiveIndicator(base Icon) : Icon from class com.intellij.execution.runners.ExecutionUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getConfiguration(project Project) : RunnerAndConfigurationSettings renamed to private getSelectedConfiguration(project Project) : RunnerAndConfigurationSettings in class com.intellij.execution.ExecutorRegistryImpl.ExecutorAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 22095
}, {
    "id": 1136333,
    "repository": "https://github.com/WhisperSystems/Signal-Android.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/Signal-Android.git",
    "sha1": "c4a37e38aba926c2bef27e4fc00e3a4848ce46bd",
    "url": "https://github.com/WhisperSystems/Signal-Android/commit/c4a37e38aba926c2bef27e4fc00e3a4848ce46bd",
    "author": "Calvin Hu",
    "time": "7/8/15 8:01 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public setMedia(slide Slide, masterSecret MasterSecret) : void extracted from public setMedia(slide Slide) : void in class org.thoughtcrime.securesms.mms.AttachmentManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private constructPartFromUri(uri Uri) : PduPart renamed to private constructPartFromByteArrayAndUri(uri Uri, data byte[], encrypted boolean) : PduPart in class org.thoughtcrime.securesms.mms.ImageSlide",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1335
}, {
    "id": 1136335,
    "repository": "https://github.com/WhisperSystems/Signal-Android.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/Signal-Android.git",
    "sha1": "f0b2cc559026871c1b4d8e008666afb590553004",
    "url": "https://github.com/WhisperSystems/Signal-Android/commit/f0b2cc559026871c1b4d8e008666afb590553004",
    "author": "Christoph Haefner",
    "time": "7/8/15 4:55 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private craftIntent(context Context, intentAction String, extras Bundle) : PendingIntent extracted from public getMarkAsReadIntent(context Context, masterSecret MasterSecret) : PendingIntent in class org.thoughtcrime.securesms.notifications.NotificationState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 923
}, {
    "id": 1136374,
    "repository": "https://github.com/novoda/android-demos.git",
    "sha1": "5cdabae35f0642e9fe243afe12e4c16b3378a150",
    "url": "https://github.com/novoda/android-demos/commit/5cdabae35f0642e9fe243afe12e4c16b3378a150",
    "author": "Friedger Müffke",
    "time": "7/9/15 10:00 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.novoda.Base64DecoderException moved to com.novoda.demo.encryption.Base64DecoderException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.novoda.Base64 moved to com.novoda.demo.encryption.Base64",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.novoda.Encrypt renamed to com.novoda.demo.encryption.EncryptionActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private updateTextViews() : void extracted from public onCreate(savedInstanceState Bundle) : void in class com.novoda.Encrypt",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1136424,
    "repository": "https://github.com/nutzam/nutz.git",
    "sha1": "de7efe40dad0f4bb900c4fffa80ed377745532b3",
    "url": "https://github.com/nutzam/nutz/commit/de7efe40dad0f4bb900c4fffa80ed377745532b3",
    "author": "kouxian",
    "time": "7/8/15 5:25 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public migration(dao Dao, klass Class<?>, add boolean, del boolean, tableName Object) : void extracted from public migration(dao Dao, klass Class<?>, add boolean, del boolean) : void in class org.nutz.dao.util.Daos",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public migration(dao Dao, packageName String, add boolean, del boolean, nameTable String) : void extracted from public migration(dao Dao, packageName String, add boolean, del boolean) : void in class org.nutz.dao.util.Daos",
        "comment": "<p>The method&nbsp;migration() used to be called in the same place even in the past!</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood, Nikos"
    }],
    "refDiffExecutionTime": 1121
}, {
    "id": 1136480,
    "repository": "https://github.com/siacs/Conversations.git",
    "sha1": "bdc9f9a44f337ab595a3570833dc6a0558df904c",
    "url": "https://github.com/siacs/Conversations/commit/bdc9f9a44f337ab595a3570833dc6a0558df904c",
    "author": "Andreas Straub",
    "time": "7/9/15 9:23 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor extracted from private getIdentityKeyCursor(account Account, name String, own boolean) : Cursor in class eu.siacs.conversations.persistance.DatabaseBackend",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isTrustedSession(account Account, contact AxolotlAddress) : boolean renamed to public isIdentityKeyTrusted(account Account, name String, fingerprint String) : AxolotlService.SQLiteAxolotlStore.Trust in class eu.siacs.conversations.persistance.DatabaseBackend",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setTrustedSession(account Account, contact AxolotlAddress, trusted boolean) : void renamed to public setIdentityKeyTrust(account Account, name String, fingerprint String, trust AxolotlService.SQLiteAxolotlStore.Trust) : boolean in class eu.siacs.conversations.persistance.DatabaseBackend",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1622
}, {
    "id": 1136537,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "95bfa40630e34f6f369e0055d9f37f49bca60247",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/95bfa40630e34f6f369e0055d9f37f49bca60247",
    "author": "Mike Hearn",
    "time": "7/8/15 7:36 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getUTXOs(outPoints List<TransactionOutPoint>, includeMempool boolean) : ListenableFuture<UTXOsMessage> extracted from public getUTXOs(outPoints List<TransactionOutPoint>) : ListenableFuture<UTXOsMessage> in class org.bitcoinj.core.Peer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1322
}, {
    "id": 1136668,
    "repository": "https://github.com/orfjackal/retrolambda.git",
    "sha1": "46b0d84de9c309bca48a99e572e6611693ed5236",
    "url": "https://github.com/orfjackal/retrolambda/commit/46b0d84de9c309bca48a99e572e6611693ed5236",
    "author": "Esko Luontola",
    "time": "7/8/15 2:08 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public saveResource(relativePath Path, content byte[]) : void extracted from public save(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public save(bytecode byte[]) : void renamed to public saveClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 384
}, {
    "id": 1136729,
    "repository": "https://github.com/reactor/reactor.git",
    "sha1": "669b96c8aa4ed5134617932118de563bd4c34066",
    "url": "https://github.com/reactor/reactor/commit/669b96c8aa4ed5134617932118de563bd4c34066",
    "author": "Stephane Maldini",
    "time": "7/9/15 6:45 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.Recyclable moved to reactor.core.support.Recyclable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.bus.alloc.EventAllocator moved to reactor.alloc.EventAllocator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.ReferenceCountingAllocator moved to reactor.alloc.ReferenceCountingAllocator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.bus.alloc.EventAllocatorTests moved to reactor.alloc.EventAllocatorTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.RecyclableString moved to reactor.alloc.RecyclableString",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.bus.alloc.EventFactorySupplier moved to reactor.alloc.EventFactorySupplier",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.AbstractReference moved to reactor.alloc.AbstractReference",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.Allocator moved to reactor.alloc.Allocator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.Reference moved to reactor.alloc.Reference",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class reactor.core.alloc.RecyclableNumber moved to reactor.alloc.RecyclableNumber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1136737,
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "sha1": "a07cae0aca9f9072256b3a5fd05779e8d69b9748",
    "url": "https://github.com/checkstyle/checkstyle/commit/a07cae0aca9f9072256b3a5fd05779e8d69b9748",
    "author": "Baratali Izmailov",
    "time": "7/8/15 10:27 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private leaveLiteralIf(literalIf DetailAST) : void inlined to public leaveToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private visitLiteralTry(literalTry DetailAST) : void inlined to public visitToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private leaveLiteralTry() : void inlined to public leaveToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private visitLiteralIf(literalIf DetailAST) : void inlined to public visitToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1138
}, {
    "id": 1136760,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "f283ed29814403bde6350a2598cdd6e2c8b983d5",
    "url": "https://github.com/apache/cassandra/commit/f283ed29814403bde6350a2598cdd6e2c8b983d5",
    "author": "Yuki Morishita",
    "time": "7/8/15 1:58 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> inlined to public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionTask renamed to org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionCandidate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5916
}, {
    "id": 1136831,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "7b5622d41537315710b6fd57b2739a3a64698375",
    "url": "https://github.com/JetBrains/MPS/commit/7b5622d41537315710b6fd57b2739a3a64698375",
    "author": "Fedor Isakov",
    "time": "7/8/15 2:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getTreePath(components List<String>, escapePathSep boolean) : TreePath extracted from private stringToPath(pathString String) : TreePath in class jetbrains.mps.ide.ui.tree.MPSTree",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 24724
}, {
    "id": 1136870,
    "repository": "https://github.com/crate/crate.git",
    "sha1": "563d281b61e9f8748858e911eaa810e981f1e953",
    "url": "https://github.com/crate/crate/commit/563d281b61e9f8748858e911eaa810e981f1e953",
    "author": "dobe",
    "time": "7/9/15 6:48 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getCustomRoutingCol() : ColumnIdent extracted from private getRoutingCol() : ColumnIdent in class io.crate.metadata.doc.DocIndexMetaData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private validateNoUnsupportedFields(function Function, context Context) : String renamed to private rewriteAndValidateFields(function Function, context Context) : Function in class io.crate.lucene.LuceneQueryBuilder.Visitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testSelectById() : void renamed to public testSelectByIdWithCustomRouting() : void in class io.crate.analyze.where.WhereClauseAnalyzerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2438
}, {
    "id": 1136909,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "b0938501f1014cf663e33b44ed5bb9b24d19a358",
    "url": "https://github.com/Alluxio/alluxio/commit/b0938501f1014cf663e33b44ed5bb9b24d19a358",
    "author": "Gene Pang",
    "time": "7/8/15 1:29 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public disableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public enableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 771
}, {
    "id": 1136996,
    "repository": "https://github.com/gwtproject/gwt.git",
    "sha1": "e0dda9f61b7c409944c4734edf75b108e0288f59",
    "url": "https://github.com/gwtproject/gwt/commit/e0dda9f61b7c409944c4734edf75b108e0288f59",
    "author": "Daniel Kurka",
    "time": "7/8/15 4:20 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.google.gwt.core.client.impl.Md5Digest moved to java.security.MessageDigest.Md5Digest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2294
}, {
    "id": 1137049,
    "repository": "https://github.com/Jasig/cas.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/cas.git",
    "sha1": "7fb0d1ce3b6583013e81ac05eb9afb15d20eab7f",
    "url": "https://github.com/Jasig/cas/commit/7fb0d1ce3b6583013e81ac05eb9afb15d20eab7f",
    "author": "Misagh Moayyed",
    "time": "7/8/15 2:56 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.util.SpnegoConstants to class org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1137085,
    "repository": "https://github.com/facebook/facebook-android-sdk.git",
    "sha1": "19d1936c3b07d97d88646aeae30de747715e3248",
    "url": "https://github.com/facebook/facebook-android-sdk/commit/19d1936c3b07d97d88646aeae30de747715e3248",
    "author": "Ming Li",
    "time": "7/8/15 3:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getErrorMessage(extras Bundle) : String extracted from private handleResultOk(request LoginClient.Request, data Intent) : LoginClient.Result in class com.facebook.login.KatanaProxyLoginMethodHandler",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int) : void in class com.facebook.FacebookSdk",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public sdkInitialize(applicationContext Context, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context) : void in class com.facebook.FacebookSdk",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private CAPTION_PARAM : String from class com.facebook.share.internal.ShareInternalUtility to class com.facebook.GraphRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getError(extras Bundle) : String extracted from private handleResultOk(request LoginClient.Request, data Intent) : LoginClient.Result in class com.facebook.login.KatanaProxyLoginMethodHandler",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private PICTURE_PARAM : String from class com.facebook.share.internal.ShareInternalUtility to class com.facebook.GraphRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1748
}, {
    "id": 1137157,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "f664789737d516ac664462732664121acc111a1e",
    "url": "https://github.com/apache/hive/commit/f664789737d516ac664462732664121acc111a1e",
    "author": "Eugene Koifman",
    "time": "7/8/15 9:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private dumpConfig(conf Configuration, sb StringBuilder) : void extracted from private dumpEnvironent() : String in class org.apache.hive.hcatalog.templeton.AppConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5501
}, {
    "id": 1137182,
    "repository": "https://github.com/HubSpot/Singularity.git",
    "sha1": "944aea445051891280a8ab7fbbd514c19646f1ab",
    "url": "https://github.com/HubSpot/Singularity/commit/944aea445051891280a8ab7fbbd514c19646f1ab",
    "author": "Whitney Sorenson",
    "time": "7/9/15 7:21 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask extracted from protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, instanceNo int, initialTaskState TaskState) : SingularityTask in class com.hubspot.singularity.SingularitySchedulerTestBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 838
}, {
    "id": 1137231,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "910397f2390d6821a006991ed6035c76cbc74897",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/910397f2390d6821a006991ed6035c76cbc74897",
    "author": "Jorge Ruesga",
    "time": "7/9/15 4:42 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface com.android.systemui.statusbar.policy.BatteryStateRegistar from class com.android.systemui.statusbar.policy.BatteryController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getBoltPointsArrayResource() : int extracted from private loadBoltPoints(res Resources) : float[] in class com.android.systemui.BatteryMeterView.NormalBatteryMeterDrawable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getBoltPointsArrayResource() : int extracted from private loadBoltPoints(res Resources) : float[] in class com.android.systemui.BatteryMeterView.CircleBatteryMeterDrawable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public internalStoreStatsHistoryInFile(stats BatteryStats, fname String) : void extracted from public storeStatsHistoryInFile(fname String) : void in class com.android.internal.os.BatteryStatsHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from public readSummaryFromParcel(in Parcel) : void in class com.android.internal.os.BatteryStatsImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from public setNumSpeedSteps(steps int) : void in class com.android.internal.os.BatteryStatsImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from package readFromParcelLocked(in Parcel) : void in class com.android.internal.os.BatteryStatsImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected getKernelWakelockUpdateVersion() : int extracted from public updateKernelWakelocksLocked() : void in class com.android.internal.os.BatteryStatsImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private load() : void renamed to private loadStats() : void in class com.android.internal.os.BatteryStatsHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback moved to com.android.systemui.statusbar.policy.BatteryStateRegistar.BatteryStateChangeCallback",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setBatteryController(batteryController BatteryController) : void renamed to public setBatteryStateRegistar(batteryStateRegistar BatteryStateRegistar) : void in class com.android.systemui.BatteryLevelTextView",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 11400
}, {
    "id": 1137311,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "e1625136ba12907696ef4c6e922ce073293f3a2c",
    "url": "https://github.com/JetBrains/intellij-community/commit/e1625136ba12907696ef4c6e922ce073293f3a2c",
    "author": "Vladislav.Soroka",
    "time": "7/10/15 10:34 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private addAnnotationProcessorOption(compilerArg String, optionsMap Map<String,String>) : void extracted from private getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig Element) : Map<String,String> in class org.jetbrains.idea.maven.project.MavenProject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15481
}, {
    "id": 1137389,
    "repository": "https://github.com/openhab/openhab.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/openhab1-addons.git",
    "sha1": "cf1efb6d27a4037cdbe5a780afa6053859a60d4a",
    "url": "https://github.com/openhab/openhab/commit/cf1efb6d27a4037cdbe5a780afa6053859a60d4a",
    "author": "HelmutL",
    "time": "7/9/15 9:46 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private initializeGeneralGlobals() : void extracted from private initializeSciptGlobals() : void in class org.openhab.core.jsr223.internal.engine.scriptmanager.Script",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private initializeNashornGlobals() : void extracted from private initializeSciptGlobals() : void in class org.openhab.core.jsr223.internal.engine.scriptmanager.Script",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2598
}, {
    "id": 1137397,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "url": "https://github.com/hazelcast/hazelcast/commit/69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
    "author": "Marko Topolnik",
    "time": "7/10/15 5:19 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.SafeBuffer to class com.hazelcast.nio.Bits",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.UnsafeBuffer to class com.hazelcast.nio.Bits",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap moved to com.hazelcast.util.collection.Int2ObjectHashMap",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.client.protocol.Int2ObjectHashMapTest moved to com.hazelcast.util.collection.Int2ObjectHashMapTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap.Supplier moved to com.hazelcast.util.function.Supplier",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getOrDefault(key int, supplier Supplier) : V renamed to public computeIfAbsent(key int, mappingFunction IntFunction) : V in class com.hazelcast.util.collection.Int2ObjectHashMap",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1599
}, {
    "id": 1137575,
    "repository": "https://github.com/google/auto.git",
    "sha1": "8967e7c33c59e1336e1e3b4671293ced5697fca6",
    "url": "https://github.com/google/auto/commit/8967e7c33c59e1336e1e3b4671293ced5697fca6",
    "author": "emcmanus",
    "time": "7/9/15 9:16 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private doTestMissingClass(tempDir File) : void extracted from public testMissingClass() : void in class com.google.auto.value.processor.AutoAnnotationCompilationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1137576,
    "repository": "https://github.com/google/auto.git",
    "sha1": "8fc60d81fe0e46e7e5c96e71d4a93fcadc6bde4f",
    "url": "https://github.com/google/auto/commit/8fc60d81fe0e46e7e5c96e71d4a93fcadc6bde4f",
    "author": "dpb",
    "time": "7/9/15 9:16 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private deferredElements() : ImmutableMap<String,Optional<? extends Element>> extracted from public process(annotations Set<? extends TypeElement>, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private validElements(deferredElements ImmutableMap<String,Optional<? extends Element>>, roundEnv RoundEnvironment) : ImmutableSetMultimap<Class<? extends Annotation>,Element> extracted from public process(annotations Set<? extends TypeElement>, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private process(validElements ImmutableSetMultimap<Class<? extends Annotation>,Element>) : void extracted from public process(annotations Set<? extends TypeElement>, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1137619,
    "repository": "https://github.com/spotify/helios.git",
    "sha1": "da39bfeb9c370abe2d86e6e327fade252434090d",
    "url": "https://github.com/spotify/helios/commit/da39bfeb9c370abe2d86e6e327fade252434090d",
    "author": "David Xia",
    "time": "7/9/15 3:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package run0(client HeliosClient, out PrintStream, json boolean, name String, full boolean) : int extracted from package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupStatusCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method package watchDeploymentGroup(out PrintStream, name String, interval int, clients List<TargetAndClient>) : void inlined to package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupWatchCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1137627,
    "repository": "https://github.com/siacs/Conversations.git",
    "sha1": "925801c14e7500313069b2bc04abd066798a881c",
    "url": "https://github.com/siacs/Conversations/commit/925801c14e7500313069b2bc04abd066798a881c",
    "author": "Daniel Gultsch",
    "time": "7/10/15 9:14 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnection to public setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnectionManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 462
}, {
    "id": 1137793,
    "repository": "https://github.com/thymeleaf/thymeleaf.git",
    "sha1": "378ba37750a9cb1b19a6db434dfa59308f721ea6",
    "url": "https://github.com/thymeleaf/thymeleaf/commit/378ba37750a9cb1b19a6db434dfa59308f721ea6",
    "author": "Daniel Fernández",
    "time": "7/9/15 9:20 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private matchOverflow(structure char[]) : boolean extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.reader.BlockAwareReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 215
}, {
    "id": 1137794,
    "repository": "https://github.com/thymeleaf/thymeleaf.git",
    "sha1": "aed371dac5e1248880e869930c636994c3d0f8dc",
    "url": "https://github.com/thymeleaf/thymeleaf/commit/aed371dac5e1248880e869930c636994c3d0f8dc",
    "author": "Daniel Fernández",
    "time": "7/9/15 6:57 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fillUpOverflow() : void extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private processReadBuffer(buffer char[], off int, len int) : int extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 256
}, {
    "id": 1138004,
    "repository": "https://github.com/netty/netty.git",
    "sha1": "8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
    "url": "https://github.com/netty/netty/commit/8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
    "author": "nmittler",
    "time": "7/9/15 11:35 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private cancelPendingStreams() : void inlined to public close() : void in class io.netty.handler.codec.http2.StreamBufferingEncoder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class io.netty.handler.codec.http2.StreamBufferingEncoder.GoAwayException renamed to io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3991
}, {
    "id": 1138074,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "9aeefcd8120bb3b89cdb437d8c32d2ed84b8a825",
    "url": "https://github.com/Alluxio/alluxio/commit/9aeefcd8120bb3b89cdb437d8c32d2ed84b8a825",
    "author": "Carson Wang",
    "time": "7/9/15 1:34 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getCandidateDirInTier(tier StorageTier, blockSize long) : StorageDir extracted from public allocateBlock(userId long, blockId long, blockSize long, location BlockStoreLocation) : TempBlockMeta in class tachyon.worker.block.allocator.MaxFreeAllocator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 348
}, {
    "id": 1138135,
    "repository": "https://github.com/apache/camel.git",
    "sha1": "cb0935e3af05b333b5c85a4fb3b1846836218f11",
    "url": "https://github.com/apache/camel/commit/cb0935e3af05b333b5c85a4fb3b1846836218f11",
    "author": "Jonathan Anstey",
    "time": "7/10/15 11:17 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private storeCamelContextInQuartzContext() : SchedulerContext extracted from private createAndInitScheduler() : void in class org.apache.camel.component.quartz2.QuartzComponent",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15605
}, {
    "id": 1138152,
    "repository": "https://github.com/apache/camel.git",
    "sha1": "9f319029ecc031cf8bf1756ab8a0e9e4e52c2902",
    "url": "https://github.com/apache/camel/commit/9f319029ecc031cf8bf1756ab8a0e9e4e52c2902",
    "author": "Claus Ibsen",
    "time": "7/9/15 1:06 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.apache.camel.model.OtherAttributesAware from class org.apache.camel.model.ProcessorDefinition",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6877
}, {
    "id": 1138354,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "76331570e68446c17e4ff5287f5b7b2b6b472895",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/76331570e68446c17e4ff5287f5b7b2b6b472895",
    "author": "Andy Mast",
    "time": "7/11/15 2:50 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public clearFailedUnlockAttempts(clearFingers boolean) : void extracted from public clearFailedUnlockAttempts() : void in class com.android.keyguard.KeyguardUpdateMonitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6374
}, {
    "id": 1138530,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "679d38d4316c16ccba4982d7f3ba13c147a451cb",
    "url": "https://github.com/hazelcast/hazelcast/commit/679d38d4316c16ccba4982d7f3ba13c147a451cb",
    "author": "Serkan OZAL",
    "time": "7/12/15 6:06 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected getFromNearCache(keyData Data, async boolean) : Object extracted from protected getInternal(key K, expiryPolicy ExpiryPolicy, async boolean) : Object in class com.hazelcast.client.cache.impl.AbstractClientCacheProxy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 2034
}, {
    "id": 1138932,
    "repository": "https://github.com/QuantumBadger/RedReader.git",
    "sha1": "2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "url": "https://github.com/QuantumBadger/RedReader/commit/2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
    "author": "QuantumBadger",
    "time": "7/11/15 11:33 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public UI_THREAD_HANDLER : Handler from class org.quantumbadger.redreader.common.General to class org.quantumbadger.redreader.common.AndroidApi",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1114
}, {
    "id": 1139036,
    "repository": "https://github.com/spotify/helios.git",
    "sha1": "dd8753cfb0f67db4dde6c5254e2df3104b635dae",
    "url": "https://github.com/spotify/helios/commit/dd8753cfb0f67db4dde6c5254e2df3104b635dae",
    "author": "Rohan Singh",
    "time": "7/10/15 6:18 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getDeploymentGroup(client ZooKeeperClient, name String) : DeploymentGroup extracted from public getDeploymentGroup(name String) : DeploymentGroup in class com.spotify.helios.master.ZooKeeperMasterModel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public configDeploymentGroups(name String) : String renamed to public configDeploymentGroup(name String) : String in class com.spotify.helios.servicescommon.coordination.Paths",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1139075,
    "repository": "https://github.com/SimonVT/schematic.git",
    "sha1": "c1a9dd63aca8bf488f9a671aa6281538540397f8",
    "url": "https://github.com/SimonVT/schematic/commit/c1a9dd63aca8bf488f9a671aa6281538540397f8",
    "author": "Simon Vig Therkildsen",
    "time": "7/12/15 10:27 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private printNotifyInsert(writer JavaWriter, uri UriContract) : void extracted from public write(filer Filer) : void in class net.simonvt.schematic.compiler.ContentProviderWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private printNotifyBulkInsert(writer JavaWriter, uri UriContract) : void extracted from public write(filer Filer) : void in class net.simonvt.schematic.compiler.ContentProviderWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 364
}, {
    "id": 1139092,
    "repository": "https://github.com/github/android.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/PocketHub.git",
    "sha1": "a7401e5091c06c68fae499ea1972b40143c66fa9",
    "url": "https://github.com/github/android/commit/a7401e5091c06c68fae499ea1972b40143c66fa9",
    "author": "Henrik",
    "time": "7/11/15 9:20 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private onUserLoggedIn(uri Uri) : void extracted from protected onNewIntent(intent Intent) : void in class com.github.mobile.accounts.LoginActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private endAccess(accessToken String, scope String) : void renamed to private endAuth(accessToken String, scope String) : void in class com.github.mobile.accounts.LoginActivity",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 539
}, {
    "id": 1139097,
    "repository": "https://github.com/cgeo/cgeo.git",
    "sha1": "7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "url": "https://github.com/cgeo/cgeo/commit/7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
    "author": "Bananeweizen",
    "time": "7/12/15 7:01 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class cgeo.geocaching.connector.TerraCachingConnector moved to cgeo.geocaching.connector.tc.TerraCachingConnector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public canHandle(geocode String) : boolean from class cgeo.geocaching.connector.TerraCachingConnector to public canHandle(geocode String) : boolean from class cgeo.geocaching.connector.tc.TerraCachingConnector",
        "comment": "It is a move method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getHost() : String from class cgeo.geocaching.connector.TerraCachingConnector to public getHost() : String from class cgeo.geocaching.connector.tc.TerraCachingConnector",
        "comment": "It is a move method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class cgeo.geocaching.connector.TerraCachingConnector to public getName() : String from class cgeo.geocaching.connector.tc.TerraCachingConnector",
        "comment": "It is a move method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isOwner(cache Geocache) : boolean from class cgeo.geocaching.connector.TerraCachingConnector to public isOwner(cache Geocache) : boolean from class cgeo.geocaching.connector.tc.TerraCachingConnector",
        "comment": "It is a move method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private PATTERN_GEOCODE : Pattern from class cgeo.geocaching.connector.TerraCachingConnector to class cgeo.geocaching.connector.tc.TerraCachingConnector",
        "comment": "It is a move method",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2501
}, {
    "id": 1139304,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
    "author": "jyt109",
    "time": "7/11/15 11:47 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public readCaffeModel(is InputStream, sizeLimitMb int) : NetParameter extracted from public readCaffeModel(caffeModelPath String, sizeLimitMb int) : NetParameter in class org.deeplearning4j.translate.CaffeModelToJavaClass",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1804
}, {
    "id": 1139380,
    "repository": "https://github.com/square/javapoet.git",
    "sha1": "5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
    "url": "https://github.com/square/javapoet/commit/5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
    "author": "Thomas Broyer",
    "time": "7/10/15 11:56 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.squareup.javapoet.TypesTest.Parameterized moved to com.squareup.javapoet.AbstractTypesTest.Parameterized",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass com.squareup.javapoet.AbstractTypesTest from class com.squareup.javapoet.TypesTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getElement(clazz Class) : TypeElement renamed to protected getElements() : Elements in class com.squareup.javapoet.TypesTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1139443,
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "sha1": "febbc986cb25ed460ea601c0a68c7d2597f89ee4",
    "url": "https://github.com/checkstyle/checkstyle/commit/febbc986cb25ed460ea601c0a68c7d2597f89ee4",
    "author": "Michal Kordas",
    "time": "7/12/15 2:07 AM",
    "refactorings": [{
        "type": "Rename Class",
        "description": "Rename Class com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.writer renamed to com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.otherWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.google.checkstyle.test.chapter5naming.rule521packageNames.PackageNameInputBad moved to com.google.checkstyle.test.chapter5naming.rule521packageNamesCamelCase.PackageNameInputBad",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 641
}, {
    "id": 1139562,
    "repository": "https://github.com/Alluxio/alluxio.git",
    "sha1": "5b184ac783784c1ca4baf1437888c79bd9460763",
    "url": "https://github.com/Alluxio/alluxio/commit/5b184ac783784c1ca4baf1437888c79bd9460763",
    "author": "cc",
    "time": "7/11/15 9:32 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private freeSpace(bytesToBeAvailable long, location BlockStoreLocation) : EvictionPlan inlined to public freeSpaceWithView(bytesToBeAvailable long, location BlockStoreLocation, view BlockMetadataManagerView) : EvictionPlan in class tachyon.worker.block.evictor.LRUEvictor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 537
}, {
    "id": 1139781,
    "repository": "https://github.com/structr/structr.git",
    "sha1": "15afd616cba5fb3d432d11a6de0d4f7805b202db",
    "url": "https://github.com/structr/structr/commit/15afd616cba5fb3d432d11a6de0d4f7805b202db",
    "author": "Christian Morgner",
    "time": "7/13/15 4:05 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package handleObject(nodeFactory NodeFactory, relFactory RelationshipFactory, key String, value Object, includeHiddenAndDeleted boolean, publicOnly boolean, level int) : Object extracted from public execute(query String, parameters Map<String,Object>, includeHiddenAndDeleted boolean, publicOnly boolean) : List<GraphObject> in class org.structr.core.graph.CypherQueryCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2025
}, {
    "id": 1139791,
    "repository": "https://github.com/spring-projects/spring-boot.git",
    "sha1": "84937551787072a4befac29fb48436b3187ac4c6",
    "url": "https://github.com/spring-projects/spring-boot/commit/84937551787072a4befac29fb48436b3187ac4c6",
    "author": "Andy Wilkinson",
    "time": "7/14/15 8:30 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration.SpringBootSecDispatcher moved to org.springframework.boot.cli.compiler.MavenSettingsReader.SpringBootSecDispatcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createMirrorSelector(settings Settings) : MirrorSelector from class org.springframework.boot.cli.compiler.MavenSettings",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createSettingsDecrypter() : SettingsDecrypter from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private decryptSettings(settings Settings) : SettingsDecryptionResult from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private setField(clazz Class, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private setField(clazz Class, fieldName String, target Object, value Object) : void from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createProxySelector(proxies List) : ProxySelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createProxySelector(decryptedSettings SettingsDecryptionResult) : ProxySelector from class org.springframework.boot.cli.compiler.MavenSettings",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createAuthenticationSelector(servers List) : AuthenticationSelector from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to private createAuthenticationSelector(decryptedSettings SettingsDecryptionResult) : AuthenticationSelector from class org.springframework.boot.cli.compiler.MavenSettings",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private loadSettings() : Settings from class org.springframework.boot.cli.compiler.RepositoryConfigurationFactory to private loadSettings() : Settings from class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "target class did not exust in the previous revision",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public readSettings() : MavenSettings extracted from public apply(session DefaultRepositorySystemSession, repositorySystem RepositorySystem) : void in class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration",
        "comment": "<p>Extract and Move to other class</p><p>Extract and Move to <span class='blob-code-inner'><span class='pl-en'>MavenSettingsReader</span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private homeDir : String from class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration to class org.springframework.boot.cli.compiler.MavenSettingsReader",
        "comment": "It can be an extract method refactoring",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2343
}, {
    "id": 1139897,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "af618666043f21b3db7e6a1be2aa225ae0f432b4",
    "url": "https://github.com/JetBrains/intellij-community/commit/af618666043f21b3db7e6a1be2aa225ae0f432b4",
    "author": "peter",
    "time": "7/14/15 6:34 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private isNavigationBlocked(renderer GutterIconRenderer, project Project) : boolean extracted from public mouseReleased(e MouseEvent) : void in class com.intellij.openapi.editor.impl.EditorGutterComponentImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 18405
}, {
    "id": 1139976,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "url": "https://github.com/hazelcast/hazelcast/commit/76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
    "author": "sancar",
    "time": "7/13/15 8:28 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(count int) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(addressArray String[]) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected startSelectors() : void extracted from public start() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected initializeSelectors(client HazelcastClientInstanceImpl) : void extracted from public ClientConnectionManagerImpl(client HazelcastClientInstanceImpl, addressTranslator AddressTranslator) in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected shutdownSelectors() : void extracted from public shutdown() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private tripshutdown(instances HazelcastInstance[]) : void renamed to private tripTerminate(instances HazelcastInstance[]) : void in class com.hazelcast.mapreduce.MapReduceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private TestHazelcastInstanceFactory(addresses Address[]) renamed to private init(initialNodeCount int) : void in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private pickAddress() : Address extracted from public newHazelcastInstance(config Config) : HazelcastInstance in class com.hazelcast.test.TestHazelcastInstanceFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4170
}, {
    "id": 1139995,
    "repository": "https://github.com/spring-projects/spring-security.git",
    "sha1": "64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "url": "https://github.com/spring-projects/spring-security/commit/64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
    "author": "Rob Winch",
    "time": "7/14/15 12:45 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource extracted from public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource in class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6646
}, {
    "id": 1140028,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "a26b61201cd86c9a8773b418d9c84b446e95a601",
    "url": "https://github.com/neo4j/neo4j/commit/a26b61201cd86c9a8773b418d9c84b446e95a601",
    "author": "Mattias Persson",
    "time": "7/14/15 5:14 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public arrayAsCollection(arrayValue Object) : Collection<Object> from class org.neo4j.kernel.impl.util.IoPrimitiveUtils to public arrayAsCollection(arrayValue Object) : Collection<Object> from class org.neo4j.graphdb.Neo4jMatchers",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 10292
}, {
    "id": 1140032,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "url": "https://github.com/neo4j/neo4j/commit/5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
    "author": "Mikhaylo Demianenko",
    "time": "7/13/15 8:59 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenClosingTheDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldRotateCountsStoreWhenRotatingLog() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountStoreWhenDBContainsDenseNodes() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesAndRelationshipsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateAnEmptyCountsStoreFromAnEmptyDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedRelationshipRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreNodesInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountsStoreWhenThereAreUnusedNodeRecordsInTheDB() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setup() : void renamed to public setUp() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public teardown() : void renamed to public tearDown() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 6884
}, {
    "id": 1140061,
    "repository": "https://github.com/jline/jline2.git",
    "sha1": "80d3ffb5aafa90992385c17e8338c2cc5def3cec",
    "url": "https://github.com/jline/jline2/commit/80d3ffb5aafa90992385c17e8338c2cc5def3cec",
    "author": "Luke Call",
    "time": "7/13/15 10:30 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public readCharacter(checkForAltKeyCombo boolean) : int extracted from public readCharacter() : int in class jline.console.ConsoleReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public readCharacter(checkForAltKeyCombo boolean, allowed char[]) : int extracted from public readCharacter(allowed char[]) : int in class jline.console.ConsoleReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 653
}, {
    "id": 1140071,
    "repository": "https://github.com/plutext/docx4j.git",
    "sha1": "e29924b33ec0c0298ba4fc3f7a8c218c8e6cfa0c",
    "url": "https://github.com/plutext/docx4j/commit/e29924b33ec0c0298ba4fc3f7a8c218c8e6cfa0c",
    "author": "Jason Harrop",
    "time": "7/14/15 12:58 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public save(outFile File, flags int, password String) : void extracted from public save(outFile File, flags int) : void in class org.docx4j.openpackaging.packages.OpcPackage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public save(outStream OutputStream, flags int, password String) : void extracted from public save(outStream OutputStream, flags int) : void in class org.docx4j.openpackaging.packages.OpcPackage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndianConsts moved to org.docx4j.org.apache.poi.util.LittleEndianConsts",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.Ole10Native moved to org.docx4j.org.apache.poi.poifs.filesystem.Ole10Native",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.RawDataBlockList moved to org.docx4j.org.apache.poi.poifs.storage.RawDataBlockList",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.Decryptor moved to org.docx4j.org.apache.poi.poifs.crypt.Decryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.RecordFormatException moved to org.docx4j.org.apache.poi.util.RecordFormatException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.ReadingNotSupportedException moved to org.docx4j.org.apache.poi.hpsf.ReadingNotSupportedException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.StringUtil moved to org.docx4j.org.apache.poi.util.StringUtil",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Property moved to org.docx4j.org.apache.poi.hpsf.Property",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.standard.EncryptionRecord moved to org.docx4j.org.apache.poi.poifs.crypt.standard.EncryptionRecord",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.ShortField moved to org.docx4j.org.apache.poi.util.ShortField",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.PropertyTableBase moved to org.docx4j.org.apache.poi.poifs.property.PropertyTableBase",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndianInputStream moved to org.docx4j.org.apache.poi.util.LittleEndianInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.POIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSFileSystem",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.ByteField moved to org.docx4j.org.apache.poi.util.ByteField",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.NoFormatIDException moved to org.docx4j.org.apache.poi.hpsf.NoFormatIDException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.SmallBlockTableWriter moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionHeader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderEvent moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderEvent",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.OPOIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSFileSystem",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionVerifier",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.HeaderBlockWriter moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlockWriter",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.FilteringDirectoryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.FilteringDirectoryNode",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.dev.POIFSViewable moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewable",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BlockWritable moved to org.docx4j.org.apache.poi.poifs.storage.BlockWritable",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hssf.OldExcelFormatException moved to org.docx4j.org.apache.poi.hssf.OldExcelFormatException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionVerifier",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.ClassID moved to org.docx4j.org.apache.poi.hpsf.ClassID",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.Parent moved to org.docx4j.org.apache.poi.poifs.property.Parent",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.CloseIgnoringInputStream moved to org.docx4j.org.apache.poi.util.CloseIgnoringInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.Encryptor moved to org.docx4j.org.apache.poi.poifs.crypt.Encryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BlockList moved to org.docx4j.org.apache.poi.poifs.storage.BlockList",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.ListManagedBlock moved to org.docx4j.org.apache.poi.poifs.storage.ListManagedBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BlockListImpl moved to org.docx4j.org.apache.poi.poifs.storage.BlockListImpl",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.TypeWriter moved to org.docx4j.org.apache.poi.hpsf.TypeWriter",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.DelayableLittleEndianOutput moved to org.docx4j.org.apache.poi.util.DelayableLittleEndianOutput",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.EncryptionInfo moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionInfo",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.nio.ByteArrayBackedDataSource moved to org.docx4j.org.apache.poi.poifs.nio.ByteArrayBackedDataSource",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.NoPropertySetStreamException moved to org.docx4j.org.apache.poi.hpsf.NoPropertySetStreamException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DocumentNode moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentNode",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndianOutput moved to org.docx4j.org.apache.poi.util.LittleEndianOutput",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.EntryUtils moved to org.docx4j.org.apache.poi.poifs.filesystem.EntryUtils",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.IOUtils moved to org.docx4j.org.apache.poi.util.IOUtils",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NPOIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSFileSystem",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.UnexpectedPropertySetTypeException moved to org.docx4j.org.apache.poi.hpsf.UnexpectedPropertySetTypeException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Filetime moved to org.docx4j.org.apache.poi.hpsf.Filetime",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.TypedPropertyValue moved to org.docx4j.org.apache.poi.hpsf.TypedPropertyValue",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.BATManaged moved to org.docx4j.org.apache.poi.poifs.filesystem.BATManaged",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DocumentOutputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentOutputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.agile.EncryptionDocument moved to org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.PropertyFactory moved to org.docx4j.org.apache.poi.poifs.property.PropertyFactory",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.Entry moved to org.docx4j.org.apache.poi.poifs.filesystem.Entry",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NPOIFSStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.standard.StandardDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardDecryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.MutableSection moved to org.docx4j.org.apache.poi.hpsf.MutableSection",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.SummaryInformation moved to org.docx4j.org.apache.poi.hpsf.SummaryInformation",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndianByteArrayOutputStream moved to org.docx4j.org.apache.poi.util.LittleEndianByteArrayOutputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.DocumentSummaryInformation moved to org.docx4j.org.apache.poi.hpsf.DocumentSummaryInformation",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.PngUtils moved to org.docx4j.org.apache.poi.util.PngUtils",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.CodePageUtil moved to org.docx4j.org.apache.poi.util.CodePageUtil",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BigBlock moved to org.docx4j.org.apache.poi.poifs.storage.BigBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.NPropertyTable moved to org.docx4j.org.apache.poi.poifs.property.NPropertyTable",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Vector moved to org.docx4j.org.apache.poi.hpsf.Vector",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.DocumentHelper moved to org.docx4j.org.apache.poi.util.DocumentHelper",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.SpecialPropertySet moved to org.docx4j.org.apache.poi.hpsf.SpecialPropertySet",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.IndirectPropertyName moved to org.docx4j.org.apache.poi.hpsf.IndirectPropertyName",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.VersionedStream moved to org.docx4j.org.apache.poi.hpsf.VersionedStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.Property moved to org.docx4j.org.apache.poi.poifs.property.Property",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.MutablePropertySet moved to org.docx4j.org.apache.poi.hpsf.MutablePropertySet",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.WritingNotSupportedException moved to org.docx4j.org.apache.poi.hpsf.WritingNotSupportedException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Util moved to org.docx4j.org.apache.poi.hpsf.Util",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.HeaderBlock moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Array moved to org.docx4j.org.apache.poi.hpsf.Array",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.PropertyTable moved to org.docx4j.org.apache.poi.poifs.property.PropertyTable",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.EncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionInfoBuilder",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.DocumentBlock moved to org.docx4j.org.apache.poi.poifs.storage.DocumentBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.MissingSectionException moved to org.docx4j.org.apache.poi.hpsf.MissingSectionException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.HexRead moved to org.docx4j.org.apache.poi.util.HexRead",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.BoundedInputStream moved to org.docx4j.org.apache.poi.util.BoundedInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.EncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionVerifier",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.RootProperty moved to org.docx4j.org.apache.poi.poifs.property.RootProperty",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.OfficeXmlFileException moved to org.docx4j.org.apache.poi.poifs.filesystem.OfficeXmlFileException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.IntegerField moved to org.docx4j.org.apache.poi.util.IntegerField",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.FixedField moved to org.docx4j.org.apache.poi.util.FixedField",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.BitField moved to org.docx4j.org.apache.poi.util.BitField",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.ChunkedCipherOutputStream moved to org.docx4j.org.apache.poi.poifs.crypt.ChunkedCipherOutputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.POIFSWriterEvent moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSWriterEvent",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.PropertyBlock moved to org.docx4j.org.apache.poi.poifs.storage.PropertyBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.HexDump moved to org.docx4j.org.apache.poi.util.HexDump",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.Ole10NativeException moved to org.docx4j.org.apache.poi.poifs.filesystem.Ole10NativeException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.OldFileFormatException moved to org.docx4j.org.apache.poi.OldFileFormatException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DocumentDescriptor moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentDescriptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.DocumentProperty moved to org.docx4j.org.apache.poi.poifs.property.DocumentProperty",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Variant moved to org.docx4j.org.apache.poi.hpsf.Variant",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReader moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BlockAllocationTableWriter moved to org.docx4j.org.apache.poi.poifs.storage.BlockAllocationTableWriter",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.TempFileCreationStrategy moved to org.docx4j.org.apache.poi.util.TempFileCreationStrategy",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.GUID moved to org.docx4j.org.apache.poi.hpsf.GUID",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionVerifier",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.dev.POIFSViewer moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewer",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.DataSpaceMapUtils moved to org.docx4j.org.apache.poi.poifs.crypt.DataSpaceMapUtils",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.EncryptedDocumentException moved to org.docx4j.org.apache.poi.EncryptedDocumentException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NotOLE2FileException moved to org.docx4j.org.apache.poi.poifs.filesystem.NotOLE2FileException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LongField moved to org.docx4j.org.apache.poi.util.LongField",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DocumentEntry moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentEntry",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.HPSFException moved to org.docx4j.org.apache.poi.hpsf.HPSFException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.nio.DataSource moved to org.docx4j.org.apache.poi.poifs.nio.DataSource",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.PropertyConstants moved to org.docx4j.org.apache.poi.poifs.property.PropertyConstants",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.ChunkedCipherInputStream moved to org.docx4j.org.apache.poi.poifs.crypt.ChunkedCipherInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.VariantBool moved to org.docx4j.org.apache.poi.hpsf.VariantBool",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.SmallDocumentBlockList moved to org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlockList",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.Child moved to org.docx4j.org.apache.poi.poifs.property.Child",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.RawDataBlock moved to org.docx4j.org.apache.poi.poifs.storage.RawDataBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.UnsupportedFileFormatException moved to org.docx4j.org.apache.poi.UnsupportedFileFormatException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.nio.FileBackedDataSource moved to org.docx4j.org.apache.poi.poifs.nio.FileBackedDataSource",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.UnsupportedVariantTypeException moved to org.docx4j.org.apache.poi.hpsf.UnsupportedVariantTypeException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.SAXHelper moved to org.docx4j.org.apache.poi.util.SAXHelper",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.IntList moved to org.docx4j.org.apache.poi.util.IntList",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.CryptoFunctions moved to org.docx4j.org.apache.poi.poifs.crypt.CryptoFunctions",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.CustomProperty moved to org.docx4j.org.apache.poi.hpsf.CustomProperty",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.dev.POIFSViewEngine moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewEngine",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.HeaderBlockConstants moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlockConstants",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.BitFieldFactory moved to org.docx4j.org.apache.poi.util.BitFieldFactory",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.MarkUnsupportedException moved to org.docx4j.org.apache.poi.hpsf.MarkUnsupportedException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.agile.AgileDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileDecryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionInfoBuilder",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.TempFile moved to org.docx4j.org.apache.poi.util.TempFile",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.NoSingleSectionException moved to org.docx4j.org.apache.poi.hpsf.NoSingleSectionException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.wellknown.PropertyIDMap moved to org.docx4j.org.apache.poi.hpsf.wellknown.PropertyIDMap",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.wellknown.SectionIDMap moved to org.docx4j.org.apache.poi.hpsf.wellknown.SectionIDMap",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.VariantTypeException moved to org.docx4j.org.apache.poi.hpsf.VariantTypeException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DirectoryEntry moved to org.docx4j.org.apache.poi.poifs.filesystem.DirectoryEntry",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.EmptyFileException moved to org.docx4j.org.apache.poi.EmptyFileException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.ClipboardData moved to org.docx4j.org.apache.poi.hpsf.ClipboardData",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderRegistry moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderRegistry",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.IllegalPropertySetDataException moved to org.docx4j.org.apache.poi.hpsf.IllegalPropertySetDataException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndianInput moved to org.docx4j.org.apache.poi.util.LittleEndianInput",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.PropertySetFactory moved to org.docx4j.org.apache.poi.hpsf.PropertySetFactory",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.EntryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.EntryNode",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.property.DirectoryProperty moved to org.docx4j.org.apache.poi.poifs.property.DirectoryProperty",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndian moved to org.docx4j.org.apache.poi.util.LittleEndian",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Currency moved to org.docx4j.org.apache.poi.hpsf.Currency",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NDocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NDocumentInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Date moved to org.docx4j.org.apache.poi.hpsf.Date",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.BlockStore moved to org.docx4j.org.apache.poi.poifs.filesystem.BlockStore",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.POIFSDocumentPath moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSDocumentPath",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BlockAllocationTableReader moved to org.docx4j.org.apache.poi.poifs.storage.BlockAllocationTableReader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.util.LittleEndianOutputStream moved to org.docx4j.org.apache.poi.util.LittleEndianOutputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderListener moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderListener",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Decimal moved to org.docx4j.org.apache.poi.hpsf.Decimal",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Blob moved to org.docx4j.org.apache.poi.hpsf.Blob",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NPOIFSDocument moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSDocument",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.UnicodeString moved to org.docx4j.org.apache.poi.hpsf.UnicodeString",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionHeader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.ODocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.ODocumentInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NPOIFSMiniStore moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSMiniStore",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.OPOIFSDocument moved to org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSDocument",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.DataInputBlock moved to org.docx4j.org.apache.poi.poifs.storage.DataInputBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.VariantSupport moved to org.docx4j.org.apache.poi.hpsf.VariantSupport",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.common.POIFSConstants moved to org.docx4j.org.apache.poi.poifs.common.POIFSConstants",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.NDocumentOutputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NDocumentOutputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.POIFSWriterListener moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSWriterListener",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DirectoryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.DirectoryNode",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.EncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionHeader",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.dev.POIFSLister moved to org.docx4j.org.apache.poi.poifs.dev.POIFSLister",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.HPSFRuntimeException moved to org.docx4j.org.apache.poi.hpsf.HPSFRuntimeException",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.PropertySet moved to org.docx4j.org.apache.poi.hpsf.PropertySet",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.common.POIFSBigBlockSize moved to org.docx4j.org.apache.poi.poifs.common.POIFSBigBlockSize",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.CodePageString moved to org.docx4j.org.apache.poi.hpsf.CodePageString",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.Section moved to org.docx4j.org.apache.poi.hpsf.Section",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.MutableProperty moved to org.docx4j.org.apache.poi.hpsf.MutableProperty",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.filesystem.DocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentInputStream",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BATBlock.BATBlockAndIndex moved to org.docx4j.org.apache.poi.poifs.storage.BATBlock.BATBlockAndIndex",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.hpsf.CustomProperties moved to org.docx4j.org.apache.poi.hpsf.CustomProperties",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.ChainingMode moved to org.docx4j.org.apache.poi.poifs.crypt.ChainingMode",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.CipherAlgorithm moved to org.docx4j.org.apache.poi.poifs.crypt.CipherAlgorithm",
        "comment": "<p>Package-related refactoring</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.CipherProvider moved to org.docx4j.org.apache.poi.poifs.crypt.CipherProvider",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.SmallDocumentBlock moved to org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.storage.BATBlock moved to org.docx4j.org.apache.poi.poifs.storage.BATBlock",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.HashAlgorithm moved to org.docx4j.org.apache.poi.poifs.crypt.HashAlgorithm",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionInfoBuilder",
        "comment": null,
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public addNewEncryption() : com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to public addNewEncryption() : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getEncryption() : com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to public getEncryption() : org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setEncryption(encryption com.microsoft.schemas.office.x2006.encryption.CTEncryption) : void from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to public setEncryption(encryption org.docx4j.com.microsoft.schemas.office.x2006.encryption.CTEncryption) : void from class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public dump(root DirectoryEntry, parent File) : void from class org.apache.poi.poifs.dev.POIFSDump to public dump(root DirectoryEntry, parent File) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSDump",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public displayRawBlocksSummary(data_blocks RawDataBlockList) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public displayRawBlocksSummary(data_blocks RawDataBlockList) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public main(args String[]) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public main(args String[]) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public countBlocks() : int from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public countBlocks() : int from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSBAT() : BlockAllocationTableWriter from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public getSBAT() : BlockAllocationTableWriter from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSBATBlockCount() : int from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public getSBATBlockCount() : int from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setStartBlock(start_block int) : void from class org.apache.poi.poifs.storage.SmallBlockTableWriter to public setStartBlock(start_block int) : void from class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public displayBATReader(batReader BlockAllocationTableReader) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public displayBATReader(type String, batReader BlockAllocationTableReader) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public displayHeader(header_block HeaderBlock) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public displayHeader(header_block HeaderBlock) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public viewFile(filename String) : void from class org.apache.poi.poifs.dev.POIFSHeaderDumper to public viewFile(filename String) : void from class org.docx4j.org.apache.poi.poifs.dev.POIFSHeaderDumper",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public builder : String from class org.apache.poi.poifs.crypt.EncryptionMode to class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public encryptionFlags : int from class org.apache.poi.poifs.crypt.EncryptionMode to class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public versionMajor : int from class org.apache.poi.poifs.crypt.EncryptionMode to class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public versionMinor : int from class org.apache.poi.poifs.crypt.EncryptionMode to class org.docx4j.org.apache.poi.poifs.crypt.EncryptionMode",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package encryption : CTEncryption from class org.apache.poi.poifs.crypt.agile.EncryptionDocument to class org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _big_block_count : int from class org.apache.poi.poifs.storage.SmallBlockTableWriter to class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _root : RootProperty from class org.apache.poi.poifs.storage.SmallBlockTableWriter to class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _sbat : BlockAllocationTableWriter from class org.apache.poi.poifs.storage.SmallBlockTableWriter to class org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter",
        "comment": "it is a move class or sth like that",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 6242
}, {
    "id": 1140131,
    "repository": "https://github.com/Netflix/feign.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/feign.git",
    "sha1": "b2b4085348de32f10903970dded99fdf0376a43c",
    "url": "https://github.com/Netflix/feign/commit/b2b4085348de32f10903970dded99fdf0376a43c",
    "author": "Adrian Cole",
    "time": "7/13/15 1:49 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.BaseContract",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private headersFromAnnotation(targetType Class<?>, data MethodMetadata) : void extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.Default",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public configKey(targetType Class, method Method) : String extracted from public configKey(method Method) : String in class feign.Feign",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public toKeyMethodFormatsAsExpected() : void renamed to public configKeyFormatsAsExpected() : void in class feign.FeignTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.jaxrs.JAXRSContract",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.Contract.Default",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to private headersFromAnnotation(targetType Class, data MethodMetadata) : void in class feign.Contract.Default",
        "comment": "headersFromAnnotation is extraced",
        "validation": "FP ",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public customExpander() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public slashAreEncodedWhenNeeded() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public httpMethods() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public tooManyBodies() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyWithoutParameters() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headersOnMethodAddsContentTypeHeader() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headersOnTypeAddsContentTypeHeader() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public withPathAndURIParam() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyWithTemplate() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.DefaultContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public httpMethods() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public customMethodWithoutPath() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public queryParamsInPathExtract() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public producesAddsAcceptHeader() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public producesNada() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public producesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public consumesAddsContentTypeHeader() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public consumesNada() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public consumesEmpty() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public bodyParamIsGeneric() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public tooManyBodies() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyPathOnType() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyPathParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathParamWithSpaces() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public regexPathOnMethod() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public withPathAndURIParams() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathAndQueryParams() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyQueryParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public formParamsDoesNotSetBodyType() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyFormParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public headerParamsParseIntoIndexToName() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public emptyHeaderParam() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathsWithoutSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathsWithSomeSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public pathsWithSomeOtherSlashesParseCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public classWithRootPathParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private parseAndValidateMetadata(targetType Class, method String, parameterTypes Class[]) : MethodMetadata extracted from public classPathWithTrailingSlashParsesCorrectly() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private parsePathOnTypeMethod(name String) : MethodMetadata inlined to public parsePathMethod() : void in class feign.jaxrs.JAXRSContractTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 617
}, {
    "id": 1140269,
    "repository": "https://github.com/geometer/FBReaderJ.git",
    "sha1": "42e0649f82779ecd48bff6448924fc7dc2534554",
    "url": "https://github.com/geometer/FBReaderJ/commit/42e0649f82779ecd48bff6448924fc7dc2534554",
    "author": "Nikolay Pultsin",
    "time": "7/13/15 11:13 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private allTopLevelNodes() : List<MenuNode> extracted from public topLevelNodes() : List<MenuNode> in class org.geometerplus.android.fbreader.MenuData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public nodeOption(code String) : ZLBooleanOption extracted from public topLevelNodes() : List in class org.geometerplus.android.fbreader.MenuData",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1636
}, {
    "id": 1140273,
    "repository": "https://github.com/Activiti/Activiti.git",
    "sha1": "ca7d0c3b33a0863bed04c77932b9ef6b1317f34e",
    "url": "https://github.com/Activiti/Activiti/commit/ca7d0c3b33a0863bed04c77932b9ef6b1317f34e",
    "author": "Joram Barrez",
    "time": "7/14/15 8:59 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.activiti.engine.impl.persistence.entity.UserEntityTest moved to org.activiti.engine.test.api.identity.UserEntityTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1384
}, {
    "id": 1140275,
    "repository": "https://github.com/Activiti/Activiti.git",
    "sha1": "a70ca1d9ad2ea07b19c5e1f9540c809d7a12d3fb",
    "url": "https://github.com/Activiti/Activiti/commit/a70ca1d9ad2ea07b19c5e1f9540c809d7a12d3fb",
    "author": "Joram Barrez",
    "time": "7/14/15 8:27 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected flushPersistentObjects(persistentObjectClass Class<? extends PersistentObject>, persistentObjectsToInsert List<PersistentObject>) : void extracted from protected flushInserts() : void in class org.activiti.engine.impl.db.DbSqlSession",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2159
}, {
    "id": 1140316,
    "repository": "https://github.com/aws/aws-sdk-java.git",
    "sha1": "14593c6379445f260baeb5287f618758da6d9952",
    "url": "https://github.com/aws/aws-sdk-java/commit/14593c6379445f260baeb5287f618758da6d9952",
    "author": "David Murray",
    "time": "7/13/15 3:02 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.DeleteRepositoryResult moved to com.amazonaws.services.codecommit.model.DeleteRepositoryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidRepositoryNameException moved to com.amazonaws.services.codecommit.model.InvalidRepositoryNameException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.UpdateRepositoryNameRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.UpdateRepositoryNameRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryLimitExceededException moved to com.amazonaws.services.codecommit.model.RepositoryLimitExceededException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.ListBranchesResult moved to com.amazonaws.services.codecommit.model.ListBranchesResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.GetBranchResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.GetBranchResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.AWSCodeCommitAsyncClient moved to com.amazonaws.services.codecommit.AWSCodeCommitAsyncClient",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryDoesNotExistException moved to com.amazonaws.services.codecommit.model.RepositoryDoesNotExistException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.RepositoryNameIdPairJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.RepositoryNameIdPairJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidCommitIdException moved to com.amazonaws.services.codecommit.model.InvalidCommitIdException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.BranchInfoJsonMarshaller moved to com.amazonaws.services.codecommit.model.transform.BranchInfoJsonMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.CreateRepositoryResult moved to com.amazonaws.services.codecommit.model.CreateRepositoryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.CommitDoesNotExistException moved to com.amazonaws.services.codecommit.model.CommitDoesNotExistException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.GetRepositoryRequest moved to com.amazonaws.services.codecommit.model.GetRepositoryRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidOrderException moved to com.amazonaws.services.codecommit.model.InvalidOrderException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.UpdateDefaultBranchRequest moved to com.amazonaws.services.codecommit.model.UpdateDefaultBranchRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.BatchGetRepositoriesResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.BatchGetRepositoriesResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.DeleteRepositoryRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.DeleteRepositoryRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.EncryptionKeyUnavailableException moved to com.amazonaws.services.codecommit.model.EncryptionKeyUnavailableException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.GetRepositoryResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.GetRepositoryResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.EncryptionKeyNotFoundException moved to com.amazonaws.services.codecommit.model.EncryptionKeyNotFoundException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.ListBranchesRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.ListBranchesRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.OrderEnum moved to com.amazonaws.services.codecommit.model.OrderEnum",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.BatchGetRepositoriesRequest moved to com.amazonaws.services.codecommit.model.BatchGetRepositoriesRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.MaximumRepositoryNamesExceededException moved to com.amazonaws.services.codecommit.model.MaximumRepositoryNamesExceededException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.SortByEnum moved to com.amazonaws.services.codecommit.model.SortByEnum",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.AWSCodeCommitClient moved to com.amazonaws.services.codecommit.AWSCodeCommitClient",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.RepositoryMetadataJsonMarshaller moved to com.amazonaws.services.codecommit.model.transform.RepositoryMetadataJsonMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryMetadata moved to com.amazonaws.services.codecommit.model.RepositoryMetadata",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.ListBranchesRequest moved to com.amazonaws.services.codecommit.model.ListBranchesRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.DeleteRepositoryResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.DeleteRepositoryResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.GetBranchRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.GetBranchRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.ListRepositoriesResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.ListRepositoriesResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.BranchInfo moved to com.amazonaws.services.codecommit.model.BranchInfo",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryNameIdPair moved to com.amazonaws.services.codecommit.model.RepositoryNameIdPair",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidContinuationTokenException moved to com.amazonaws.services.codecommit.model.InvalidContinuationTokenException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.GetBranchRequest moved to com.amazonaws.services.codecommit.model.GetBranchRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidSortByException moved to com.amazonaws.services.codecommit.model.InvalidSortByException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.GetRepositoryRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.GetRepositoryRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryNamesRequiredException moved to com.amazonaws.services.codecommit.model.RepositoryNamesRequiredException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.BranchDoesNotExistException moved to com.amazonaws.services.codecommit.model.BranchDoesNotExistException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.EncryptionKeyAccessDeniedException moved to com.amazonaws.services.codecommit.model.EncryptionKeyAccessDeniedException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.EncryptionIntegrityChecksFailedException moved to com.amazonaws.services.codecommit.model.EncryptionIntegrityChecksFailedException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.AWSCodeCommit moved to com.amazonaws.services.codecommit.AWSCodeCommit",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.CreateRepositoryRequest moved to com.amazonaws.services.codecommit.model.CreateRepositoryRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.CommitIdRequiredException moved to com.amazonaws.services.codecommit.model.CommitIdRequiredException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.UpdateRepositoryNameRequest moved to com.amazonaws.services.codecommit.model.UpdateRepositoryNameRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidRepositoryDescriptionException moved to com.amazonaws.services.codecommit.model.InvalidRepositoryDescriptionException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.DeleteRepositoryRequest moved to com.amazonaws.services.codecommit.model.DeleteRepositoryRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.AWSCodeCommitAsync moved to com.amazonaws.services.codecommit.AWSCodeCommitAsync",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryNameRequiredException moved to com.amazonaws.services.codecommit.model.RepositoryNameRequiredException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.ListRepositoriesRequest moved to com.amazonaws.services.codecommit.model.ListRepositoriesRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.BranchNameRequiredException moved to com.amazonaws.services.codecommit.model.BranchNameRequiredException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.RepositoryNameIdPairJsonMarshaller moved to com.amazonaws.services.codecommit.model.transform.RepositoryNameIdPairJsonMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.BatchGetRepositoriesResult moved to com.amazonaws.services.codecommit.model.BatchGetRepositoriesResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.BranchInfoJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.BranchInfoJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.CreateRepositoryRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.CreateRepositoryRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.CreateBranchRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.CreateBranchRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.UpdateDefaultBranchRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.UpdateDefaultBranchRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.GetRepositoryResult moved to com.amazonaws.services.codecommit.model.GetRepositoryResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.RepositoryNameExistsException moved to com.amazonaws.services.codecommit.model.RepositoryNameExistsException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.GetBranchResult moved to com.amazonaws.services.codecommit.model.GetBranchResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.CreateBranchRequest moved to com.amazonaws.services.codecommit.model.CreateBranchRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.ListRepositoriesRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.ListRepositoriesRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.BatchGetRepositoriesRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.BatchGetRepositoriesRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.CreateRepositoryResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.CreateRepositoryResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.BranchNameExistsException moved to com.amazonaws.services.codecommit.model.BranchNameExistsException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.UpdateRepositoryDescriptionRequestMarshaller moved to com.amazonaws.services.codecommit.model.transform.UpdateRepositoryDescriptionRequestMarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.UpdateRepositoryDescriptionRequest moved to com.amazonaws.services.codecommit.model.UpdateRepositoryDescriptionRequest",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.ListBranchesResultJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.ListBranchesResultJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.EncryptionKeyDisabledException moved to com.amazonaws.services.codecommit.model.EncryptionKeyDisabledException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.InvalidBranchNameException moved to com.amazonaws.services.codecommit.model.InvalidBranchNameException",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.ListRepositoriesResult moved to com.amazonaws.services.codecommit.model.ListRepositoriesResult",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.amazonaws.service.codecommit.model.transform.RepositoryMetadataJsonUnmarshaller moved to com.amazonaws.services.codecommit.model.transform.RepositoryMetadataJsonUnmarshaller",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1140320,
    "repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
    "sha1": "9687048f76519fc89b4151cbe2841bbba61a401d",
    "url": "https://github.com/BroadleafCommerce/BroadleafCommerce/commit/9687048f76519fc89b4151cbe2841bbba61a401d",
    "author": "Jerry Ocanas",
    "time": "7/13/15 11:12 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected getEntityForm(info DynamicEntityFormInfo, dynamicFormOverride EntityForm) : EntityForm extracted from protected getBlankDynamicFieldTemplateForm(info DynamicEntityFormInfo, dynamicFormOverride EntityForm) : EntityForm in class org.broadleafcommerce.openadmin.web.controller.AdminAbstractController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1637
}, {
    "id": 1140435,
    "repository": "https://github.com/droolsjbpm/drools.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/drools.git",
    "sha1": "7ffc62aa554f5884064b81ee80078e35e3833006",
    "url": "https://github.com/droolsjbpm/drools/commit/7ffc62aa554f5884064b81ee80078e35e3833006",
    "author": "Maciej Swiderski",
    "time": "7/14/15 6:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected addInterceptor(interceptor Interceptor, store boolean) : void extracted from public addInterceptor(interceptor Interceptor) : void in class org.drools.persistence.SingleSessionCommandService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 7284
}, {
    "id": 1140505,
    "repository": "https://github.com/robovm/robovm.git",
    "sha1": "7837d0baf1aef45340eec699516a8c3a22aeb553",
    "url": "https://github.com/robovm/robovm/commit/7837d0baf1aef45340eec699516a8c3a22aeb553",
    "author": "Alex Itelman",
    "time": "7/14/15 5:28 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private signFrameworks(appDir File, getTaskAllow boolean) : void extracted from protected prepareLaunch(appDir File) : void in class org.robovm.compiler.target.ios.IOSTarget",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4067
}, {
    "id": 1140621,
    "repository": "https://github.com/springfox/springfox.git",
    "sha1": "2307ff3a4ca367aaf64088b7b1e1bbf212c9bf3a",
    "url": "https://github.com/springfox/springfox/commit/2307ff3a4ca367aaf64088b7b1e1bbf212c9bf3a",
    "author": "Dilip Krishnan",
    "time": "7/14/15 1:47 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class springfox.documentation.spring.web.AbstractPathProvider moved to springfox.documentation.spring.web.paths.AbstractPathProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class springfox.documentation.spring.web.RelativePathProvider moved to springfox.documentation.spring.web.paths.RelativePathProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class springfox.documentation.spring.web.Paths moved to springfox.documentation.spring.web.paths.Paths",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1140686,
    "repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
    "sha1": "1b21ba4bcea986988d4bbd578e3bb9a20ec69606",
    "url": "https://github.com/wordpress-mobile/WordPress-Android/commit/1b21ba4bcea986988d4bbd578e3bb9a20ec69606",
    "author": "Tony Rankin",
    "time": "7/14/15 2:27 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private privacyStringForValue(value int) : String extracted from public onPreferenceChange(preference Preference, newValue Object) : boolean in class org.wordpress.android.ui.prefs.SiteSettingsFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private changeEditTextPreferenceValue(pref EditTextPreference, newValue String) : void extracted from public onPreferenceChange(preference Preference, newValue Object) : boolean in class org.wordpress.android.ui.prefs.SiteSettingsFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private applySettings() : void renamed to private applyChanges() : void in class org.wordpress.android.ui.prefs.SiteSettingsFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getLanguageString(languagueCode String) : String from class org.wordpress.android.ui.prefs.SiteSettingsFragment to public getLanguageString(languagueCode String, displayLocale Locale) : String from class org.wordpress.android.util.StringUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private changeLanguageValue(newValue String) : void extracted from public onPreferenceChange(preference Preference, newValue Object) : boolean in class org.wordpress.android.ui.prefs.SiteSettingsFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private fetchRemoteData() : void extracted from public onCreate(savedInstanceState Bundle) : void in class org.wordpress.android.ui.prefs.SiteSettingsFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 1235
}, {
    "id": 1140896,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "619a6012da868d0d42d9628460f2264effe9bdba",
    "url": "https://github.com/JetBrains/intellij-community/commit/619a6012da868d0d42d9628460f2264effe9bdba",
    "author": "peter",
    "time": "7/15/15 2:24 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fillWithScopeExpansion(elements Set<Object>, pattern String) : boolean extracted from public computeInReadAction(indicator ProgressIndicator) : void in class com.intellij.ide.util.gotoByName.ChooseByNameBase.CalcElementsThread",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 16971
}, {
    "id": 1140931,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "10f769a60c7c7b73982e978959d381df487bbe2d",
    "url": "https://github.com/JetBrains/intellij-community/commit/10f769a60c7c7b73982e978959d381df487bbe2d",
    "author": "nik",
    "time": "7/15/15 11:13 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private getJUnit4JarPaths() : List<String> from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix to public getJUnit4JarPaths() : List<String> from class com.intellij.openapi.projectRoots.ex.JavaSdkUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getLibraryPaths() : List<String> extracted from public getLibraryPath() : String in class com.intellij.execution.junit.JUnit4Framework",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 18541
}, {
    "id": 1140956,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
    "url": "https://github.com/JetBrains/intellij-community/commit/7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
    "author": "nik",
    "time": "7/15/15 8:49 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public addJarsToRoots(jarPaths List<String>, libraryName String, module Module, location PsiElement) : void extracted from public addJarToRoots(libPath String, module Module, location PsiElement) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private convertToLibraryRoot(libPath String) : VirtualFile renamed to private refreshAndConvertToUrl(jarPath String) : String in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": "<p>Nikos: The return type changed from String to VirtualFile. Some additional code was added to convert the String to VirtualFile object</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addJarsToRoots(jarPaths List, libraryName String, module Module, location PsiElement) : void extracted from public addJUnit4Library(inTests boolean, currentModule Module) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addJarsToRootsAndImportClass(jarPaths List, libraryName String, currentModule Module, editor Editor, reference PsiReference, className String) : void extracted from public registerFixes(registrar QuickFixActionRegistrar, reference PsiReference) : List in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": "<p>I believe it is a false positive</p><p><span class='blob-code-inner'>Nikos: addJarsToRootsAndImportClass() has been extracted from <span class='pl-en'>addBundledJarToRoots</span>(), which is the previously called method, and the call has been updated to addJarsToRootsAndImportClass(), which is the newly extracted method<br /></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addJarsToRootsAndImportClass(jarPaths List, libraryName String, currentModule Module, editor Editor, reference PsiReference, className String) : void extracted from public invoke(project Project, editor Editor, file PsiFile) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix$1",
        "comment": "<p>I believe it is a false positive</p><p><span class='blob-code-inner'>Nikos: addJarsToRootsAndImportClass() has been extracted from <span class='pl-en'>addBundledJarToRoots</span>(), which is the previously called method, and the call has been updated to addJarsToRootsAndImportClass(), which is the newly extracted method</span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addJarsToRootsAndImportClass(jarPaths List, libraryName String, currentModule Module, editor Editor, reference PsiReference, className String) : void extracted from public addBundledJarToRoots(project Project, editor Editor, currentModule Module, reference PsiReference, className String, libVirtFile String) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getJUnit4JarPaths() : List extracted from public registerFixes(registrar QuickFixActionRegistrar, reference PsiReference) : List in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": "<p>I believe it is a false positive</p><p>Nikos: <span class='blob-code-inner'><span class='pl-en'>getJUnit4JarPaths</span>()</span> has been extracted from <span class='blob-code-inner'><span class='pl-en'>addJUnit4Library</span>(</span>), which is the previously called method, <span class='blob-code-inner'>and the call has been updated to <span class='pl-en'>getJUnit4JarPaths</span>(), which is the newly extracted method</span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getJUnit4JarPaths() : List extracted from public addJUnit4Library(inTests boolean, currentModule Module) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getJUnit4JarPaths() : List extracted from public invoke(project Project, editor Editor, file PsiFile) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix$1",
        "comment": "<p>I believe it is a false positive</p><p>Nikos: getJUnit4JarPaths() has been extracted from addJUnit4Library(), which is the previously called method, and the call has been updated to getJUnit4JarPaths(), which is the newly extracted method</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }],
    "refDiffExecutionTime": 36330
}, {
    "id": 1140981,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
    "url": "https://github.com/JetBrains/intellij-community/commit/a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
    "author": "Anton Makeev",
    "time": "7/14/15 4:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean, resolveSymlinksIfNecessary boolean) : String extracted from private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean) : String in class com.intellij.openapi.util.io.FileUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 17762
}, {
    "id": 1140982,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "9f7de200c9aef900596b09327a52d33241a68d9c",
    "url": "https://github.com/JetBrains/intellij-community/commit/9f7de200c9aef900596b09327a52d33241a68d9c",
    "author": "Roman Shevchenko",
    "time": "7/14/15 4:07 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isKeywordAny(builder PsiBuilder) : boolean extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 37767
}, {
    "id": 1141018,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "106d1d51754f454fa673976665e41f463316e084",
    "url": "https://github.com/JetBrains/intellij-community/commit/106d1d51754f454fa673976665e41f463316e084",
    "author": "Roman Shevchenko",
    "time": "7/14/15 10:55 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isKeywordAny(builder PsiBuilder) : boolean extracted from public parseTypeParameter(builder PsiBuilder) : PsiBuilder.Marker in class com.intellij.lang.java.parser.ReferenceParser",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 18156
}, {
    "id": 1141077,
    "repository": "https://github.com/spring-projects/spring-security.git",
    "sha1": "fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "url": "https://github.com/spring-projects/spring-security/commit/fcc9a34356817d93c24b5ccf3107ec234a28b136",
    "author": "Rob Winch",
    "time": "7/14/15 4:49 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getWriter() : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getWriter() : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendError(sc int, msg String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int, msg String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendRedirect(location String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendRedirect(location String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public flushBuffer() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public flushBuffer() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "It is a extract superclass",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public checkError() : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public checkError() : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public append(c char) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(c char) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public disableOnResponseCommitted() : void extracted from public disableSaveOnResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": "<p>Extract and Move to parent class</p><p>Extract and Move to class <span class='blob-code-inner'><span class='pl-en'>OnCommittedResponseWrapper (superType of&nbsp; SaveContextOnUpdateOrErrorResponseWrapper)<br /></span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.security.web.context.OnCommittedResponseWrapper from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendError(sc int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "new---",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4803
}, {
    "id": 1141078,
    "repository": "https://github.com/spring-projects/spring-security.git",
    "sha1": "08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "url": "https://github.com/spring-projects/spring-security/commit/08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
    "author": "Rob Winch",
    "time": "7/14/15 4:48 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private doSaveContext() : void renamed to protected onResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getOutputStream() : ServletOutputStream from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getWriter() : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public getWriter() : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendError(sc int, msg String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendError(sc int, msg String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public sendRedirect(location String) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public sendRedirect(location String) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public flushBuffer() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper to public flushBuffer() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper",
        "comment": "it is a extract super class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public checkError() : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public checkError() : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public format(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public printf(l Locale, format String, args Object[]) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public equals(obj Object) : boolean from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public equals(obj Object) : boolean from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public hashCode() : int from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public toString() : String from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public write(buf char[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public write(b byte[], off int, len int) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public append(c char) : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public append(c char) : PrintWriter from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public print(b boolean) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public print(b boolean) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public close() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public close() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public flush() : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public flush() : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "the method existed in the target class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public println(d double) : void from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to public println(d double) : void from class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public disableOnResponseCommitted() : void extracted from public disableSaveOnResponseCommitted() : void in class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": "<p>Extract and Move to the inner class</p><p>Extract and move to super class actually</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : PrintWriter from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delegate : ServletOutputStream from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream to class org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream",
        "comment": "It is a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.springframework.security.web.context.OnCommittedResponseWrapper from class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 764
}, {
    "id": 1141149,
    "repository": "https://github.com/facebook/presto.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/presto.git",
    "sha1": "cb2deceea993128c22710b0f64f1b755c9d176f7",
    "url": "https://github.com/facebook/presto/commit/cb2deceea993128c22710b0f64f1b755c9d176f7",
    "author": "yuananf",
    "time": "7/14/15 8:33 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private flipComparison(type ComparisonExpression.Type) : ComparisonExpression.Type from class com.facebook.presto.sql.planner.RelationPlanner to public flipComparison(type ComparisonExpression.Type) : ComparisonExpression.Type from class com.facebook.presto.sql.ExpressionUtils",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1711
}, {
    "id": 1141185,
    "repository": "https://github.com/plutext/docx4j.git",
    "sha1": "1ba361438ab4d7f6a0305428ba40ba62e2e6ff3c",
    "url": "https://github.com/plutext/docx4j/commit/1ba361438ab4d7f6a0305428ba40ba62e2e6ff3c",
    "author": "Jason Harrop",
    "time": "7/15/15 8:55 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.docx4j.schemas.microsoft.com.office.word_2006 to org.docx4j.com.microsoft.schemas.office.word.x2006",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.docx4j.schemas.microsoft.com.office.word_2006.wordml.CTDocEvents moved to org.docx4j.com.microsoft.schemas.office.word.x2006.wordml.CTDocEvents",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.docx4j.schemas.microsoft.com.office.word_2006.wordml.CTMcd moved to org.docx4j.com.microsoft.schemas.office.word.x2006.wordml.CTMcd",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.docx4j.schemas.microsoft.com.office.word_2006.wordml.CTMcds moved to org.docx4j.com.microsoft.schemas.office.word.x2006.wordml.CTMcds",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.docx4j.schemas.microsoft.com.office.word_2006.wordml.CTVbaSuppData moved to org.docx4j.com.microsoft.schemas.office.word.x2006.wordml.CTVbaSuppData",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.docx4j.schemas.microsoft.com.office.word_2006.wordml.ObjectFactory moved to org.docx4j.com.microsoft.schemas.office.word.x2006.wordml.ObjectFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1725
}, {
    "id": 1141203,
    "repository": "https://github.com/zeromq/jeromq.git",
    "sha1": "02d3fa171d02c9d82c7bdcaeb739f47d0c0006a0",
    "url": "https://github.com/zeromq/jeromq/commit/02d3fa171d02c9d82c7bdcaeb739f47d0c0006a0",
    "author": "Min(Dongmin Yu)",
    "time": "7/14/15 4:59 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private makeFdPair() : void inlined to public Signaler() in class zmq.Signaler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1141296,
    "repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
    "sha1": "3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "url": "https://github.com/AdoptOpenJDK/jitwatch/commit/3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
    "author": "Chris Newland",
    "time": "7/14/15 7:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private visitTagParse(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private visitTagEliminateAllocation(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private visitTagEliminateLock(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 686
}, {
    "id": 1141310,
    "repository": "https://github.com/antlr/antlr4.git",
    "sha1": "b395127e733b33c27f344695ebf155ecf5edeeab",
    "url": "https://github.com/antlr/antlr4/commit/b395127e733b33c27f344695ebf155ecf5edeeab",
    "author": "Terence Parr",
    "time": "7/14/15 6:29 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.TreePostScriptGenerator moved to org.antlr.v4.gui.TreePostScriptGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.TreeTextProvider moved to org.antlr.v4.gui.TreeTextProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.TreeLayoutAdaptor moved to org.antlr.v4.gui.TreeLayoutAdaptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.BasicFontMetrics moved to org.antlr.v4.gui.BasicFontMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.TreeViewer moved to org.antlr.v4.gui.TreeViewer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.SystemFontMetrics moved to org.antlr.v4.gui.SystemFontMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.tree.gui.PostScriptDocument moved to org.antlr.v4.gui.PostScriptDocument",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public toStringTree(t Tree, nodeTextProvider TreeTextProvider) : String inlined to public toStringTree(t Tree, ruleNames List<String>) : String in class org.antlr.v4.runtime.tree.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.misc.GraphicsSupport moved to org.antlr.v4.gui.GraphicsSupport",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.misc.JFileChooserConfirmOverwrite moved to org.antlr.v4.gui.JFileChooserConfirmOverwrite",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.antlr.v4.runtime.misc.TestRig moved to org.antlr.v4.gui.TestRig",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getPS(t Tree, ruleNames List) : String from class org.antlr.v4.runtime.tree.Trees to public getPS(t Tree, ruleNames List) : String from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toStringTree(t Tree, nodeTextProvider TreeTextProvider) : String from class org.antlr.v4.runtime.tree.Trees to public toStringTree(t Tree, nodeTextProvider TreeTextProvider) : String from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public writePS(t Tree, ruleNames List, fileName String) : void from class org.antlr.v4.runtime.tree.Trees to public writePS(t Tree, ruleNames List, fileName String) : void from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public save(parser Parser, fileName String, fontName String, fontSize int) : void from class org.antlr.v4.runtime.RuleContext to public save(t Tree, parser Parser, fileName String, fontName String, fontSize int) : void from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public save(parser Parser, fileName String) : void from class org.antlr.v4.runtime.RuleContext to public save(t Tree, parser Parser, fileName String) : void from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public writePS(t Tree, ruleNames List, fileName String, fontName String, fontSize int) : void from class org.antlr.v4.runtime.tree.Trees to public writePS(t Tree, ruleNames List, fileName String, fontName String, fontSize int) : void from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public inspect(ruleNames List) : Future from class org.antlr.v4.runtime.RuleContext to public inspect(t Tree, ruleNames List) : Future from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPS(t Tree, ruleNames List, fontName String, fontSize int) : String from class org.antlr.v4.runtime.tree.Trees to public getPS(t Tree, ruleNames List, fontName String, fontSize int) : String from class org.antlr.v4.gui.Trees",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public inspect(parser Parser) : Future from class org.antlr.v4.runtime.RuleContext to public inspect(t Tree, parser Parser) : Future from class org.antlr.v4.gui.Trees",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2828
}, {
    "id": 1141324,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "url": "https://github.com/facebook/buck/commit/52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
    "author": "Shenwei Liu",
    "time": "7/14/15 9:46 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createSymLinkSdks(sdks Iterable<String>, root Path, version String) : void extracted from private createSymLinkIosSdks(root Path, version String) : void in class com.facebook.buck.apple.AppleSdkDiscoveryTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public simulatorPlatformSetsLinkerFlags() : void renamed to public iphoneOSSimulatorPlatformSetsLinkerFlags() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public appleSdkPathsBuiltFromDirectory() : void renamed to public iphoneOSSdkPathsBuiltFromDirectory() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2947
}, {
    "id": 1141343,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "url": "https://github.com/facebook/buck/commit/8184a32a019b2ed956e8f24c18cb49a266af47bf",
    "author": "Shenwei Liu",
    "time": "7/14/15 12:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable<TargetNode<?>>) : void extracted from private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void in class com.facebook.buck.apple.ProjectGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getDestination(targetNode TargetNode<?>) : Optional<PBXCopyFilesBuildPhase.Destination> renamed to private getDestinationSpec(targetNode TargetNode<?>) : Optional<CopyFilePhaseDestinationSpec> in class com.facebook.buck.apple.ProjectGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4819
}, {
    "id": 1141428,
    "repository": "https://github.com/linkedin/rest.li.git",
    "sha1": "ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "url": "https://github.com/linkedin/rest.li/commit/ec5ea36faa3dd74585bb339beabdba6149ed63be",
    "author": "Erluo Li",
    "time": "7/14/15 1:26 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private buildErrorResponse(result RestLiServiceException, errorResponseFormat ErrorResponseFormat) : ErrorResponse extracted from public buildErrorResponse(result RestLiServiceException) : ErrorResponse in class com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getAugmentedRestLiResponseData() : AugmentedRestLiResponseData renamed to public getRestLiResponseEnvelope() : RestLiResponseEnvelope in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setAugmentedRestLiResponseData(data AugmentedRestLiResponseData) : void renamed to public setRestLiResponseEnvelope(data RestLiResponseEnvelope) : void in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getCollectionResponseCustomMetadata() : RecordTemplate from class com.linkedin.restli.internal.server.AugmentedRestLiResponseData to public getCollectionResponseCustomMetadata() : RecordTemplate from class com.linkedin.restli.internal.server.response.CollectionResponseEnvelope",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getHeaders() : Map from class com.linkedin.restli.internal.server.AugmentedRestLiResponseData to public getHeaders() : Map from class com.linkedin.restli.internal.server.RestLiResponseEnvelope",
        "comment": "<p>Looking at the usages, this is a clear rename class in my opinion: AugmentedRestLiResponseData to RestLiResponseEnvelope</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public fromMethodType(type ResourceMethod) : ResponseType from class com.linkedin.restli.internal.server.AugmentedRestLiResponseData.ResponseType to public fromMethodType(type ResourceMethod) : ResponseType from class com.linkedin.restli.internal.server.ResponseType",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public hasOverridingErrorResponseFormat() : boolean extracted from public buildErrorResponse(result RestLiServiceException) : ErrorResponse in class com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Inline Method",
        "description": "Inline Method package populateErrors(serviceErrors Map, routingResult RoutingResult, builder ErrorResponseBuilder) : Map inlined to public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map) : RestLiResponseEnvelope in class com.linkedin.restli.internal.server.methods.response.BatchUpdateResponseBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method package populateErrors(serviceErrors Map, routingResult RoutingResult, builder ErrorResponseBuilder) : Map inlined to public buildRestLiResponseData(request RestRequest, routingResult RoutingResult, result Object, headers Map) : RestLiResponseEnvelope in class com.linkedin.restli.internal.server.methods.response.BatchGetResponseBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _headers : Map from class com.linkedin.restli.internal.server.AugmentedRestLiResponseData to class com.linkedin.restli.internal.server.RestLiResponseEnvelope",
        "comment": "<p>Same as 2762</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _status : HttpStatus from class com.linkedin.restli.internal.server.AugmentedRestLiResponseData to class com.linkedin.restli.internal.server.RestLiResponseEnvelope",
        "comment": "<p>Same as 2762</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private _collectionResponseCustomMetadata : RecordTemplate from class com.linkedin.restli.internal.server.AugmentedRestLiResponseData to class com.linkedin.restli.internal.server.response.CollectionResponseEnvelope",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2657
}, {
    "id": 1141707,
    "repository": "https://github.com/vaadin/vaadin.git",
    "sha1": "0f9d0b0bf1cd5fb58f47f22bd6d52a9fac31c530",
    "url": "https://github.com/vaadin/vaadin/commit/0f9d0b0bf1cd5fb58f47f22bd6d52a9fac31c530",
    "author": "Johannes Dahlström",
    "time": "7/15/15 5:41 AM",
    "error": true,
    "ignore": true,
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getVisibleFrozenColumnCount() : int extracted from private updateFrozenColumns() : void in class com.vaadin.client.widgets.Grid",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected createGrid(container PersonContainer) : Grid extracted from protected setup(request VaadinRequest) : void in class com.vaadin.tests.components.grid.GridEditorUI",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4421
}, {
    "id": 1142116,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "url": "https://github.com/infinispan/infinispan/commit/8f446b6ddf540e1b1fefca34dd10f45ba7256095",
    "author": "Tristan Tarrant",
    "time": "7/14/15 4:06 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.subsystem.ClusteringSubsystemTest moved to org.infinispan.server.commons.subsystem.ClusteringSubsystemTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ServiceContainerHelper moved to org.infinispan.server.commons.msc.ServiceContainerHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove renamed to org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.concurrent.ManagedExecutorService moved to org.infinispan.server.commons.concurrent.ManagedExecutorService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.concurrent.ManagedScheduledExecutorService moved to org.infinispan.server.commons.concurrent.ManagedScheduledExecutorService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ManagedSocketFactory moved to org.infinispan.server.jgroups.ManagedSocketFactory",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ManagedSocketFactoryTest moved to org.infinispan.server.jgroups.ManagedSocketFactoryTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ProtocolDefaults moved to org.infinispan.server.jgroups.ProtocolDefaults",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.SaslClientCallbackHandler moved to org.infinispan.server.jgroups.security.SaslClientCallbackHandler",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.RealmAuthorizationCallbackHandler moved to org.infinispan.server.jgroups.security.RealmAuthorizationCallbackHandler",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.LogFactory moved to org.infinispan.server.jgroups.LogFactory",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService moved to org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0 moved to org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.TransportConfiguration.Topology moved to org.infinispan.server.jgroups.spi.TransportConfiguration.Topology",
        "comment": "<p>This should be FP because RefDiff did not find the parent refactoring (move class&nbsp;TransportConfiguration&nbsp;due to rename package)</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private parseRemoteSite(reader XMLExtendedStreamReader, relayAddress PathAddress, operations List) : void renamed to private parseChannel(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations Map) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private parseProtocol(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void renamed to private parseStacks(reader XMLExtendedStreamReader, address PathAddress, operations Map) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": "Both method name exist in both revisions",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private parseProperty(reader XMLExtendedStreamReader, address PathAddress, operations List) : void renamed to private parseFork(reader XMLExtendedStreamReader, channelAddress PathAddress, operations Map) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": "The parseProperty exists in the target revision although it changed a lot. Since the callers of the method, call it in the target revision not the parseFork we can say it is a TP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private parseStack(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations List) : void renamed to private parseChannels(reader XMLExtendedStreamReader, address PathAddress, operations Map) : void in class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getProtocolStackConfiguration() : ProtocolStackConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory to public getProtocolStackConfiguration() : ProtocolStackConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getProtocolStackString() : String from class org.jboss.as.clustering.jgroups.JChannelFactory to public getProtocolStackString() : String from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private init(transport TP) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private init(transport TP) : void from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List) : void from class org.jboss.as.clustering.jgroups.subsystem.AddStepHandler to protected performRuntime(context OperationContext, operation ModelNode, resource Resource) : void from class org.infinispan.server.commons.controller.ReloadRequiredAddStepHandler",
        "comment": "It is a move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getValue() : Channel from class org.jboss.as.clustering.jgroups.subsystem.ChannelService to public getValue() : Channel from class org.infinispan.server.jgroups.spi.service.ChannelBuilder",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getModelValidationConfiguration() : ValidationConfiguration from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTest to protected getModelValidationConfiguration() : ValidationConfiguration from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
        "comment": "<p>This is a getter method which return same type for both classes as both implement same class</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getModelValidationConfiguration() : ValidationConfiguration from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to protected getModelValidationConfiguration() : ValidationConfiguration from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
        "comment": "This is a getter method which return same type for both classes as both implement same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getProperties(protocol String) : Map from class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService.Defaults to public getProperties(protocol String) : Map from class org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
        "comment": "<p>The original class is removed but the map attribute and the corresponding method still exists in the moved/renamed class (see&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2786)</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to public getName() : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to public getName() : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getProtocols() : List from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to public getProtocols() : List from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getSiteName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Relay to public getSiteName() : String from class org.infinispan.server.jgroups.subsystem.RelayConfigurationBuilder",
        "comment": "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.RemoteSite to public getName() : String from class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "This should be FP. original class is removed and the target is created in the new revision. both class extend the same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getClusterRole() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to public getClusterRole() : String from class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
        "comment": "This should be FP. original class is removed and the target is created in the new revision.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getMech() : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to public getMech() : String from class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
        "comment": "This should be FP. original class is removed and the target is created in the new revision.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getTopology() : Topology from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public getTopology() : Topology from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
        "comment": "This should be FP. original class is removed and the target is created in the new revision.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public isShared() : boolean from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public isShared() : boolean from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
        "comment": "This should be FP. original class is removed and the target is created in the new revision.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "It is a rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "It is a rename class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerAttributes(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "RelayResourceDefinition is renamed",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package setShared(shared boolean) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public setShared(shared boolean) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
        "comment": "This should be FP. original class is removed and the target is created in the new revision.",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected executeRuntimeStep(context OperationContext, operation ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.ExportNativeConfiguration to protected executeRuntimeStep(context OperationContext, operation ModelNode) : void from class org.infinispan.server.jgroups.subsystem.ExportNativeConfiguration",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public forName(localName String) : Element from class org.jboss.as.clustering.jgroups.subsystem.Element to public forName(localName String) : Element from class org.infinispan.server.jgroups.subsystem.Element",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerChildren(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public forName(localName String) : Attribute from class org.jboss.as.clustering.jgroups.subsystem.Attribute to public forName(localName String) : Attribute from class org.infinispan.server.jgroups.subsystem.Attribute",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private configureMulticastSocket(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private configureMulticastSocket(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, addressProperty String, portProperty String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getLocalName() : String from class org.jboss.as.clustering.jgroups.subsystem.Attribute to public getLocalName() : String from class org.infinispan.server.jgroups.subsystem.Attribute",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getLocalName() : String from class org.jboss.as.clustering.jgroups.subsystem.Element to public getLocalName() : String from class org.infinispan.server.jgroups.subsystem.Attribute",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private setProperty(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, name String, value String) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private setProperty(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, name String, value String) : void from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemRemove.OriginalSubsystemRemoveHandler to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
        "comment": "This is a overriden method for both classes as both implement same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testProtocolStackAddRemoveSequenceWithParameters() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackAddRemoveSequenceWithParameters() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "It is a move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackAddHandler",
        "comment": "This is a overriden method for both classes as both implement same class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerChildren(registration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
        "comment": "The method exist in the class in both revisions",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter to private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private configureBindAddress(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, binding SocketBinding) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private configureBindAddress(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private configureServerSocket(protocol ProtocolConfiguration, config org.jgroups.conf.ProtocolConfiguration, property String, binding SocketBinding) : void from class org.jboss.as.clustering.jgroups.JChannelFactory to private configureServerSocket(introspector Introspector, config org.jgroups.conf.ProtocolConfiguration, property String, binding SocketBinding) : void from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testSubsystemReadWriteOperations() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testSubsystemReadWriteOperations() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
        "comment": "Seems it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public createChannel(id String) : Channel from class org.jboss.as.clustering.jgroups.JChannelFactory to public createChannel(id String) : Channel from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public start(context StartContext) : void from class org.jboss.as.clustering.jgroups.subsystem.ChannelService to public start(context StartContext) : void from class org.infinispan.server.jgroups.spi.service.ChannelBuilder",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public stop() : void from class org.jboss.as.clustering.jgroups.TimerSchedulerAdapter to public stop(context StopContext) : void from class org.infinispan.server.commons.service.concurrent.CachedThreadPoolExecutorServiceBuilder",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testProtocolStackRemoveRemoveSequence() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackRemoveRemoveSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testProtocolStackRemoveRollback() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackRemoveRollback() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode, element Element) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter to private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLWriter",
        "comment": "Move Class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerAttributes(resourceRegistration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
        "comment": "<p>Move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerAttributes(resourceRegistration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.TransportResourceDefinition to public registerAttributes(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.ProtocolResourceDefinition",
        "comment": "<p>The method existed in the class in the previous version</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode, verificationHandler ServiceVerificationHandler, newControllers List) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemAdd to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.ChannelAddHandler",
        "comment": "Extends the same class so the method are in the same name and so similar",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testProtocolStackAddRemoveAddSequence() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to public testProtocolStackAddRemoveAddSequence() : void from class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "It is move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isShutdown() : boolean from class org.jboss.as.clustering.jgroups.TimerSchedulerAdapter to public isShutdown() : boolean from class org.infinispan.server.commons.msc.DelegatingServiceContainer",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testDescribeHandler() : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to public testDescribeHandler() : void from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove to protected performRuntime(context OperationContext, operation ModelNode, model ModelNode) : void from class org.infinispan.server.jgroups.subsystem.StackRemoveHandler",
        "comment": "move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private createProtocol(protocolConfig ProtocolConfiguration) : org.jgroups.conf.ProtocolConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory to private createProtocol(stack ProtocolStackConfiguration, protocol ProtocolConfiguration) : org.jgroups.conf.ProtocolConfiguration from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "it is move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1 to private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations Map) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": "<p>It detects moving&nbsp;parseTransport() from multiple classes to&nbsp;JGroupsSubsystemXMLReader</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_2 to private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations Map) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": "<p>It detects moving&nbsp;parseTransport() from multiple classes to&nbsp;JGroupsSubsystemXMLReader&nbsp;</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getSubsystemXml() : String from class org.jboss.as.clustering.jgroups.subsystem.OperationTestCaseBase to protected getSubsystemXml() : String from class org.infinispan.server.jgroups.subsystem.OperationTestCaseBase",
        "comment": "seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testProtocolReadWriteOperation() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testProtocolReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
        "comment": "seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTransportReadWriteOperation() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testTransportReadWriteOperation() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
        "comment": "seems a move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public setTopology(site String, rack String, machine String) : void from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to public setTopology(site String, rack String, machine String) : TransportConfigurationBuilder from class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
        "comment": "implement the same Interface",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public testParseAndMarshalModel() : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to public testParseAndMarshalModel() : void from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private parseTransport(reader XMLExtendedStreamReader, stackAddress ModelNode, operations List) : void from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_0 to private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations Map) : void from class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemXMLReader",
        "comment": "<p>It detects moving&nbsp;parseTransport() from multiple classes to&nbsp;JGroupsSubsystemXMLReader&nbsp;</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public registerChildren(resourceRegistration ManagementResourceRegistration) : void from class org.jboss.as.clustering.jgroups.subsystem.StackResourceDefinition to public registerChildren(registration ManagementResourceRegistration) : void from class org.infinispan.server.jgroups.subsystem.StackResourceDefinition",
        "comment": "Move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testTransportReadWriteWithParameters() : void from class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase to public testTransportReadWriteWithParameters() : void from class org.infinispan.server.jgroups.subsystem.OperationsTestCase",
        "comment": "Move class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public getProtocolStack() : List from class org.jboss.as.clustering.jgroups.JChannelFactory to public getProtocolStack() : List from class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "It is a move clas/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public data() : Collection from class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase to public data() : Collection from class org.infinispan.server.jgroups.subsystem.SubsystemParsingTestCase",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public createDescribeOperation(address PathAddress) : ModelNode extracted from public testDescribeHandler() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>What is being done in the extracted method is different than in the original code. I think this should be FP. This also relates to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2841, since we did not accept it, this goes for FP.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package createProtocols(stack ProtocolStackConfiguration, multicastCapable boolean) : List extracted from public getProtocolStack() : List in class org.jboss.as.clustering.jgroups.JChannelFactory",
        "comment": "<p>Extract and Move to the inner class</p><p>Having the move class, this should be TP (although the move class has not been identified)</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public pathElement(name String) : PathElement extracted from private parseRemoteSite(reader XMLExtendedStreamReader, relayAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0",
        "comment": "<p>Extract and Move to the inner class</p><p>JGroupsSubsystemXMLReader_7_0 is detected to be renamed to&nbsp;JGroupsSubsystemXMLReader. pathElement() now appears in two new classes that delegate to the original PathElement#pathElement(), and those two are called instead of the original ones in JGroupsSubsystemXMLReader#parseRemoteSite. But clearly&nbsp;RemoteSiteResourceDefinition.pathElement(site) (in the new code) has the same logic as&nbsp;PathElement.pathElement(ModelKeys.REMOTE_SITE, site) (in the old code), so this is TP</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public pathElement(name String) : PathElement extracted from private parseProperty(reader XMLExtendedStreamReader, address PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0",
        "comment": "<p>Extract and Move to the inner class</p><p>I don't see any use of pathElement&nbsp;in the parseProperty method in&nbsp;JGroupsSubsystemXMLReader (to which the&nbsp;JGroupsSubsystemXMLReader_7_0 is renamed)</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private parseProtocolAttribute(reader XMLExtendedStreamReader, index int, operation ModelNode) : void extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1",
        "comment": "<p>Extract and Move to the inner class</p><p>This is TP if we accept the move method&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private parseProtocolElement(reader XMLExtendedStreamReader, address PathAddress, operations Map) : void extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1",
        "comment": "<p>Extract and Move to the inner class</p><p>This is TP if we accept the move method as TP http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private parseStack(reader XMLExtendedStreamReader, subsystemAddress PathAddress, operations Map) : void extracted from private parseProtocol(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0",
        "comment": "<p>Extract and Move to the inner class</p><p>JGroupsSubsystemXMLReader_7_0 is renamed to&nbsp;JGroupsSubsystemXMLReader. In the target class,&nbsp;parseProtocol&nbsp;does not call&nbsp;parseStack&nbsp;so this should be FP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from public readElement(reader XMLExtendedStreamReader, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0",
        "comment": "<p>Extract and Move to the inner class</p><p>A search logic for an attribute seems to be changed to use an existing method from the&nbsp;<span class='blob-code-inner'><span class='pl-smi'>XMLExtendedStreamReader class</span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseRemoteSite(reader XMLExtendedStreamReader, relayAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0",
        "comment": "<p>Extract and Move to the inner class</p><p>A search logic for an attribute seems to be changed to use an existing method from the&nbsp;<span class='blob-code-inner'><span class='pl-smi'>XMLExtendedStreamReader class</span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseProperty(reader XMLExtendedStreamReader, address PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_7_0",
        "comment": "<p>Extract and Move to the inner class</p><p>A search logic for an attribute seems to be changed to use an existing method from the&nbsp;<span class='blob-code-inner'><span class='pl-smi'>XMLExtendedStreamReader class</span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private require(reader XMLExtendedStreamReader, attribute Attribute) : String extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1",
        "comment": "<p>Extract and Move to the inner class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private writeAttribute(writer XMLExtendedStreamWriter, model ModelNode, attribute AttributeDefinition) : void extracted from private writeRelay(writer XMLExtendedStreamWriter, relay ModelNode, element Element) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private writeAttribute(writer XMLExtendedStreamWriter, model ModelNode, attribute AttributeDefinition) : void extracted from private writeSasl(writer XMLExtendedStreamWriter, sasl ModelNode, element Element) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLWriter",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testSubsystemReadWriteOperations() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackAddRemoveAddSequence() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Note also the move class.</p><p>This is similar to http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testTransportReadWriteOperation() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackRemoveRemoveSequence() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Note also the move class.</p><p>This is similar to http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testTransportReadWriteWithParameters() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackAddRemoveSequenceWithParameters() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>(Note the move class as well)</p><p>This is similar to http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testProtocolStackRemoveRollback() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Note also the move class</p><p>This is similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected buildKernelServices() : KernelServices extracted from public testProtocolReadWriteOperation() : void in class org.jboss.as.clustering.jgroups.subsystem.OperationsTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>(Note the move class as well)</p><p><span class='blob-code-inner'><span class='pl-c1'>super</span><span class='pl-k'>.</span>installInController(subsystemXml) used to do this:</span></p><p>https://github.com/wildfly/wildfly-core/commit/7331c7bd5dfa29540ff67b2c7c9b4585deef0ee6&nbsp;</p><p>And now what is being done in the extracted method is the same</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private buildKernelServices() : KernelServices extracted from public testParseAndMarshalModel() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>The method testParseAndMarshalModel() was detected by RefDiff to be moved from&nbsp;JGroupsSubsystemTestCase to SubsystemParsingTestCase (http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2850). That was marked as FP since the two classes are similar so there could be a move/rename class. to be found as move/rename. If we accept this, this can be TP similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method private buildKernelServices() : KernelServices extracted from public testDescribeHandler() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>The method testParseAndMarshalModel() was detected by RefDiff to be moved from&nbsp;JGroupsSubsystemTestCase to SubsystemParsingTestCase (http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2850). That was marked as FP since the two classes are similar so there could be a move/rename class. to be found as move/rename. If we accept this, this can be TP similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2876</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createKernelServicesBuilder() : KernelServicesBuilder extracted from public testDescribeHandler() : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemTestCase",
        "comment": "<p>Extract and Move to the inner class</p><p>Also consider the move/rename class to&nbsp;SubsystemParsingTestCase</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method package pathElement(name String) : PathElement extracted from private parseTransport(reader XMLExtendedStreamReader, stackAddress PathAddress, operations List) : void in class org.jboss.as.clustering.jgroups.subsystem.JGroupsSubsystemXMLReader_1_1",
        "comment": "<p>Extract and Move to the inner class</p><p>If we accept&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1142116/2844 as TP, this can be TP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to class org.infinispan.server.jgroups.subsystem.Attribute",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to class org.infinispan.server.jgroups.subsystem.Element",
        "comment": "the element is moved and the name were existed in the class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private siteName : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Relay to class org.infinispan.server.jgroups.subsystem.RelayConfigurationBuilder",
        "comment": "<p>Similar to&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.RemoteSite to class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private clusterRole : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private mech : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Sasl to class org.infinispan.server.jgroups.subsystem.SaslConfigurationBuilder",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private shared : boolean from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Transport to class org.infinispan.server.jgroups.subsystem.TransportConfigurationBuilder",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package CLUSTER_ROLE : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RemoteSiteResourceDefinition to class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package SECURITY_REALM : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package MECH : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition to class org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
        "comment": "Move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to class org.infinispan.server.jgroups.subsystem.ChannelResourceDefinition",
        "comment": "the attribute is not removed from original class. it initialized differently",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to class org.infinispan.server.jgroups.subsystem.JGroupsSubsystemResourceDefinition",
        "comment": "the attribute is not removed from original class. it initialized differently",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private elements : Map from class org.jboss.as.clustering.jgroups.subsystem.Element to class org.infinispan.server.jgroups.subsystem.Element",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private attributes : Map from class org.jboss.as.clustering.jgroups.subsystem.Attribute to class org.infinispan.server.jgroups.subsystem.Attribute",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package SITE : SimpleAttributeDefinition from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to class org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "it is a move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package ATTRIBUTES : AttributeDefinition[] from class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition to class org.infinispan.server.jgroups.subsystem.RemoteSiteResourceDefinition",
        "comment": "The original class is moved and the atribute is stil there",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private map : Map from class org.jboss.as.clustering.jgroups.subsystem.ProtocolDefaultsService.Defaults to class org.infinispan.server.jgroups.subsystem.ProtocolDefaultsBuilder",
        "comment": "<p>See&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Protocol to class org.infinispan.server.jgroups.subsystem.ThreadPoolResourceDefinition",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private siteName : String from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.Relay to class org.infinispan.server.jgroups.subsystem.RemoteSiteConfigurationBuilder",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package addStackOpWithParams : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private channel : Channel from class org.jboss.as.clustering.jgroups.subsystem.ChannelService to class org.infinispan.server.jgroups.spi.service.ChannelBuilder",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.Attribute to class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "The atrribute is existed in the original class in both revision",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private name : String from class org.jboss.as.clustering.jgroups.subsystem.Element to class org.infinispan.server.jgroups.ForkChannelFactory.ForkProtocolStackConfiguration",
        "comment": "The atrribute is existed in the original class in both revision",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package removeStackOp : ModelNode from class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase to class org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private configuration : ProtocolStackConfiguration from class org.jboss.as.clustering.jgroups.JChannelFactory to class org.infinispan.server.jgroups.JChannelFactory",
        "comment": "it is the same class. it just moved",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private environment : InjectedValue from class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackAdd.ProtocolStack to class org.infinispan.server.jgroups.subsystem.JChannelFactoryBuilder",
        "comment": "<p>The original class is deleted, the field is added to the target class (which is new), both classes used to implement the same interface, yet I could not find a relationship between the two classes. &nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ProtocolConfiguration moved to org.infinispan.server.jgroups.spi.ProtocolConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ProtocolStackConfiguration moved to org.infinispan.server.jgroups.spi.ProtocolStackConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.subsystem.SaslResourceDefinition moved to org.infinispan.server.jgroups.subsystem.SaslResourceDefinition",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.TransportConfiguration moved to org.infinispan.server.jgroups.spi.TransportConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.ChannelFactory moved to org.infinispan.server.jgroups.ChannelFactory",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.subsystem.RelayResourceDefinition moved to org.infinispan.server.jgroups.subsystem.RelayResourceDefinition",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.subsystem.ExportNativeConfiguration moved to org.infinispan.server.jgroups.subsystem.ExportNativeConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.subsystem.OperationSequencesTestCase moved to org.infinispan.server.jgroups.subsystem.OperationSequencesTestCase",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.subsystem.ModelKeys moved to org.infinispan.server.jgroups.subsystem.ModelKeys",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.RemoteSiteConfiguration moved to org.infinispan.server.jgroups.spi.RemoteSiteConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class org.jboss.as.clustering.jgroups.RelayConfiguration moved to org.infinispan.server.jgroups.spi.RelayConfiguration",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Change Package",
        "description": "Change Package org.jboss.as.clustering.jgroups to org.infinispan.server.jgroups.spi",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Change Package",
        "description": "Change Package org.jboss.as.clustering.jgroups to org.infinispan.server.jgroups.security",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 3908
}, {
    "id": 1142126,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "999e0e3616525d77cf46c5865f9981b5a6b5609a",
    "url": "https://github.com/apache/hive/commit/999e0e3616525d77cf46c5865f9981b5a6b5609a",
    "author": "Jesus Camacho Rodriguez",
    "time": "7/14/15 3:18 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private hepPlan(basePlan RelNode, followPlanChanges boolean, mdProvider RelMetadataProvider, order HepMatchOrder, rules RelOptRule[]) : RelNode extracted from private hepPlan(basePlan RelNode, followPlanChanges boolean, mdProvider RelMetadataProvider, rules RelOptRule[]) : RelNode in class org.apache.hadoop.hive.ql.parse.CalcitePlanner.CalcitePlannerAction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3784
}, {
    "id": 1142210,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "url": "https://github.com/JetBrains/intellij-community/commit/6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
    "author": "Anton Makeev",
    "time": "7/16/15 8:31 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method protected createMainModule(moduleType ModuleType) : Module from class com.intellij.testFramework.LightPlatformTestCase to public createMainModule(project Project) : Module from class com.intellij.testFramework.LightProjectDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setUpProject(project Project) : ProjectInfo extracted from private initProject(descriptor LightProjectDescriptor) : void in class com.intellij.testFramework.LightPlatformTestCase",
        "comment": "<p>It is extracted and move to class <span class='blob-code-inner'><span class='pl-en'>LightProjectDescriptor. </span></span></p><p><span class='blob-code-inner'><span class='pl-en'>Since RefDiff does not detect <br /></span></span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getSdk() : Sdk from class com.intellij.testFramework.LightProjectDescriptor",
        "comment": "new",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor.Empty to public getModuleType() : ModuleType from class com.intellij.testFramework.LightProjectDescriptor",
        "comment": "new",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 15903
}, {
    "id": 1142230,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "e1f0dbc2f09541fc64ce88ee22d8f8f4648004fe",
    "url": "https://github.com/JetBrains/intellij-community/commit/e1f0dbc2f09541fc64ce88ee22d8f8f4648004fe",
    "author": "Nikolay Mikhaylov",
    "time": "7/15/15 4:10 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public resolveAndDownloadImpl(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List<MavenRepositoryInfo>) : List<OrderRoot> extracted from public resolveAndDownload(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List<MavenRepositoryInfo>) : NewLibraryConfiguration in class org.jetbrains.idea.maven.utils.library.RepositoryAttachHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15709
}, {
    "id": 1142267,
    "repository": "https://github.com/facebook/presto.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/presto.git",
    "sha1": "8b1f5ce432bd6f579c646705d79ff0c4690495ae",
    "url": "https://github.com/facebook/presto/commit/8b1f5ce432bd6f579c646705d79ff0c4690495ae",
    "author": "Xin Yao",
    "time": "7/15/15 10:34 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public checkArrayIndex(index long) : void extracted from public readBlockAndCheckIndex(array Slice, index long) : Block in class com.facebook.presto.operator.scalar.ArraySubscriptOperator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1433
}, {
    "id": 1142382,
    "repository": "https://github.com/jMonkeyEngine/jmonkeyengine.git",
    "sha1": "5989711f7315abe4c3da0f1516a3eb3a81da6716",
    "url": "https://github.com/jMonkeyEngine/jmonkeyengine/commit/5989711f7315abe4c3da0f1516a3eb3a81da6716",
    "author": "Nehon",
    "time": "7/15/15 6:55 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected movePanel(xoffset int, yoffset int) : void extracted from public mouseDragged(e MouseEvent) : void in class com.jme3.gde.materialdefinition.editor.DraggablePanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected saveLocation() : void extracted from public mousePressed(e MouseEvent) : void in class com.jme3.gde.materialdefinition.editor.DraggablePanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1768
}, {
    "id": 1142385,
    "repository": "https://github.com/processing/processing.git",
    "sha1": "d403a0b2322a74dde824094d67b7997c1c371883",
    "url": "https://github.com/processing/processing/commit/d403a0b2322a74dde824094d67b7997c1c371883",
    "author": "Akarshit Wal",
    "time": "7/15/15 2:57 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class processing.app.contrib.UpdateContribListingPanel moved to processing.app.contrib.UpdateContributionTab.UpdateContribListingPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class processing.app.contrib.UpdateStatusPanel moved to processing.app.contrib.UpdateContributionTab.UpdateStatusPanel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class processing.app.contrib.UpdateContribListingPanel renamed to processing.app.contrib.UpdateContributionTab",
        "comment": "<p>Looking at the usages and the body</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class processing.app.contrib.UpdateContribListingPanel.MyTableModel moved to processing.app.contrib.UpdateContributionTab.UpdateContribListingPanel.MyTableModel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method package updatePanelOrdering(contributionsSet Set) : void from class processing.app.contrib.UpdateContribListingPanel to package updatePanelOrdering(contributionsSet Set) : void from class processing.app.contrib.UpdateContributionTab.UpdateContribListingPanel",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1067
}, {
    "id": 1142429,
    "repository": "https://github.com/deeplearning4j/deeplearning4j.git",
    "sha1": "c50064efb325b0c94cc62788b4c8935b7c39ac40",
    "url": "https://github.com/deeplearning4j/deeplearning4j/commit/c50064efb325b0c94cc62788b4c8935b7c39ac40",
    "author": "Alex Black",
    "time": "7/16/15 7:46 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getOptimizer(oa OptimizationAlgorithm, conf NeuralNetConfiguration, m Model) : ConvexOptimizer extracted from public testSphereFnOptHelper(oa OptimizationAlgorithm, numLineSearchIter int, nDimensions int) : void in class org.deeplearning4j.optimize.solver.TestOptimizers",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1046
}, {
    "id": 1142783,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "240097b78b70172e1cf9bc37876a566ddfb9e115",
    "url": "https://github.com/apache/hive/commit/240097b78b70172e1cf9bc37876a566ddfb9e115",
    "author": "Owen O'Malley",
    "time": "7/15/15 6:41 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public getAcidEventFields() : List<String> from class org.apache.hadoop.hive.ql.io.orc.OrcRecordUpdater to package getAcidEventFields() : List<String> from class org.apache.hadoop.hive.ql.io.orc.RecordReaderFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2375
}, {
    "id": 1142910,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "url": "https://github.com/VoltDB/voltdb/commit/7527cfc746dc20ddb78002c7b3a65d55026a334e",
    "author": "Stefano Santoro",
    "time": "7/16/15 12:48 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.voltdb.importer.ChannelChangeNotifier.CallbacksRef moved to org.voltdb.importer.ChannelDistributer.CallbacksRef",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package fromURIs(uris Set<URI>) : Set<ChannelSpec> renamed to package asSpecs(uris Set<URI>) : Set<ChannelSpec> in class org.voltdb.importer.TestChannelDistributer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1142921,
    "repository": "https://github.com/datastax/java-driver.git",
    "sha1": "14abb6919a99a0d6d500198dd2e30c83b1bb6709",
    "url": "https://github.com/datastax/java-driver/commit/14abb6919a99a0d6d500198dd2e30c83b1bb6709",
    "author": "olim7t",
    "time": "7/17/15 6:52 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private validateParameters() : void extracted from public prepare(manager MappingManager, ps PreparedStatement) : void in class com.datastax.driver.mapping.MethodMapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package should_include_enumtype_in_accessor_string() : void renamed to public should_allow_enum_as_string_in_accessor_params() : void in class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package should_include_enumtype_in_accessor_ordinal() : void renamed to public should_allow_enum_as_int_in_accessor_params() : void in class com.datastax.driver.mapping.MapperAccessorParamsTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1143000,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "97811cf971f7ccf6a5fc5e90a491db2f58d49da1",
    "url": "https://github.com/JetBrains/intellij-community/commit/97811cf971f7ccf6a5fc5e90a491db2f58d49da1",
    "author": "Eugene Zhuravlev",
    "time": "7/16/15 12:00 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.jetbrains.jps.cmdline.BuildMain.MyLoggerFactory moved to org.jetbrains.jps.cmdline.LogSetup.MyLoggerFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private initLoggers() : void from class org.jetbrains.jps.cmdline.BuildMain to public initLoggers() : void from class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private ensureLogConfigExists(logConfig File) : void from class org.jetbrains.jps.cmdline.BuildMain to private ensureLogConfigExists(logConfig File) : void from class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG_CONFIG_FILE_NAME : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG_FILE_MACRO : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private LOG_FILE_NAME : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private DEFAULT_LOGGER_CONFIG : String from class org.jetbrains.jps.cmdline.BuildMain to class org.jetbrains.jps.cmdline.LogSetup",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 15639
}, {
    "id": 1143042,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "30c4ae09745d6062077925a54f27205b7401d8df",
    "url": "https://github.com/hazelcast/hazelcast/commit/30c4ae09745d6062077925a54f27205b7401d8df",
    "author": "Peter Veentjer",
    "time": "7/16/15 1:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private renderConnection() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderThread() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderOperationService() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderEvents() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderNativeMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderHeap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderClient() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderPhysicalMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderProcessors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package getConnectionAddress() : Object extracted from public close(t Throwable) : void in class com.hazelcast.nio.tcp.TcpIpConnection",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderSwap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderCluster() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderExecutors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderProxy() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private renderGc() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.hazelcast.internal.metrics.LongProbe renamed to com.hazelcast.internal.metrics.LongProbeFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.hazelcast.internal.metrics.DoubleProbe renamed to com.hazelcast.internal.metrics.DoubleProbeFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.internal.metrics.impl.GaugeImplTest.SomeObject moved to com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest.SomeObject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.DoubleProbeFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.LongProbeFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.impl.MethodProbe",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.impl.FieldProbe",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getMetric_whenNullName() : void renamed to public newGauge_whenNullName() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getMetric_whenNotExistingMetric() : void renamed to public newGauge_whenNotExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getMetric_whenExistingMetric() : void renamed to public newGauge_whenExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package getObjectMetadata(clazz Class<?>) : SourceMetadata renamed to package loadSourceMetadata(clazz Class<?>) : SourceMetadata in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package getLastHandle() : long renamed to package getLastWriteTime() : long in class com.hazelcast.nio.tcp.WriteHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package getLastHandle() : long renamed to package getLastReadTime() : long in class com.hazelcast.nio.tcp.ReadHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public toString() : String renamed to public render() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.hazelcast.internal.metrics.impl.AccessibleObjectProbe renamed to com.hazelcast.internal.metrics.impl.ProbeUtils",
        "comment": "<p>Usages and Git say this</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getInvocationUsagePercentage() : double renamed to private invocationsUsedPercentage() : double in class com.hazelcast.spi.impl.operationservice.impl.InvocationRegistry",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : String from class com.hazelcast.internal.metrics.impl.GaugeImpl to public getName() : String from class com.hazelcast.internal.metrics.impl.AbstractGauge",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setup() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public setup() : void from class com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest",
        "comment": "<p>Matin: Seems false positive!</p><p>Davood: I'd say this is TP because the method bodies are identical. In this commit, a long test class is broken down into two smaller classes.&nbsp;</p><p>Nikos: The method exists in both com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest and com.hazelcast.internal.metrics.impl.LongGaugeImplTest after refactoring.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public getName() : void from class com.hazelcast.internal.metrics.impl.GaugeImplTest to public getName() : void from class com.hazelcast.internal.metrics.impl.LongGaugeImplTest",
        "comment": "<p>Seems false positive!</p><p>Nikos: The first statement changes, but next two statements that follow are identical.<br />Before: <span class='blob-code-inner'><span class='pl-smi'>Gauge</span> gauge <span class='pl-k'>=</span> metricsRegistry<span class='pl-k'>.</span>getGauge(<span class='pl-s'><span class='pl-pds'>'</span>foo<span class='pl-pds'>'</span></span>);<br />After: <span class='pl-smi'>LongGauge</span> gauge <span class='pl-k'>=</span> metricsRegistry<span class='pl-k'>.</span>newLongGauge(<span class='pl-s'><span class='pl-pds'>'</span>foo<span class='pl-pds'>'</span></span>);</span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method public run() : void from class com.hazelcast.internal.monitors.HealthMonitor to public run() : void from class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor to class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected name : String from class com.hazelcast.internal.metrics.impl.GaugeImpl to class com.hazelcast.internal.metrics.impl.AbstractGauge",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private operationService : InternalOperationService from class com.hazelcast.internal.monitors.HealthMonitor to class com.hazelcast.internal.monitors.PerformanceLogFile",
        "comment": "<p>I think this is FP because PerformanceLogFile has not been instanciated in PerformanceLogFile and the way around</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor to class com.hazelcast.internal.monitors.HealthMonitor.HealthMonitorThread",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private operationService : InternalOperationService from class com.hazelcast.internal.monitors.HealthMonitor to class com.hazelcast.internal.monitors.PerformanceMonitorTest",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.HealthMonitor to class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
        "comment": "<p>The attribute has been moved to&nbsp;HealthMonitorThread</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private delaySeconds : int from class com.hazelcast.internal.monitors.PerformanceMonitor to class com.hazelcast.internal.monitors.PerformanceMonitor.MonitorThread",
        "comment": "<p>This is extract class.</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 5604
}, {
    "id": 1143196,
    "repository": "https://github.com/plutext/docx4j.git",
    "sha1": "59b8e89e61432d1d8f25cb003b62b3ac004d1b6f",
    "url": "https://github.com/plutext/docx4j/commit/59b8e89e61432d1d8f25cb003b62b3ac004d1b6f",
    "author": "Jason Harrop",
    "time": "7/16/15 10:52 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private setProtectionPassword(password String, hashAlgo HashAlgorithm) : void extracted from public setEnforcementEditValue(editValue STDocProtect, password String, hashAlgo HashAlgorithm) : void in class org.docx4j.openpackaging.parts.WordprocessingML.DocumentSettingsPart",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1483
}, {
    "id": 1143208,
    "repository": "https://github.com/loopj/android-async-http.git",
    "sha1": "af7e9e4bcd90504d6a665dbb21635eb1733fe025",
    "url": "https://github.com/loopj/android-async-http/commit/af7e9e4bcd90504d6a665dbb21635eb1733fe025",
    "author": "Marek Sebera",
    "time": "7/16/15 7:18 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private TAG : WeakReference<Object> from class com.loopj.android.http.RequestHandle to class com.loopj.android.http.AsyncHttpResponseHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setRequestTag(TAG Object) : AsyncHttpRequest extracted from public setTag(tag Object) : RequestHandle in class com.loopj.android.http.RequestHandle",
        "comment": "<p>Extract and Move to the inner class</p><p>&nbsp;</p><p>I could not find a compelling reason for this</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }],
    "refDiffExecutionTime": 294
}, {
    "id": 1143330,
    "repository": "https://github.com/cgeo/cgeo.git",
    "sha1": "c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "url": "https://github.com/cgeo/cgeo/commit/c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
    "author": "Mathieu Alorent",
    "time": "7/16/15 2:47 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getWaymarkingConnector() : IConnector extracted from public testCanHandle() : void in class cgeo.geocaching.connector.WaymarkingConnectorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getWaymarkingConnector() : IConnector extracted from public testGetGeocodeFromUrl() : void in class cgeo.geocaching.connector.WaymarkingConnectorTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1500
}, {
    "id": 1143365,
    "repository": "https://github.com/jersey/jersey.git",
    "sha1": "d57b1401f874f96a53f1ec1c0f8a6089ae66a4ce",
    "url": "https://github.com/jersey/jersey/commit/d57b1401f874f96a53f1ec1c0f8a6089ae66a4ce",
    "author": "Jakub Podlesak",
    "time": "7/16/15 4:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public _testParamValidatedResourceNoParam(target WebTarget) : void extracted from public testParamValidatedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.glassfish.jersey.ext.cdi1x.internal.GenericHk2LocatorManager from class org.glassfish.jersey.ext.cdi1x.servlet.internal.ServletHk2LocatorManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testParamValidatedResourceParamProvided(target WebTarget) : void extracted from public testParamValidatedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testPropertyValidatedResourceParamProvided(target WebTarget) : void extracted from public testPropertyValidatedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testOldFashionedResourceNoParam(target WebTarget) : void extracted from public testOldFashionedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testPropertyValidatedResourceNoParam(target WebTarget) : void extracted from public testPropertyValidatedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testFieldValidatedResourceNoParam(target WebTarget) : void extracted from public testFieldValidatedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testOldFashionedResourceParamProvided(target WebTarget) : void extracted from public testOldFashionedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public _testFieldValidatedResourceParamProvided(target WebTarget) : void extracted from public testFieldValidatedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private listTypes(logMsgBuilder StringBuilder, types Collection<Type>) : StringBuilder renamed to private listElements(logMsgBuilder StringBuilder, elements Collection<? extends Object>) : StringBuilder in class org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.glassfish.jersey.tests.cdi.bv.CdiTest renamed to org.glassfish.jersey.tests.cdi.bv.RawCdiTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.glassfish.jersey.tests.cdi.bv.Hk2Test renamed to org.glassfish.jersey.tests.cdi.bv.RawHk2Test",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.glassfish.jersey.ext.cdi1x.internal.DefaultHk2LocatorManager renamed to org.glassfish.jersey.ext.cdi1x.internal.SingleHk2LocatorManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.glassfish.jersey.tests.cdi.resources.MyApplication renamed to org.glassfish.jersey.tests.cdi.resources.MainApplication",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5816
}, {
    "id": 1143517,
    "repository": "https://github.com/BuildCraft/BuildCraft.git",
    "sha1": "a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
    "url": "https://github.com/BuildCraft/BuildCraft/commit/a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
    "author": "Hea3veN",
    "time": "7/17/15 8:32 AM",
    "refactorings": [{
        "type": "Push Down Attribute",
        "description": "Push Down Attribute public index : BlockIndex from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdBlock",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute public side : ForgeDirection from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdBlock",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getAvailableRequests(station DockingStation) : Collection<StackRequest> extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private index : BlockIndex from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdBlock",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Method",
        "description": "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Push Down Attribute",
        "description": "Push Down Attribute private side : ForgeDirection from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdRequest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private releaseCurrentRequest() : void extracted from public delegateAIEnded(ai AIRobot) : void in class buildcraft.robotics.boards.BoardRobotDelivery",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(i int, stack ItemStack) : ItemStack in class buildcraft.robotics.TileRequester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(slot int, stack ItemStack) : ItemStack in class buildcraft.builders.TileBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.builders.TileBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.robotics.TileRequester",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getAvailableRequest(i int) : StackRequest renamed to public getRequest(slot int) : ItemStack in class buildcraft.builders.TileBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public setStation(station DockingStation) : void extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest",
        "comment": "<p>Extract and Move to the inner class</p><p>This is extract to other class indeed</p><p>There is one statement (setting&nbsp;<span class='blob-code-inner'>station) which is now being extracted as a setter. The setter does other stuff as well.</span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public station : DockingStation from class buildcraft.api.robots.StackRequest to class buildcraft.robotics.ai.AIRobotSearchStackRequest",
        "comment": "<p>new</p><p>DockingStation still exists, it has been moved apparently. It still has statation</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2449
}, {
    "id": 1143549,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "4fcd7d4d366d001cf5f1f7d926c608c902e3f0af",
    "url": "https://github.com/apache/cassandra/commit/4fcd7d4d366d001cf5f1f7d926c608c902e3f0af",
    "author": "Sylvain Lebresne",
    "time": "7/16/15 10:21 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.locator.DynamicEndpointSnitchTest.ScoreUpdater moved to org.apache.cassandra.locator.DynamicEndpointSnitchLongTest.ScoreUpdater",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public testConcurrency() : void from class org.apache.cassandra.locator.DynamicEndpointSnitchTest to public testConcurrency() : void from class org.apache.cassandra.locator.DynamicEndpointSnitchLongTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 4060
}, {
    "id": 1143604,
    "repository": "https://github.com/netty/netty.git",
    "sha1": "9f422ed0f44516bea8116ed7730203e4eb316252",
    "url": "https://github.com/netty/netty/commit/9f422ed0f44516bea8116ed7730203e4eb316252",
    "author": "Scott Mitchell",
    "time": "7/16/15 6:41 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private resetCtx() : void extracted from public windowUpdateAndFlushShouldTriggerWrite() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private initConnectionAndController() : void extracted from public setup() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private ctx : ChannelHandlerContext from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledBase to class io.netty.microbench.http2.NoopHttp2RemoteFlowController",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public channelHandlerContext(ctx ChannelHandlerContext) : void extracted from public setup() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest",
        "comment": "<p>Extract and Move to the inner class</p><p>No statement has been removed from setup()</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private resetCtx() : void extracted from public setup() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1272
}, {
    "id": 1143666,
    "repository": "https://github.com/apache/camel.git",
    "sha1": "ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "url": "https://github.com/apache/camel/commit/ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
    "author": "jkorab",
    "time": "7/17/15 9:56 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public createExchange(message Message, endpoint Endpoint, keyFormatStrategy KeyFormatStrategy) : Exchange extracted from public createExchange(message Message, endpoint Endpoint) : Exchange in class org.apache.camel.component.sjms.jms.JmsMessageHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 10210
}, {
    "id": 1143739,
    "repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
    "sha1": "334dbc7cf3432e7c17b0ed98801e61b0b591b408",
    "url": "https://github.com/opentripplanner/OpenTripPlanner/commit/334dbc7cf3432e7c17b0ed98801e61b0b591b408",
    "author": "Matthew Wigginton Conway",
    "time": "7/16/15 11:10 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.opentripplanner.analyst.cluster.AnalystWorker.WorkerIdDefiner moved to org.opentripplanner.analyst.cluster.WorkerIdDefiner",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public getPropertyValue() : String from class org.opentripplanner.analyst.cluster.AnalystWorker.WorkerIdDefiner to public getPropertyValue() : String from class org.opentripplanner.analyst.cluster.WorkerIdDefiner",
        "comment": "<p>added</p><p>Since the abstract refactoring (<a href='../../commit-refactorings/1143739'>move class</a>) is detected, this is FP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1143786,
    "repository": "https://github.com/liferay/liferay-plugins.git",
    "sha1": "d99695841fa675ea9150602b1132f037093e867d",
    "url": "https://github.com/liferay/liferay-plugins/commit/d99695841fa675ea9150602b1132f037093e867d",
    "author": "joanhyokim",
    "time": "7/16/15 8:00 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected getGetOAuthRequest(portletRequest PortletRequest, portletResponse PortletResponse) : OAuthRequest extracted from protected remoteRender(renderRequest RenderRequest, renderResponse RenderResponse) : void in class com.liferay.marketplace.store.portlet.RemoteMVCPortlet",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4798
}, {
    "id": 1143828,
    "repository": "https://github.com/Graylog2/graylog2-server.git",
    "sha1": "2d98ae165ea43e9a1ac6a905d6094f077abb2e55",
    "url": "https://github.com/Graylog2/graylog2-server/commit/2d98ae165ea43e9a1ac6a905d6094f077abb2e55",
    "author": "Bernd Ahlers",
    "time": "7/16/15 12:42 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private postProcessMessage(raw RawMessage, codec Codec, inputIdOnCurrentNode String, baseMetricName String, message Message, decodeTime long) : Message extracted from private processMessage(raw RawMessage) : Message in class org.graylog2.shared.buffers.processors.DecodingProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private dispatchMessage(msg Message) : void extracted from public onEvent(event MessageEvent) : void in class org.graylog2.shared.buffers.processors.ProcessBufferProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 870
}, {
    "id": 1144393,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "url": "https://github.com/JetBrains/intellij-community/commit/1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
    "author": "peter",
    "time": "7/20/15 12:20 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getFieldInitializerNullness(expression PsiExpression) : Nullness extracted from private calcInherentNullability() : Nullness in class com.intellij.codeInspection.dataFlow.value.DfaVariableValue",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1144535,
    "repository": "https://github.com/facebook/presto.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/presto.git",
    "sha1": "484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "url": "https://github.com/facebook/presto/commit/484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
    "author": "David Phillips",
    "time": "7/20/15 1:54 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.facebook.presto.split.TestJmxSplitManager moved to com.facebook.presto.connector.jmx.TestJmxSplitManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2061
}, {
    "id": 1144559,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "dc199688d69416da58b370ca2aa728e935fc8e0d",
    "url": "https://github.com/neo4j/neo4j/commit/dc199688d69416da58b370ca2aa728e935fc8e0d",
    "author": "Stefan Plantikow",
    "time": "7/20/15 6:24 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getSortedIndexUpdates(descriptor IndexDescriptor) : TreeMap<DefinedProperty,DiffSets<Long>> extracted from private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shouldComputeIndexUpdatesOnAnEmptyTxState() : void renamed to public shouldComputeIndexUpdatesForScanOrSeekOnAnEmptyTxState() : void in class org.neo4j.kernel.impl.api.state.TxStateTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getIndexUpdates(label int, propertyKeyId int) : DiffSets<Long> renamed to private getIndexUpdatesForScanOrSeek(label int, propertyKeyId int) : DiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getIndexUpdates(label int, create boolean, property DefinedProperty) : DiffSets<Long> renamed to private getIndexUpdatesForScanOrSeek(label int, create boolean, property DefinedProperty) : DiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private filterIndexStateChanges(state KernelStatement, index IndexDescriptor, value Object, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator renamed to private filterIndexStateChangesForScanOrSeek(state KernelStatement, index IndexDescriptor, value Object, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private filterIndexStateChangesForPrefix(state KernelStatement, index IndexDescriptor, prefix String, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator renamed to private filterIndexStateChangesForRangeSeekByPrefix(state KernelStatement, index IndexDescriptor, prefix String, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public indexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> renamed to public indexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public indexUpdates(descriptor IndexDescriptor, value Object) : ReadableDiffSets<Long> renamed to public indexUpdatesForScanOrSeek(descriptor IndexDescriptor, value Object) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> renamed to private getIndexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private addToIndex(labelId int, propertyKeyId int, nodeIds long[]) : void renamed to public withStringProperties(nodesWithValues Collection<Pair<Long,String>>) : void in class org.neo4j.kernel.impl.api.state.TxStateTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private filterIndexStateChangesForRangeSeekByNumber(state KernelStatement, index IndexDescriptor, lower Number, includeLower boolean, upper Number, includeUpper boolean, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator extracted from public nodesGetFromIndexRangeSeekByNumber(state KernelStatement, index IndexDescriptor, lower Number, includeLower boolean, upper Number, includeUpper boolean) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations",
        "comment": "<p>new</p><p>The if statements extracted from the methods can be similar but inside the if is different&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 4473
}, {
    "id": 1144604,
    "repository": "https://github.com/greenrobot/greenDAO.git",
    "sha1": "d6d9dd4365387816fda6987a4ad9b679c27e72a3",
    "url": "https://github.com/greenrobot/greenDAO/commit/d6d9dd4365387816fda6987a4ad9b679c27e72a3",
    "author": "Markus",
    "time": "7/20/15 5:25 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class de.greenrobot.dao.PropertyConverter moved to de.greenrobot.dao.converter.PropertyConverter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1144626,
    "repository": "https://github.com/jline/jline2.git",
    "sha1": "1eb3b624b288a4b1a054420d3efb05b8f1d28517",
    "url": "https://github.com/jline/jline2/commit/1eb3b624b288a4b1a054420d3efb05b8f1d28517",
    "author": "Guillaume Nodet",
    "time": "7/20/15 2:41 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public wcwidth(cs CharSequence) : int from class jline.console.WCWidth to class jline.console.ConsoleReader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private print(buff CharSequence, cursorPos int) : int extracted from public putString(str CharSequence) : void in class jline.console.ConsoleReader",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private print(buff CharSequence, start int, end int) : int extracted from private drawBuffer(clear int) : void in class jline.console.ConsoleReader",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private rawPrint(c char, num int) : void extracted from private drawBuffer(clear int) : void in class jline.console.ConsoleReader",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private rawPrint(c char, num int) : void extracted from private clearAhead(num int, delta int) : void in class jline.console.ConsoleReader",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package rawPrint(c int) : void extracted from public redrawLine() : void in class jline.console.ConsoleReader",
        "comment": "new",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package rawPrint(c int) : void extracted from private drawBuffer(clear int) : void in class jline.console.ConsoleReader",
        "comment": "new",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package rawPrint(c int) : void extracted from public beep() : void in class jline.console.ConsoleReader",
        "comment": "new",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package rawPrint(c int) : void extracted from private printAnsiSequence(sequence String) : void in class jline.console.ConsoleReader",
        "comment": "new",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package rawPrint(c int) : void extracted from public println() : void in class jline.console.ConsoleReader",
        "comment": "new",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method package rawPrint(str String) : void extracted from private drawBuffer(clear int) : void in class jline.console.ConsoleReader",
        "comment": "new",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 460
}, {
    "id": 1144689,
    "repository": "https://github.com/xetorthio/jedis.git",
    "sha1": "d4b4aecbc69bbd04ba87c4e32a52cff3d129906a",
    "url": "https://github.com/xetorthio/jedis/commit/d4b4aecbc69bbd04ba87c4e32a52cff3d129906a",
    "author": "Jay Anderson",
    "time": "7/17/15 9:00 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private poolInactive() : boolean extracted from public getNumActive() : int in class redis.clients.util.Pool",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private poolInactive() : boolean extracted from public getNumWaiters() : int in class redis.clients.util.Pool",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private poolInactive() : boolean extracted from public getNumIdle() : int in class redis.clients.util.Pool",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 540
}, {
    "id": 1144794,
    "repository": "https://github.com/spotify/helios.git",
    "sha1": "3ffd70929c08be5cf14f156189e8050969caa87e",
    "url": "https://github.com/spotify/helios/commit/3ffd70929c08be5cf14f156189e8050969caa87e",
    "author": "Ryan Culbertson",
    "time": "7/20/15 6:04 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private isRolloutTimedOut(deploymentGroup DeploymentGroup, client ZooKeeperClient) : boolean extracted from private rollingUpdateAwaitRunning(deploymentGroup DeploymentGroup, host String) : RollingUpdateTaskResult in class com.spotify.helios.master.ZooKeeperMasterModel",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1144806,
    "repository": "https://github.com/siacs/Conversations.git",
    "sha1": "e6cb12dfe414497b4317820497985c110cb81864",
    "url": "https://github.com/siacs/Conversations/commit/e6cb12dfe414497b4317820497985c110cb81864",
    "author": "Raphael Pohl",
    "time": "7/20/15 11:02 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getItemViewType(message Message) : int extracted from public getItemViewType(position int) : int in class eu.siacs.conversations.ui.adapter.MessageAdapter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 911
}, {
    "id": 1144936,
    "repository": "https://github.com/NLPchina/ansj_seg.git",
    "sha1": "913704e835169255530c7408cad11ce9a714d4ec",
    "url": "https://github.com/NLPchina/ansj_seg/commit/913704e835169255530c7408cad11ce9a714d4ec",
    "author": "zhl",
    "time": "7/16/15 2:33 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.ansj.app.crf.pojo.TempFeature moved to org.ansj.app.crf.CrfppModelParser.TempFeature",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public addStatus(sta String) : void inlined to public parseWapitiCRFModel(modelFile String, templateFile String, maxSize int) : Model in class org.ansj.app.crf.WapitiCRFModelParser",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private parseFile(path String, templatePath String) : void renamed to public parseWapitiCRFModel(modelFile String, templateFile String, maxSize int) : Model in class org.ansj.app.crf.WapitiCRFModelParser",
        "comment": "<p>added</p><p>I don't see moved classes here, the rename method is reported in the new class. should DOUBLE CHECK WITH MATIN</p><p>Nikos: org.ansj.app.crf.WapitiCRFModelParser is a new class.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public withStatusMap(statusMap Map) : Template extracted from private parseFile(path String, templatePath String) : void in class org.ansj.app.crf.model.WapitiCRFModel",
        "comment": "<p>added</p><p>The original file is deleted, so should be FP. DOUBLE CHECK WITH MATIN</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Nikos"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public parse(templateStr String) : Template inlined to public parseWapitiCRFModel(modelFile String, templateFile String, maxSize int) : Model in class org.ansj.app.crf.WapitiCRFModelParser",
        "comment": "<p>Class WapitiCRFModelParser is an added class. How can we have an inline method in a newly added class!</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public withTagNum(tagNum int) : Template extracted from private parseFile(path String, templatePath String) : void in class org.ansj.app.crf.model.WapitiCRFModel",
        "comment": "<p>added</p><p>The source file has been removed, DOUBLE CHECK WITH MATIN</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Nikos"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1145010,
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "sha1": "3855f0ca82795f7481b34342c7d9e5644a1d42c3",
    "url": "https://github.com/ignatov/intellij-erlang/commit/3855f0ca82795f7481b34342c7d9e5644a1d42c3",
    "author": "Olya Telezhnaya",
    "time": "7/20/15 6:26 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private getModuleFileName() : String inlined to public resolve() : PsiElement in class org.intellij.erlang.psi.impl.ErlangFunctionReferenceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private getModuleFileName() : String inlined to public multiResolve(incompleteCode boolean) : ResolveResult[] in class org.intellij.erlang.psi.impl.ErlangFunctionReferenceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 964
}, {
    "id": 1145105,
    "repository": "https://github.com/MovingBlocks/Terasology.git",
    "sha1": "543a9808a85619dbe5acc2373cb4fe5344442de7",
    "url": "https://github.com/MovingBlocks/Terasology/commit/543a9808a85619dbe5acc2373cb4fe5344442de7",
    "author": "Immortius",
    "time": "7/17/15 3:07 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.terasology.engine.subsystem.ThreadManagerSubsystem moved to org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private initTimer(context Context) : void inlined to public preInitialise(context Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to class org.terasology.engine.subsystem.lwjgl.LwjglTimer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to class org.terasology.engine.subsystem.headless.HeadlessTimer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.terasology.engine.subsystem.ThreadManager moved to org.terasology.engine.subsystem.common.ThreadManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private initOpenAL(context Context) : void inlined to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.terasology.engine.subsystem.lwjgl.LwjglCustomViewPort renamed to org.terasology.engine.subsystem.lwjgl.LwjglPortlet",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.headless.HeadlessAudio",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglInput",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public shutdown(config Config) : void renamed to public preShutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics",
        "comment": "<p>seems FP</p><p>Nikos: preShutdown() is a new method added to interface <span class='blob-code-inner'><span class='pl-en'>EngineSubsystem</span>. Parameter config was removed from <span class='pl-en'>shutdown</span>(<span class='pl-smi'>Config</span> <span class='pl-v'>config</span>);<br />However, the bodies of the methods are almost identical.<br /></span></p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private createSubsystemList() : Collection renamed to private populateSubsystems(builder TerasologyEngineBuilder) : void in class org.terasology.engine.Terasology",
        "comment": "<p>Seems TP</p><p>Nikos: The call inside main() has been renamed too.<br />Before: <span class='blob-code-inner'><span class='pl-smi'>TerasologyEngine</span> engine <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TerasologyEngine</span>(createSubsystemList());<br /></span><span class='blob-code-inner'>After: <span class='pl-smi'>TerasologyEngineBuilder</span> builder <span class='pl-k'>=</span> <span class='pl-k'>new</span> <span class='pl-smi'>TerasologyEngineBuilder</span>();&nbsp;&nbsp; populateSubsystems(builder);<br /></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessAudio to package shutdown() : void from class org.terasology.engine.subsystem.EngineSubsystem",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public shutdown(config Config) : void from class org.terasology.engine.subsystem.headless.HeadlessInput to package shutdown() : void from class org.terasology.engine.subsystem.EngineSubsystem",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private validateServerIdentity() : boolean from class org.terasology.engine.TerasologyEngine to private validateServerIdentity() : boolean from class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
        "comment": "<p>Matin: TP</p><p>Nikos: After the move <span class='blob-code-inner'><span class='pl-k'>import</span> <span class='pl-smi'>org.terasology.engine.subsystem.common.ConfigurationSubsystem</span></span> is added to org.terasology.engine.TerasologyEngine</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Move Method",
        "description": "Move Method private restartThreads() : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private restartThreads() : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
        "comment": "move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private stopThreads() : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to private stopThreads() : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
        "comment": "move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public submitTask(name String, task Runnable) : void from class org.terasology.engine.subsystem.ThreadManagerSubsystem to public submitTask(name String, task Runnable) : void from class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
        "comment": "move class or package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isFullscreen() : boolean from class org.terasology.engine.TerasologyEngine to public isFullscreen() : boolean from class org.terasology.engine.subsystem.lwjgl.LwjglDisplayDevice",
        "comment": "<p>Method isFullScreen() was added to interface DisplayDevice, and all subclasses had to implement this method. There is no actual move.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public build() : TerasologyEngine extracted from public run() : void in class org.terasology.editor.TeraEd",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private commonThreadPool : TaskMaster from class org.terasology.engine.subsystem.ThreadManagerSubsystem to class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
        "comment": "move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private logger : Logger from class org.terasology.engine.subsystem.ThreadManagerSubsystem to class org.terasology.engine.subsystem.common.ThreadManagerSubsystem",
        "comment": "move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private config : Config from class org.terasology.engine.TerasologyEngine to class org.terasology.engine.subsystem.common.ConfigurationSubsystem",
        "comment": "<p>The moved attribute config is used by the moved methods <span class='blob-code-inner'><span class='pl-en'>checkServerIdentity</span>()</span>, <span class='blob-code-inner'><span class='pl-en'>validateServerIdentity</span>(), <span class='pl-en'>preInitialise</span>(), <span class='pl-en'>shutdown</span>()<br /></span></p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Nikos"
    }],
    "refDiffExecutionTime": 2583
}, {
    "id": 1145557,
    "repository": "https://github.com/apache/camel.git",
    "sha1": "14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "url": "https://github.com/apache/camel/commit/14a7dd79148f9306dcd2f748b56fd6550e9406ab",
    "author": "Grzegorz Grzybek",
    "time": "7/20/15 9:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareDataFormat(log Log, project MavenProject, projectHelper MavenProjectHelper, dataFormatOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageDataFormatMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareLanguage(log Log, project MavenProject, projectHelper MavenProjectHelper, languageOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageLanguageMojo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5459
}, {
    "id": 1146371,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "7dd55014f9840ce03867bb175cf37a4c151dc806",
    "url": "https://github.com/JetBrains/intellij-community/commit/7dd55014f9840ce03867bb175cf37a4c151dc806",
    "author": "Sergey Malenkov",
    "time": "7/24/15 1:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createConfigurable(ep ConfigurableEP<T>, log boolean) : T extracted from public wrapConfigurable(ep ConfigurableEP<T>) : T in class com.intellij.openapi.options.ex.ConfigurableWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 16147
}, {
    "id": 1146445,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "9fbf6b852bd9766060307aff960fb597d55e24d3",
    "url": "https://github.com/JetBrains/intellij-community/commit/9fbf6b852bd9766060307aff960fb597d55e24d3",
    "author": "Maxim.Mossienko",
    "time": "7/23/15 8:06 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public clear() : void extracted from public close() : void in class com.intellij.util.io.CachingEnumerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 17250
}, {
    "id": 1146483,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "33b0ac3a029845f9c20f7f5967c03b31b24f3b4b",
    "url": "https://github.com/JetBrains/intellij-community/commit/33b0ac3a029845f9c20f7f5967c03b31b24f3b4b",
    "author": "Dennis Ushakov",
    "time": "7/23/15 6:15 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method private iterateRecursively(root VirtualFile, processor ContentIterator, indicator ProgressIndicator, visitedRoots Set<VirtualFile>, projectFileIndex ProjectFileIndex) : void from class com.intellij.util.indexing.FileBasedIndexImpl to public iterateRecursively(root VirtualFile, processor ContentIterator, indicator ProgressIndicator, visitedRoots Set<VirtualFile>, projectFileIndex ProjectFileIndex) : void from class com.intellij.util.indexing.FileBasedIndex",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 15934
}, {
    "id": 1146490,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6ff3fe00d7ffe04dbe0904b8bad98285b6988d6d",
    "url": "https://github.com/JetBrains/intellij-community/commit/6ff3fe00d7ffe04dbe0904b8bad98285b6988d6d",
    "author": "Nikolay Mikhaylov",
    "time": "7/23/15 3:21 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl to public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven3ServerEmbedder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl to public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven3ServerEmbedder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public customizeComponents() : void extracted from public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void in class org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public customizeComponents() : void extracted from public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void in class org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private doCustomizeComponents() : void extracted from public execute() : MavenServerExecutionResult in class org.jetbrains.idea.maven.server.MavenEmbedderWrapper$4",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 18395
}, {
    "id": 1146679,
    "repository": "https://github.com/JetBrains/intellij-plugins.git",
    "sha1": "0df7cb00757fe0d4fac8d8b0d5fc46af95feb238",
    "url": "https://github.com/JetBrains/intellij-plugins/commit/0df7cb00757fe0d4fac8d8b0d5fc46af95feb238",
    "author": "Konstantin Shcheglov",
    "time": "7/24/15 1:06 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public findPsiFile(project Project, path String) : PsiFile extracted from private getElementForNavigationTarget(project Project, target PluginNavigationTarget) : PsiElement in class com.jetbrains.lang.dart.resolve.DartResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1957
}, {
    "id": 1146882,
    "repository": "https://github.com/querydsl/querydsl.git",
    "sha1": "e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
    "url": "https://github.com/querydsl/querydsl/commit/e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
    "author": "Timo Westkämper",
    "time": "7/22/15 5:03 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private escapeLiteral(str String) : String from class com.querydsl.jpa.JPQLSerializer to private escapeLiteral(str String) : String from class com.querydsl.jpa.JPQLTemplates",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1147051,
    "repository": "https://github.com/PhilJay/MPAndroidChart.git",
    "sha1": "3514aaedf9624222c985cb3abb12df2d9b514b12",
    "url": "https://github.com/PhilJay/MPAndroidChart/commit/3514aaedf9624222c985cb3abb12df2d9b514b12",
    "author": "Philipp Jahoda",
    "time": "7/24/15 8:11 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.github.mikephil.charting.utils.Highlight moved to com.github.mikephil.charting.highlight.Highlight",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider renamed to com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected getStackedHighlight(xIndex int, dataSet int, yValue double) : Highlight from class com.github.mikephil.charting.charts.BarChart to protected getStackedHighlight(set BarDataSet, xIndex int, dataSetIndex int, yValue double) : Highlight from class com.github.mikephil.charting.highlight.BarHighlighter",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getHighlight(x float, y float) : Highlight extracted from public getHighlightByTouchPoint(x float, y float) : Highlight in class com.github.mikephil.charting.charts.BarLineChartBase",
        "comment": "<p>added</p><p>There is a new class being introduced that contains the extracted method. This&nbsp;extracted method contains part of the logic, other parts are extracted into other methods in the newly-added class and are called from the extracted method (the initial method seems to be an instance of the long method)</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1147092,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "url": "https://github.com/neo4j/neo4j/commit/4beba7bbdf927486a5cbf298a0fb2be50905a590",
    "author": "lutovich",
    "time": "7/22/15 7:06 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.store.PropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.PropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.store.RelationshipPropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.RelationshipPropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.store.NodePropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.NodePropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.store.UniquePropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.UniquePropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.store.MandatoryRelationshipPropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.MandatoryRelationshipPropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.store.MandatoryNodePropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.MandatoryNodePropertyConstraintRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6556
}, {
    "id": 1147192,
    "repository": "https://github.com/RoboBinding/RoboBinding.git",
    "sha1": "b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "url": "https://github.com/RoboBinding/RoboBinding/commit/b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
    "author": "weicheng113",
    "time": "7/24/15 8:26 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.robobinding.codegen.presentationmodel.nestedIPMexample to org.robobinding.codegen.presentationmodel.nestedIPM",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private removeItemPresentationModelFactoryMethod(dataSetProperties Collection<DataSetPropertyInfoImpl>) : void extracted from private processDataSetProperties() : void in class org.robobinding.codegen.presentationmodel.processor.PresentationModelInfoBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.Item moved to org.robobinding.codegen.presentationmodel.nestedIPM.Item",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.ItemPresentationModelExample moved to org.robobinding.codegen.presentationmodel.nestedIPM.ItemPresentationModelExample",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.PresentationModelExample moved to org.robobinding.codegen.presentationmodel.nestedIPM.PresentationModelExample",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.SubItemPresentationModelExample moved to org.robobinding.codegen.presentationmodel.nestedIPM.SubItemPresentationModelExample",
        "comment": "<p>added</p><p>Part of the rename pacakge</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.robobinding.codegen.presentationmodel.nestedIPMexample.SubItem moved to org.robobinding.codegen.presentationmodel.nestedIPM.SubItem",
        "comment": "<p>added</p><p>Part of the rename package</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1147348,
    "repository": "https://github.com/dropwizard/metrics.git",
    "sha1": "4c6ab3d77cc67c7a91155d884077520dcf1509c6",
    "url": "https://github.com/dropwizard/metrics/commit/4c6ab3d77cc67c7a91155d884077520dcf1509c6",
    "author": "Cirrus Pairing Station 5",
    "time": "7/23/15 8:02 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private closeGraphiteConnection() : void extracted from public report(gauges SortedMap<String,Gauge>, counters SortedMap<String,Counter>, histograms SortedMap<String,Histogram>, meters SortedMap<String,Meter>, timers SortedMap<String,Timer>) : void in class com.codahale.metrics.graphite.GraphiteReporter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1141
}, {
    "id": 1147442,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
    "url": "https://github.com/facebook/buck/commit/db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
    "author": "Miguel Augusto Pereira de Oliveira",
    "time": "7/24/15 9:44 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getTargetsAndDependencies(params CommandRunnerParams, argumentsFormattedAsBuildTargets List<String>, showTransitive boolean, showTests boolean, enableProfiling boolean) : Multimap<BuildTarget,BuildTarget> extracted from public runWithoutHelp(params CommandRunnerParams) : int in class com.facebook.buck.cli.AuditDependenciesCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3123
}, {
    "id": 1147466,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "a1525ac9a0bb8f727167a8be94c81a3415128ef4",
    "url": "https://github.com/facebook/buck/commit/a1525ac9a0bb8f727167a8be94c81a3415128ef4",
    "author": "Al Sutton",
    "time": "7/24/15 7:16 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getAllPathsWork(workingDir Path) : ImmutableBiMap<Path,Path> extracted from private getAllPaths(workingDir Optional<Path>) : ImmutableBiMap<Path,Path> in class com.facebook.buck.cxx.DebugPathSanitizer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6724
}, {
    "id": 1147574,
    "repository": "https://github.com/spotify/helios.git",
    "sha1": "687bda5a3ea1b5daae2764653843d318c77f4590",
    "url": "https://github.com/spotify/helios/commit/687bda5a3ea1b5daae2764653843d318c77f4590",
    "author": "David Xia",
    "time": "7/22/15 2:35 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public KAFKA_TOPIC : String from class com.spotify.helios.agent.TaskHistoryWriter to class com.spotify.helios.common.descriptors.TaskStatusEvent",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 947
}, {
    "id": 1147644,
    "repository": "https://github.com/linkedin/rest.li.git",
    "sha1": "f61db44ca4a862f1a84450643d92f85449016cfa",
    "url": "https://github.com/linkedin/rest.li/commit/f61db44ca4a862f1a84450643d92f85449016cfa",
    "author": "Keren Jin",
    "time": "7/23/15 6:42 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public generate(schema DataSchema) : ClassTemplateSpec inlined to private generateRecord(schema RecordDataSchema) : RecordTemplateSpec in class com.linkedin.pegasus.generator.TemplateSpecGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getSchemaAndNames() : Collection<CodeUtil.Pair<DataSchema,String>> renamed to public getSchemaAndLocations() : Collection<CodeUtil.Pair<DataSchema,DataSchemaLocation>> in class com.linkedin.pegasus.generator.DataSchemaParser.ParseResult",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public generate(schema DataSchema) : ClassTemplateSpec inlined to public generate(schema DataSchema, location DataSchemaLocation) : ClassTemplateSpec in class com.linkedin.pegasus.generator.TemplateSpecGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 1281
}, {
    "id": 1147651,
    "repository": "https://github.com/google/guava.git",
    "sha1": "31fc19200207ccadc45328037d8a2a62b617c029",
    "url": "https://github.com/google/guava/commit/31fc19200207ccadc45328037d8a2a62b617c029",
    "author": "bul",
    "time": "7/24/15 2:38 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private digit(c char) : int from class com.google.common.primitives.Ints to private digit(c char) : int from class com.google.common.primitives.Longs",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public tryParse(string String, radix int) : Long extracted from public tryParse(string String) : Long in class com.google.common.primitives.Longs",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private asciiDigits : byte[] from class com.google.common.primitives.Ints to class com.google.common.primitives.Longs",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public tryParse(string String, radix int) : Long extracted from package tryParse(string String, radix int) : Integer in class com.google.common.primitives.Ints",
        "comment": "<p>Extract and Move to the inner class</p><p>The method delegates to the other method which has been extracted within the same commit.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }],
    "refDiffExecutionTime": 1248
}, {
    "id": 1147835,
    "repository": "https://github.com/jersey/jersey.git",
    "sha1": "ee5aa50af6b4586fbe92cab718abfae8113a81aa",
    "url": "https://github.com/jersey/jersey/commit/ee5aa50af6b4586fbe92cab718abfae8113a81aa",
    "author": "Petr Bouda",
    "time": "7/22/15 12:37 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.NorwegianGoodbyeService moved to org.glassfish.jersey.examples.hello.spring.annotations.NorwegianGoodbyeService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.JerseyConfig moved to org.glassfish.jersey.examples.hello.spring.annotations.JerseyConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.EnglishGoodbyeService moved to org.glassfish.jersey.examples.hello.spring.annotations.EnglishGoodbyeService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.SpringRequestResourceTest moved to org.glassfish.jersey.examples.hello.spring.annotations.SpringRequestResourceTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.GoodbyeService moved to org.glassfish.jersey.examples.hello.spring.annotations.GoodbyeService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.SpringAnnotationConfig moved to org.glassfish.jersey.examples.hello.spring.annotations.SpringAnnotationConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.SpringRequestResource moved to org.glassfish.jersey.examples.hello.spring.annotations.SpringRequestResource",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.GreetingService moved to org.glassfish.jersey.examples.hello.spring.annotations.GreetingService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3514
}, {
    "id": 1148549,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "url": "https://github.com/apache/cassandra/commit/5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
    "author": "Robert Stupp",
    "time": "7/24/15 6:37 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected compose(argDataTypes DataType[], protocolVersion int, argIndex int, value ByteBuffer) : Object extracted from protected compose(protocolVersion int, argIndex int, value ByteBuffer) : Object in class org.apache.cassandra.cql3.functions.UDFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected decompose(dataType DataType, protocolVersion int, value Object) : ByteBuffer extracted from protected decompose(protocolVersion int, value Object) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.functions.JavaSourceUDFFactory renamed to org.apache.cassandra.cql3.functions.JavaBasedUDFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.apache.cassandra.cql3.functions.ScriptBasedUDF renamed to org.apache.cassandra.cql3.functions.ScriptBasedUDFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method package buildUDF(name FunctionName, argNames List, argTypes List, returnType AbstractType, calledOnNullInput boolean, body String) : UDFunction renamed to package JavaBasedUDFunction(name FunctionName, argNames List, argTypes List, returnType AbstractType, calledOnNullInput boolean, body String) in class org.apache.cassandra.cql3.functions.JavaBasedUDFunction",
        "comment": "Matin:TP",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected compose_int(protocolVersion int, argIndex int, value ByteBuffer) : int renamed to protected compose(argDataTypes DataType[], protocolVersion int, argIndex int, value ByteBuffer) : Object in class org.apache.cassandra.cql3.functions.UDFunction",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_boolean(protocolVersion int, argIndex int, value ByteBuffer) : boolean from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_boolean(protocolVersion int, argIndex int, value ByteBuffer) : boolean from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>Matin:TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_byte(protocolVersion int, argIndex int, value ByteBuffer) : byte from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_byte(protocolVersion int, argIndex int, value ByteBuffer) : byte from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>Matin:TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_double(protocolVersion int, argIndex int, value ByteBuffer) : double from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_double(protocolVersion int, argIndex int, value ByteBuffer) : double from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>Matin:TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_float(protocolVersion int, argIndex int, value ByteBuffer) : float from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_float(protocolVersion int, argIndex int, value ByteBuffer) : float from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>Matin:TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_long(protocolVersion int, argIndex int, value ByteBuffer) : long from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_long(protocolVersion int, argIndex int, value ByteBuffer) : long from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>Matin:TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_short(protocolVersion int, argIndex int, value ByteBuffer) : short from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_short(protocolVersion int, argIndex int, value ByteBuffer) : short from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>Matin:TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptBadReturnType() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptBadReturnType() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptFunction() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptFunction() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptSimpleCollections() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptSimpleCollections() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptThrow() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptThrow() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptTupleType() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptTupleType() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p><strong></strong>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptUTCollections() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptUTCollections() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testScriptParamReturnTypes() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testScriptParamReturnTypes() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testScriptReturnTypeCasting() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testScriptReturnTypeCasting() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptUserType() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptUserType() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public testJavascriptTupleTypeCollection() : void from class org.apache.cassandra.cql3.validation.entities.UFTest to public testJavascriptTupleTypeCollection() : void from class org.apache.cassandra.cql3.validation.entities.UFPureScriptTest",
        "comment": "<p>Matin: TP, it can be a rename class too</p><p>This is obviously Extract&nbsp;Class, because the target class did not exist in the previous version and the method bodies are identical. We mark these as CTP since none of the tools detect Extract Class refactorings.</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method protected compose_int(protocolVersion int, argIndex int, value ByteBuffer) : int from class org.apache.cassandra.cql3.functions.UDFunction to protected compose_int(protocolVersion int, argIndex int, value ByteBuffer) : int from class org.apache.cassandra.cql3.functions.JavaUDF",
        "comment": "<p>new</p><p>Extract class</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3887
}, {
    "id": 1148565,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "2b0a8f6bdac621badabcb9921c077260f2470c26",
    "url": "https://github.com/apache/cassandra/commit/2b0a8f6bdac621badabcb9921c077260f2470c26",
    "author": "Sylvain Lebresne",
    "time": "7/23/15 4:00 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public deleteRowAt(metadata CFMetaData, timestamp long, localDeletionTime int, key Object, clusteringValues Object[]) : Mutation extracted from public deleteRow(metadata CFMetaData, timestamp long, key Object, clusteringValues Object[]) : Mutation in class org.apache.cassandra.db.RowUpdateBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6434
}, {
    "id": 1148572,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "url": "https://github.com/apache/cassandra/commit/b70f7ea0ce27b5defa0a7773d448732364e7aee0",
    "author": "Paulo Motta",
    "time": "7/22/15 12:11 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private listSnapshots() : List<File> extracted from public getSnapshotDetails() : Map<String,Pair<Long,Long>> in class org.apache.cassandra.db.Directories",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3298
}, {
    "id": 1148642,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "681dc6346ce3cf5be5c5985faad120a18949cee0",
    "url": "https://github.com/gradle/gradle/commit/681dc6346ce3cf5be5c5985faad120a18949cee0",
    "author": "Darrell DeBoer",
    "time": "7/23/15 5:53 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createPlatformToolProvider(targetPlatform NativePlatformInternal) : PlatformToolProvider extracted from public select(targetPlatform NativePlatformInternal) : PlatformToolProvider in class org.gradle.nativeplatform.toolchain.internal.gcc.AbstractGccCompatibleToolChain",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5252
}, {
    "id": 1148739,
    "repository": "https://github.com/jenkinsci/workflow-plugin.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/pipeline-plugin.git",
    "sha1": "d0e374ce8ecb687b4dc046d1edea9e52da17706f",
    "url": "https://github.com/jenkinsci/workflow-plugin/commit/d0e374ce8ecb687b4dc046d1edea9e52da17706f",
    "author": "Jesse Glick",
    "time": "7/23/15 7:24 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute package SCRIPT : String from class org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory to class org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private setBranch(property BranchJobProperty, branch Branch, project WorkflowJob) : void inlined to public setBranch(project WorkflowJob, branch Branch) : WorkflowJob in class org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 406
}, {
    "id": 1148821,
    "repository": "https://github.com/robovm/robovm.git",
    "sha1": "1ef86e69d5a108c2b4d836b0634ebdea912cfe00",
    "url": "https://github.com/robovm/robovm/commit/1ef86e69d5a108c2b4d836b0634ebdea912cfe00",
    "author": "Niklas Therning",
    "time": "7/24/15 5:48 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package org.robovm.compiler.plugin.lambda2 to org.robovm.compiler.plugin.lambda",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.robovm.compiler.plugin.lambda2.LambdaClass moved to org.robovm.compiler.plugin.lambda.LambdaClass",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.robovm.compiler.plugin.lambda2.LambdaClassGenerator moved to org.robovm.compiler.plugin.lambda.LambdaClassGenerator",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.robovm.compiler.plugin.lambda2.LambdaPlugin moved to org.robovm.compiler.plugin.lambda.LambdaPlugin",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2974
}, {
    "id": 1149047,
    "repository": "https://github.com/spring-projects/spring-data-neo4j.git",
    "sha1": "ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "url": "https://github.com/spring-projects/spring-data-neo4j/commit/ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
    "author": "Luanne Misquitta",
    "time": "7/22/15 6:08 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.examples.friends.Person moved to org.springframework.data.neo4j.examples.friends.domain.Person",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.examples.friends.Friendship moved to org.springframework.data.neo4j.examples.friends.domain.Friendship",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.springframework.data.neo4j.examples.friends.FriendContext moved to org.springframework.data.neo4j.examples.friends.context.FriendContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1149312,
    "repository": "https://github.com/Atmosphere/atmosphere.git",
    "sha1": "69c229b7611ff8c6a20ff2d4da917a68c1cde64a",
    "url": "https://github.com/Atmosphere/atmosphere/commit/69c229b7611ff8c6a20ff2d4da917a68c1cde64a",
    "author": "jfarcand",
    "time": "7/22/15 3:38 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private getInheritedPrivateFields(type Class<?>) : Set<Field> from class org.atmosphere.inject.InjectableObjectFactory to public getInheritedPrivateFields(type Class<?>) : Set<Field> from class org.atmosphere.util.Utils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 658
}, {
    "id": 1149551,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "92e98858e742bbb669ccbf790a71a618c581df21",
    "url": "https://github.com/apache/hive/commit/92e98858e742bbb669ccbf790a71a618c581df21",
    "author": "Alan Gates",
    "time": "7/24/15 2:43 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public use(ctx ParserRuleContext, sql String) : Integer extracted from public use(ctx HplsqlParser.Use_stmtContext) : Integer in class org.apache.hive.hplsql.Stmt",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6300
}, {
    "id": 1149562,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "c53c6f45988db869d56abe3b1d831ff775f4fa73",
    "url": "https://github.com/apache/hive/commit/c53c6f45988db869d56abe3b1d831ff775f4fa73",
    "author": "Alan Gates",
    "time": "7/22/15 3:17 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private statsForOneColumnFromProtoBuf(partitionColumnStats ColumnStatistics, proto HbaseMetastoreProto.ColumnStats) : ColumnStatisticsObj extracted from package deserializeStatsForOneColumn(partitionColumnStats ColumnStatistics, bytes byte[]) : ColumnStatisticsObj in class org.apache.hadoop.hive.metastore.hbase.HBaseUtils",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private protoBufStatsForOneColumn(partitionColumnStats ColumnStatistics, colStats ColumnStatisticsObj) : HbaseMetastoreProto.ColumnStats extracted from package serializeStatsForOneColumn(partitionColumnStats ColumnStatistics, colStats ColumnStatisticsObj) : byte[] in class org.apache.hadoop.hive.metastore.hbase.HBaseUtils",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package getStatsCache() : StatsCache extracted from public get_aggr_stats_for(dbName String, tblName String, partNames List<String>, colNames List<String>) : AggrStats in class org.apache.hadoop.hive.metastore.hbase.HBaseStore & moved to class org.apache.hadoop.hive.metastore.hbase.HBaseReadWrite",
        "comment": "<p>added</p><p>To be checked with Nikos</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 55783
}, {
    "id": 1149690,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6905d569a1e39d0d7b1ec5ceee4f0bbe60b85947",
    "url": "https://github.com/JetBrains/intellij-community/commit/6905d569a1e39d0d7b1ec5ceee4f0bbe60b85947",
    "author": "liana.bakradze",
    "time": "7/24/15 4:28 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface com.jetbrains.edu.courseFormat.Named from class com.jetbrains.edu.courseFormat.Lesson",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface com.jetbrains.edu.courseFormat.Named from class com.jetbrains.edu.courseFormat.Task",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 14895
}, {
    "id": 1149788,
    "repository": "https://github.com/facebook/presto.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/presto.git",
    "sha1": "11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "url": "https://github.com/facebook/presto/commit/11048642b1e6b0e35efefab9e4e693b09c8753f5",
    "author": "Dain Sundstrom",
    "time": "7/25/15 2:59 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String from class com.facebook.presto.sql.planner.PlanPrinter to private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String from class com.facebook.presto.sql.planner.PlanPrinter.Visitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain<ColumnHandle>) : void from class com.facebook.presto.sql.planner.PlanPrinter to private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain<ColumnHandle>) : void from class com.facebook.presto.sql.planner.PlanPrinter.Visitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public commitCreateTable(tableHandle OutputTableHandle, fragments Collection) : void renamed to public commitInsert(session Session, tableHandle InsertTableHandle, fragments Collection) : void in class com.facebook.presto.metadata.MetadataManager",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public commitInsert(tableHandle InsertTableHandle, fragments Collection) : void renamed to public commitCreateTable(session Session, tableHandle OutputTableHandle, fragments Collection) : void in class com.facebook.presto.metadata.MetadataManager",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 9866
}, {
    "id": 1149799,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "021d17c8234904dcb1d54596662352395927fe7b",
    "url": "https://github.com/neo4j/neo4j/commit/021d17c8234904dcb1d54596662352395927fe7b",
    "author": "Rickard O?berg",
    "time": "7/25/15 7:28 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private singlePropertyCursor : InstanceCache<StoreSinglePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private allPropertyCursor : InstanceCache<StorePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private nodeDegreeByDirection(nodeId long, group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.DiskLayer to private nodeDegreeByDirection(group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.neo4j.kernel.impl.api.store.DiskLayer.AllStoreIdIterator moved to org.neo4j.kernel.impl.api.store.StoreStatement.AllStoreIdIterator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private singleLabelCursor : InstanceCache<StoreSingleLabelCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package GET_LABEL : ToIntFunction<LabelItem> from class org.neo4j.kernel.api.cursor.LabelItem to class org.neo4j.kernel.api.cursor.NodeItem",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction from class org.neo4j.kernel.impl.api.store.DiskLayer to private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private singlePropertyCursor : InstanceCache<StoreSinglePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private allPropertyCursor : InstanceCache<StorePropertyCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private countByFirstPrevPointer(nodeId long, relationshipId long) : long from class org.neo4j.kernel.impl.api.store.DiskLayer to private countByFirstPrevPointer(relationshipId long) : long from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private labelCursor : InstanceCache<StoreLabelCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private nodeRelationshipCursor : InstanceCache<StoreNodeRelationshipCursor> from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.cursor.EntityItem.EntityItemHelper from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.cursor.EntityItem.EntityItemHelper from class org.neo4j.kernel.impl.api.cursor.TxAbstractRelationshipCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper from class org.neo4j.kernel.impl.api.cursor.TxAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public nodesGetAllCursor(statement StoreStatement) : Cursor from class org.neo4j.kernel.impl.api.store.DiskLayer to public nodesGetAllCursor() : Cursor from class org.neo4j.kernel.impl.api.store.StoreStatement",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public relationshipsGetAllCursor(storeStatement StoreStatement) : Cursor from class org.neo4j.kernel.impl.api.store.DiskLayer to public relationshipsGetAllCursor() : Cursor from class org.neo4j.kernel.impl.api.store.StoreStatement",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel1(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteRel2(rel long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty, firstNode long, secondNode long, relType int) : void in class org.neo4j.kernel.impl.store.TestNeoStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public acquireLabelCursor(labels long[]) : Cursor inlined to public labels() : Cursor in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public acquirePropertyCursor(firstPropertyRecordId long) : Cursor inlined to public properties() : Cursor in class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public acquirePropertyCursor(firstPropertyRecordId long) : Cursor inlined to public properties() : Cursor in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public acquireSingleLabelCursor(labels long[], labelId int) : Cursor inlined to public label(labelId int) : Cursor in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": "<p>acquireSingleLabelCursor(..) is in StoreStatement in the before refactoring version</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public acquireSinglePropertyCursor(firstPropertyRecordId long, propertyKeyId int) : Cursor inlined to public property(propertyKeyId int) : Cursor in class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor",
        "comment": "<p>acquireSinglePropertyCursor(..) is in StoreStatement in the before refactoring version</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public acquireSinglePropertyCursor(firstPropertyRecordId long, propertyKeyId int) : Cursor inlined to public property(propertyKeyId int) : Cursor in class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor",
        "comment": "<p>acquireSinglePropertyCursor(..) is in StoreStatement in the before refactoring version</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 15734
}, {
    "id": 1149802,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "4712de476aabe69cd762233c9641dd3cf9f8361b",
    "url": "https://github.com/neo4j/neo4j/commit/4712de476aabe69cd762233c9641dd3cf9f8361b",
    "author": "Anton Persson",
    "time": "7/23/15 10:19 AM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected runInternalArnoldi(iterations int) : int renamed to protected runInternalIteration() : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public runIterations(maxNrIterations int) : int renamed to public runInternalIteration() : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower",
        "comment": "Matin: TP",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected changeSignBasedOnFirstNoneZeroValue() : void extracted from public runIterations(maxNrIterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "comment": "<p>Extract and Move to the inner class</p><p>Note also the pull-up method. The extracted method have some additional statements as well.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected incrementTotalIterations() : void extracted from public runIterations(maxNrIterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower",
        "comment": "<p>Extract and Move to the inner class</p><p>Extract and pull up actually</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected incrementTotalIterations() : void extracted from protected runInternalArnoldi(iterations int) : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi",
        "comment": "<p>Extract and Move to the inner class</p><p>Extract and pull up actually</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }],
    "refDiffExecutionTime": 11263
}, {
    "id": 1150162,
    "repository": "https://github.com/checkstyle/checkstyle.git",
    "sha1": "2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "url": "https://github.com/checkstyle/checkstyle/commit/2f7481ee4e20ae785298c31ec2f979752dd7eb03",
    "author": "liscju",
    "time": "7/25/15 1:14 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private checkInterfaceModifiers(ast DetailAST) : void extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private checkEnumConstructorModifiers(ast DetailAST) : void extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
        "comment": "Can be TP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isEnumMember(ast DetailAST) : boolean extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 2079
}, {
    "id": 1150188,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "573a1d115b86abbe3fb53ff930464d7d8fd95600",
    "url": "https://github.com/apache/cassandra/commit/573a1d115b86abbe3fb53ff930464d7d8fd95600",
    "author": "Brandon Williams",
    "time": "7/24/15 5:41 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public incrementDroppedMessages(verb Verb, isCrossNodeTimeout boolean) : void extracted from public incrementDroppedMessages(verb Verb) : void in class org.apache.cassandra.net.MessagingService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package getDroppedMessagesLogs() : List<String> extracted from private logDroppedMessages() : void in class org.apache.cassandra.net.MessagingService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private incrementDroppedMessages(droppedMessages DroppedMessages, isCrossNodeTimeout boolean) : void extracted from private incrementRejectedMessages(verb Verb) : void in class org.apache.cassandra.net.MessagingService",
        "comment": "<p>There is only one statement extracted!</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 4492
}, {
    "id": 1150361,
    "repository": "https://github.com/skylot/jadx.git",
    "sha1": "2d8d4164830631d3125575f055b417c5addaa22f",
    "url": "https://github.com/skylot/jadx/commit/2d8d4164830631d3125575f055b417c5addaa22f",
    "author": "Skylot",
    "time": "7/26/15 11:19 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public getJavaNodeAtPosition(line int, offset int) : JavaNode extracted from public getDefinitionPosition(line int, offset int) : CodePosition in class jadx.api.JavaClass",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public getDefinitionPosition(javaNode JavaNode) : CodePosition extracted from public getDefinitionPosition(line int, offset int) : CodePosition in class jadx.api.JavaClass",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public length() : int renamed to public bufLength() : int in class jadx.core.codegen.CodeWriter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public getAllRegionBlocks(container IContainer, blocks Set) : void in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public isRegionContainsBlock(container IContainer, block BlockNode) : boolean in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public getBlockContainer(container IContainer, block BlockNode) : IContainer in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public isDominatedBy(dom BlockNode, cont IContainer) : boolean in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public hasPathThroughBlock(block BlockNode, cont IContainer) : boolean in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public hasExitEdge(container IContainer) : boolean in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public getLastInsn(container IContainer) : InsnNode in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public hasExitBlock(container IContainer) : boolean in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public insnsCount(container IContainer) : int in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected unknownContainerType(container IContainer) : String extracted from public notEmpty(container IContainer) : boolean in class jadx.core.utils.RegionUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hashCode() : int from class jadx.core.codegen.CodeWriter to public hashCode() : int from class jadx.api.JavaField",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 975
}, {
    "id": 1150432,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "c1359c843bd03a694f846c8140e24ed646bbb913",
    "url": "https://github.com/VoltDB/voltdb/commit/c1359c843bd03a694f846c8140e24ed646bbb913",
    "author": "Huzefa Hakimi",
    "time": "7/27/15 7:07 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testBasicCreateIndex() : void in class org.voltdb.TestAdhocCreateDropIndex",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createSchema(config VoltDB.Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testCreateDropIndexonView() : void in class org.voltdb.TestAdhocCreateDropIndex",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1150588,
    "repository": "https://github.com/openhab/openhab.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/openhab1-addons.git",
    "sha1": "f25fa3ae35e4a60a2b7f79a88f14d46ce6cebf55",
    "url": "https://github.com/openhab/openhab/commit/f25fa3ae35e4a60a2b7f79a88f14d46ce6cebf55",
    "author": "Thomas Eichstädt-Engelen",
    "time": "7/27/15 7:48 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private initTimeMap() : Map<String,Integer> extracted from public parameters() : Collection<Object[]> in class org.openhab.core.library.types.DateTimeTypeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2313
}, {
    "id": 1150594,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "url": "https://github.com/hazelcast/hazelcast/commit/f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
    "author": "Jaromir Hamala",
    "time": "7/27/15 10:56 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.RegexPredicate moved to com.hazelcast.query.impl.predicates.RegexPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.OrPredicate moved to com.hazelcast.query.impl.predicates.OrPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.EqualPredicate moved to com.hazelcast.query.impl.predicates.EqualPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.InstanceOfPredicate moved to com.hazelcast.query.impl.predicates.InstanceOfPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.NotPredicate moved to com.hazelcast.query.impl.predicates.NotPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.GreaterLessPredicate moved to com.hazelcast.query.impl.predicates.GreaterLessPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.AndPredicate moved to com.hazelcast.query.impl.predicates.AndPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.LikePredicate moved to com.hazelcast.query.impl.predicates.LikePredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.BetweenPredicate moved to com.hazelcast.query.impl.predicates.BetweenPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.InPredicate moved to com.hazelcast.query.impl.predicates.InPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.AbstractPredicate moved to com.hazelcast.query.impl.predicates.AbstractPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.NotEqualPredicate moved to com.hazelcast.query.impl.predicates.NotEqualPredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.hazelcast.query.Predicates.ILikePredicate moved to com.hazelcast.query.impl.predicates.ILikePredicate",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private readAttribute(entry Map.Entry, attribute String) : Comparable from class com.hazelcast.query.Predicates to package readAttribute(entry Map.Entry, attribute String) : Comparable from class com.hazelcast.query.impl.predicates.AttributeUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 3556
}, {
    "id": 1150670,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "03ece4f24163204d8a3948eb53576f1feaa86a61",
    "url": "https://github.com/neo4j/neo4j/commit/03ece4f24163204d8a3948eb53576f1feaa86a61",
    "author": "Chris Vest",
    "time": "7/27/15 6:06 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private fileLock : FileLock from class org.neo4j.kernel.impl.store.CommonAbstractStore to class org.neo4j.io.pagecache.impl.SingleFilePageSwapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private fileLock : FileLock from class org.neo4j.kernel.impl.store.standard.StoreOpenCloseCycle to class org.neo4j.io.pagecache.impl.SingleFilePageSwapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected releaseFileLockAndCloseFileChannel() : void renamed to protected closeFileChannel() : void in class org.neo4j.kernel.impl.store.CommonAbstractStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private storeLockException(message String, e Exception) : StoreLockException extracted from public checkLock(storeDir File) : void in class org.neo4j.kernel.StoreLocker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 4635
}, {
    "id": 1150845,
    "repository": "https://github.com/jOOQ/jOOQ.git",
    "sha1": "227254cf769f3e821ed1b2ef2d88c4ec6b20adea",
    "url": "https://github.com/jOOQ/jOOQ/commit/227254cf769f3e821ed1b2ef2d88c4ec6b20adea",
    "author": "lukaseder",
    "time": "7/27/15 10:32 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(stream OutputStream, header boolean) : void extracted from public formatCSV(stream OutputStream) : void in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(writer Writer, header boolean) : void extracted from public formatCSV(writer Writer) : void in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(header boolean) : String extracted from public formatCSV() : String in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(header boolean, delimiter char, nullString String) : String extracted from public formatCSV(delimiter char, nullString String) : String in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(header boolean, delimiter char) : String extracted from public formatCSV(delimiter char) : String in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(writer Writer, header boolean, delimiter char) : void extracted from public formatCSV(writer Writer, delimiter char) : void in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(stream OutputStream, header boolean, delimiter char, nullString String) : void extracted from public formatCSV(stream OutputStream, delimiter char, nullString String) : void in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(writer Writer, header boolean, delimiter char, nullString String) : void extracted from public formatCSV(writer Writer, delimiter char, nullString String) : void in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public formatCSV(stream OutputStream, header boolean, delimiter char) : void extracted from public formatCSV(stream OutputStream, delimiter char) : void in class org.jooq.impl.ResultImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3730
}, {
    "id": 1151028,
    "repository": "https://github.com/apache/giraph.git",
    "sha1": "03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "url": "https://github.com/apache/giraph/commit/03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
    "author": "Hassan Eslami",
    "time": "7/27/15 4:20 PM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private edgeStore : EdgeStore<I,V,E> from class org.apache.giraph.comm.ServerData to class org.apache.giraph.partition.SimplePartitionStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private edgeStore : EdgeStore from class org.apache.giraph.comm.ServerData to class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "<p>Matin: FP</p><p>Davood: I'd mark this as FP. The attribute is deleted from&nbsp;ServerData but it appears now in two classes,&nbsp;org.apache.giraph.partition.SimplePartitionStore and org.apache.giraph.ooc.DiskBackedPartitionStore with similar uses, none of which is used in&nbsp;ServerData</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public deletePartitionFiles(id Integer) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to public deletePartitionFiles(id Integer) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getEdgesPath(partitionId Integer) : String from class org.apache.giraph.partition.DiskBackedPartitionStore to private getEdgesPath(partitionId Integer) : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getNumPartitions() : int from class org.apache.giraph.partition.DiskBackedPartitionStore to public getNumPartitions() : int from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPartitionIds() : Iterable from class org.apache.giraph.partition.DiskBackedPartitionStore to public getPartitionIds() : Iterable from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getPartitionPath(partitionId Integer) : String from class org.apache.giraph.partition.DiskBackedPartitionStore to private getPartitionPath(partitionId Integer) : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getVerticesPath(partitionId Integer) : String from class org.apache.giraph.partition.DiskBackedPartitionStore to private getVerticesPath(partitionId Integer) : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public hasPartition(id Integer) : boolean from class org.apache.giraph.partition.DiskBackedPartitionStore to public hasPartition(id Integer) : boolean from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private readOutEdges(in DataInput, partition Partition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private readOutEdges(in DataInput, partition Partition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private readVertexData(in DataInput, vertex Vertex) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private readVertexData(in DataInput, vertex Vertex) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.apache.giraph.partition.DiskBackedPartitionStore to public toString() : String from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private writeOutEdges(output DataOutput, vertex Vertex) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private writeOutEdges(output DataOutput, vertex Vertex) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private writeVertexData(output DataOutput, vertex Vertex) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private writeVertexData(output DataOutput, vertex Vertex) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getEdgeCount() : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getEdgeCount() : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getId() : int from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getId() : int from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPartition() : Partition from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getPartition() : Partition from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPrevVertexCount() : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getPrevVertexCount() : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getState() : State from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getState() : State from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getVertexCount() : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public getVertexCount() : long from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setPartition(partition Partition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setPartition(partition Partition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setPrevVertexCount(vertexCount long) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setPrevVertexCount(vertexCount long) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setState(state State) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setState(state State) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setActive(partition Partition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setActive(partition Partition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setOnDisk(partition Partition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public setOnDisk() : void from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toString() : String from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to public toString() : String from class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPartitionEdgeCount(partitionId int) : long from class org.apache.giraph.partition.DiskBackedPartitionStore to public getPartitionEdgeCount(partitionId Integer) : long from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getPartitionVertexCount(partitionId int) : long from class org.apache.giraph.partition.DiskBackedPartitionStore to public getPartitionVertexCount(partitionId Integer) : long from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private offloadPartition(meta MetaPartition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to private offloadPartition(meta MetaPartition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private putPartition(meta MetaPartition) : void from class org.apache.giraph.partition.DiskBackedPartitionStore to public putPartition(partition Partition) : void from class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getPartition(partitionStore PartitionStore, partitionId int) : Partition extracted from public testReadWrite(partitionStore PartitionStore, conf ImmutableClassesGiraphConfiguration) : void in class org.apache.giraph.partition.TestPartitionStores",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private basePaths : String[] from class org.apache.giraph.partition.DiskBackedPartitionStore to class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private hasher : HashFunction from class org.apache.giraph.partition.DiskBackedPartitionStore to class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private edgeCount : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private id : int from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private state : State from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private partition : Partition from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private prevVertexCount : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private vertexCount : long from class org.apache.giraph.partition.DiskBackedPartitionStore.MetaPartition to class org.apache.giraph.ooc.DiskBackedPartitionStore.MetaPartition",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private conf : ImmutableClassesGiraphConfiguration from class org.apache.giraph.partition.DiskBackedPartitionStore to class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private context : Context from class org.apache.giraph.partition.DiskBackedPartitionStore to class org.apache.giraph.ooc.DiskBackedPartitionStore",
        "comment": "it is a Move Class",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public addPartitionVertices(partitionId Integer, extendedDataOutput ExtendedDataOutput) : void extracted from public doRequest(serverData ServerData<I,V,E>) : void in class org.apache.giraph.comm.requests.SendWorkerVerticesRequest & moved to class org.apache.giraph.partition.SimplePartitionStore",
        "comment": "<p>added</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 2713
}, {
    "id": 1151109,
    "repository": "https://github.com/selendroid/selendroid.git",
    "sha1": "e4a309c160285708f917ea23238573da3b677f7f",
    "url": "https://github.com/selendroid/selendroid/commit/e4a309c160285708f917ea23238573da3b677f7f",
    "author": "Viacheslav Frolov",
    "time": "7/27/15 8:36 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected toByteArray(image BufferedImage) : byte[] extracted from public takeScreenshot() : byte[] in class io.selendroid.standalone.android.impl.AbstractDevice",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 387
}, {
    "id": 1151129,
    "repository": "https://github.com/google/closure-compiler.git",
    "sha1": "545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "url": "https://github.com/google/closure-compiler/commit/545a7d027b4c55c116dc52d9cd8121fbb09777f0",
    "author": "lgong",
    "time": "7/27/15 8:33 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoResolvedType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnionType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.RecordType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.TemplatizedType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.PrototypeObjectType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.ProxyObjectType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumElementType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoObjectType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnknownType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method package isSubtype(typeA ObjectType, typeB RecordType, implicitImplCache ImplCache) : boolean extracted from package isSubtype(typeA ObjectType, typeB RecordType) : boolean in class com.google.javascript.rhino.jstype.RecordType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected isSubtype(other JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(other JSType) : boolean in class com.google.javascript.rhino.jstype.ArrowType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected implicitMatch(rightType JSType, leftType JSType, implicitImplCache ImplCache) : boolean extracted from package isSubtypeHelper(thisType JSType, thatType JSType) : boolean in class com.google.javascript.rhino.jstype.JSType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public usesImplicitMatch() : boolean renamed to public isStructuralInterface() : boolean in class com.google.javascript.rhino.jstype.FunctionType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3978
}, {
    "id": 1151360,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "4ccc0c37aabbd90ecaa36fcc491e2270e7e9bea6",
    "url": "https://github.com/apache/hive/commit/4ccc0c37aabbd90ecaa36fcc491e2270e7e9bea6",
    "author": "Sushanth Sowmyan",
    "time": "7/27/15 1:29 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private restoreLocalInfoFromTableInfo() : void extracted from package setTableInfo(thatTableInfo HCatTableInfo) : void in class org.apache.hive.hcatalog.mapreduce.PartInfo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private restoreLocalInfoFromTableInfo() : void extracted from private writeObject(oos ObjectOutputStream) : void in class org.apache.hive.hcatalog.mapreduce.PartInfo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private dedupWithTableInfo() : void extracted from private writeObject(oos ObjectOutputStream) : void in class org.apache.hive.hcatalog.mapreduce.PartInfo",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5625
}, {
    "id": 1151664,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "url": "https://github.com/hazelcast/hazelcast/commit/e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
    "author": "As?m Arslan",
    "time": "7/28/15 5:19 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public DATA_FULL_NAME : String from class com.hazelcast.client.protocol.generator.CodecModel to class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createCodecModel(methodElement ExecutableElement, lang Lang) : CodecModel extracted from public generateCodec(methodElement ExecutableElement, lang Lang) : void in class com.hazelcast.client.protocol.generator.CodecCodeGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public convertTypeToCSharp(type String) : String from class com.hazelcast.client.protocol.generator.CodecModel.ParameterModel to public convertTypeToCSharp(type String) : String from class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getKeyTypeInsideMap(type String) : String renamed to public getFirstGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getTypeInsideCollection(type String) : String renamed to public getGenericType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getTypeInsideData(type String) : String renamed to public getArrayType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getValueTypeInsideMap(type String) : String renamed to public getSecondGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public calculateStringDataSize(string String) : int renamed to public calculateDataSize(string String) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public calculateByteArrayDataSize(bytes byte[]) : int renamed to public calculateDataSize(bytes byte[]) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1902
}, {
    "id": 1151667,
    "repository": "https://github.com/hazelcast/hazelcast.git",
    "sha1": "204bf49cba03fe5d581a35ff82dd22587a681f46",
    "url": "https://github.com/hazelcast/hazelcast/commit/204bf49cba03fe5d581a35ff82dd22587a681f46",
    "author": "Mehmet Dogan",
    "time": "7/28/15 4:32 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createConfig() : Config extracted from private testWaitNotifyService_whenNodeSplitFromCluster(action SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private createConfig() : Config extracted from private testWaitingInvocations_whenNodeSplitFromCluster(splitAction SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterSlave(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterMaster(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTcpIp__ClusterMerge() : void renamed to public testTcpIp_ClusterMerge() : void in class com.hazelcast.cluster.SplitBrainHandlerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private isJoinRequestFromAnExistingMember(joinRequest JoinRequest, connection Connection) : boolean renamed to private checkIfJoinRequestFromAnExistingMember(joinMessage JoinMessage, connection Connection) : boolean in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method package sendSplitBrainJoinMessage(target Address) : JoinMessage extracted from public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.TcpIpJoiner & moved to class com.hazelcast.cluster.impl.AbstractJoiner",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public getMemberAddresses() : Collection extracted from public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.TcpIpJoiner",
        "comment": "<p>Extract and Move to the inner class</p><p>This would be Extract and Move. The called method is not doing the same thing as the original code though</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public onHeartbeat(member MemberImpl) : void extracted from public connectionAdded(connection Connection) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public createJoinRequest() : JoinRequest inlined to public searchForOtherClusters() : void in class com.hazelcast.cluster.impl.MulticastJoiner",
        "comment": "<p>1) The inlined method is in another class</p><p>2) It has not been deleted from the original class</p><p>3) The method is still calling the method being reported as inlined, with one extra param</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 3496
}, {
    "id": 1151684,
    "repository": "https://github.com/wildfly/wildfly.git",
    "sha1": "d7675fb0b19d3d22978e79954f441eeefd74a3b2",
    "url": "https://github.com/wildfly/wildfly/commit/d7675fb0b19d3d22978e79954f441eeefd74a3b2",
    "author": "sdirbach",
    "time": "7/26/15 5:51 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private handleExcludeMethods(componentDescription EJBComponentDescription, excludeList ExcludeListMetaData) : void extracted from protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class<?>, componentDescription EJBComponentDescription) : void in class org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private handleMethodPermissions(componentDescription EJBComponentDescription, methodPermissions MethodPermissionsMetaData) : void extracted from protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class<?>, componentDescription EJBComponentDescription) : void in class org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6455
}, {
    "id": 1151782,
    "repository": "https://github.com/osmandapp/Osmand.git",
    "sha1": "e95aa8ab32a0334b9c941799060fd601297d05e4",
    "url": "https://github.com/osmandapp/Osmand/commit/e95aa8ab32a0334b9c941799060fd601297d05e4",
    "author": "GaidamakUA",
    "time": "7/28/15 1:13 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public showItemPopupOptionsMenu(point FavouritePoint, activity Activity, view View) : void extracted from public onListItemClick(l ListView, v View, position int, id long) : void in class net.osmand.plus.activities.FavoritesListFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public showItemPopupOptionsMenu(point FavouritePoint, view View) : void extracted from public onChildClick(parent ExpandableListView, v View, groupPosition int, childPosition int, id long) : boolean in class net.osmand.plus.activities.FavoritesTreeFragment",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2032
}, {
    "id": 1151859,
    "repository": "https://github.com/alibaba/druid.git",
    "sha1": "87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "url": "https://github.com/alibaba/druid/commit/87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
    "author": "shaojin.wensj",
    "time": "7/28/15 11:24 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected printJoinType(joinType JoinType) : void extracted from public visit(x SQLJoinTableSource) : boolean in class com.alibaba.druid.sql.visitor.SQLASTOutputVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected printJoinType(joinType JoinType) : void extracted from public visit(x SQLJoinTableSource) : boolean in class com.alibaba.druid.sql.dialect.odps.visitor.OdpsOutputVisitor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1637
}, {
    "id": 1151906,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "ecd0ad5ab99b8d14f28881cf4f49ec01f2221776",
    "url": "https://github.com/facebook/buck/commit/ecd0ad5ab99b8d14f28881cf4f49ec01f2221776",
    "author": "Martino Luca",
    "time": "7/28/15 3:36 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private computeRuleFlags(source CxxSource) : ImmutableList<String> extracted from public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private computePlatformCompilerFlags(pic PicType, source CxxSource) : ImmutableList<String> extracted from public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private computePlatformFlags(pic PicType, source CxxSource) : ImmutableList<String> extracted from public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private computeRuleCompilerFlags(source CxxSource) : ImmutableList<String> extracted from public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private computeSourcePreprocessorAndToolDeps(toolOptional Optional, source CxxSource) : ImmutableSortedSet extracted from public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private computeSourcePreprocessorAndToolDeps(toolOptional Optional, source CxxSource) : ImmutableSortedSet extracted from public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 2426
}, {
    "id": 1151927,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "url": "https://github.com/facebook/buck/commit/6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
    "author": "Uri Baghin",
    "time": "7/28/15 3:32 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public sanitize(workingDir Optional<Path>, contents String, expandPaths boolean) : String inlined to public sanitize(workingDir Optional<Path>, contents String) : String in class com.facebook.buck.cxx.DebugPathSanitizer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sanitizeWithoutAnyMatchesWithExpandPaths() : void renamed to public sanitizeWithoutAnyMatches() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "comment": "<p>This is similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1151927/3535</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sanitizeProjectRootWithoutExpandPaths() : void renamed to public sanitizeProjectRoot() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sanitizeDirectoriesThatArePrefixOfOtherDirectoriesWithoutExpandPaths() : void renamed to public sanitizeDirectoriesThatArePrefixOfOtherDirectories() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sanitizeOtherDirectoriesWithoutExpandPaths() : void renamed to public sanitizeOtherDirectories() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public sanitizeWithoutAnyMatchesWithoutExpandPaths() : void renamed to public sanitizeWithoutAnyMatches() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest",
        "comment": "<p>Matin: FP</p><p>This is similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1151927/3531</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }],
    "refDiffExecutionTime": 2795
}, {
    "id": 1152026,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "7744a00629514b9539acac05596d64af878fe747",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/7744a00629514b9539acac05596d64af878fe747",
    "author": "Andreas Schildbach",
    "time": "7/28/15 5:14 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private testCachedParsing(lazy boolean) : void inlined to public testCachedParsing() : void in class org.bitcoinj.core.BitcoinSerializerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method protected parseTransactions() : void inlined to protected parse() : void in class org.bitcoinj.core.Block",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method protected parseHeader() : void inlined to protected parse() : void in class org.bitcoinj.core.Block",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public getMessageSize() : int inlined to protected parse() : void in class org.bitcoinj.core.AddressMessage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.bitcoinj.core.LazyParseByteCacheTest renamed to org.bitcoinj.core.ParseByteCacheTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected parseLite() : void renamed to protected parse() : void in class org.bitcoinj.core.RejectMessage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method protected parseLite() : void renamed to protected parse() : void in class org.bitcoinj.core.TransactionOutput",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTransactionsLazyNoRetain() : void renamed to public testTransactionsNoRetain() : void in class org.bitcoinj.core.ParseByteCacheTest",
        "comment": "<p>Matin: FP</p><p>Nikos: The method bodies are identical with only one parameter removed.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTransactionsLazyRetain() : void renamed to public testTransactionsRetain() : void in class org.bitcoinj.core.ParseByteCacheTest",
        "comment": "<p>Matin: FP</p><p>Nikos: The method bodies are identical with only one parameter removed.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Inline Method",
        "description": "Inline Method protected parseLite() : void inlined to protected parse() : void in class org.bitcoinj.core.RejectMessage",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1735
}, {
    "id": 1152033,
    "repository": "https://github.com/bitcoinj/bitcoinj.git",
    "sha1": "12602650ce99f34cb530fc24266c23e39733b0bb",
    "url": "https://github.com/bitcoinj/bitcoinj/commit/12602650ce99f34cb530fc24266c23e39733b0bb",
    "author": "Ross Nicoll",
    "time": "7/28/15 7:20 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public makeInventoryMessage(payloadBytes byte[], length int) : InventoryMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeAddressMessage(payloadBytes byte[], length int) : AddressMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected parseTransactions(transactionsOffset int) : void extracted from protected parseTransactions() : void in class org.bitcoinj.core.Block",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeTransaction(payloadBytes byte[], offset int, length int, hash byte[]) : Transaction extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeBlock(payloadBytes byte[], length int) : Block extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeBloomFilter(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeAlertMessage(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeBlock(payloadBytes byte[], length int) : Block extracted from public getBlocksToTest(runBarelyExpensiveTests boolean, runExpensiveTests boolean, blockStorageFile File) : RuleList in class org.bitcoinj.core.FullBlockTestGenerator",
        "comment": "<p>Extract and Move to the inner class</p><p>Why didn't&nbsp;RefactoringMiner find this one?</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeBlock(payloadBytes byte[], length int) : Block extracted from package parse() : void in class org.bitcoinj.core.HeadersMessage",
        "comment": "<p>Extract and Move to the inner class</p><p>Why didn't RefactoringMiner detect this case?</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public makeFilteredBlock(payloadBytes byte[]) : FilteredBlock extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from public testLazyParsing() : void in class org.bitcoinj.core.BitcoinSerializerTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from private testCachedParsing(lazy boolean) : void in class org.bitcoinj.core.BitcoinSerializerTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Automatic"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testHeaderParse() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public getBlocksToTest(runBarelyExpensiveTests boolean, runExpensiveTests boolean, blockStorageFile File) : RuleList in class org.bitcoinj.core.FullBlockTestGenerator & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public deserializeCompact(params NetworkParameters, buffer ByteBuffer) : StoredBlock in class org.bitcoinj.core.StoredBlock & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testBitcoinSerialization() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>There is only one statement (a class instance creation) which is being extracted, I'd mark it as TP</p><p>&nbsp;</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testDate() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from public testTransaction(params NetworkParameters, txBytes byte[], isChild boolean, lazy boolean, retain boolean) : void in class org.bitcoinj.core.LazyParseByteCacheTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testLastBlockSeenHash() : void in class org.bitcoinj.store.WalletProtobufSerializerTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from package parse() : void in class org.bitcoinj.core.FilteredBlock & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testBadTransactions() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testBlockVerification() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public getSerializer(parseLazy boolean, parseRetain boolean) : BitcoinSerializer extracted from public testBlock(blockBytes byte[], isChild boolean, lazy boolean, retain boolean) : void in class org.bitcoinj.core.LazyParseByteCacheTest & moved to class org.bitcoinj.params.AbstractBitcoinNetParams",
        "comment": "<p>added</p><p>Similar to 4565</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testProofOfWork() : void in class org.bitcoinj.core.BlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public get(hash Sha256Hash, wasUndoableOnly boolean) : StoredBlock in class org.bitcoinj.store.DatabaseFullPrunedBlockStore & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from private loadNextBlock() : void in class org.bitcoinj.utils.BlockFileLoader & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Extract And Move Method",
        "description": "Extract And Move Method public makeBlock(payloadBytes byte[]) : Block extracted from public testReceiveCoinbaseTransaction() : void in class org.bitcoinj.core.CoinbaseBlockTest & moved to class org.bitcoinj.core.BitcoinSerializer",
        "comment": "<p>added</p><p>Similar to 4564</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 3030
}, {
    "id": 1152218,
    "repository": "https://github.com/spring-projects/spring-roo.git",
    "sha1": "0bb4cca1105fc6eb86e7c4b75bfff3dbbd55f0c8",
    "url": "https://github.com/spring-projects/spring-roo/commit/0bb4cca1105fc6eb86e7c4b75bfff3dbbd55f0c8",
    "author": "Juan Carlos García",
    "time": "7/28/15 5:42 AM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method public getGenericDefinition() : String from class org.springframework.roo.classpath.details.MethodMetadataBuilder to public getGenericDefinition() : String from class org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private genericDefinition : String from class org.springframework.roo.classpath.details.MethodMetadataBuilder to class org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public setGenericDefinition(definition String) : void from class org.springframework.roo.classpath.details.MethodMetadataBuilder to public setGenericDefinition(genericDefinition String) : void from class org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1124
}, {
    "id": 1152344,
    "repository": "https://github.com/eclipse/vert.x.git",
    "sha1": "0ef66582ffaba9a8df1cad846880df2074d34505",
    "url": "https://github.com/eclipse/vert.x/commit/0ef66582ffaba9a8df1cad846880df2074d34505",
    "author": "Julien Viet",
    "time": "7/27/15 10:38 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public ClientOptionsBase(json JsonObject) in class io.vertx.core.net.ClientOptionsBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public TCPSSLOptions(json JsonObject) in class io.vertx.core.net.TCPSSLOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public NetClientOptions(json JsonObject) in class io.vertx.core.net.NetClientOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public NetClientOptions() in class io.vertx.core.net.NetClientOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public NetServerOptions(json JsonObject) in class io.vertx.core.net.NetServerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public NetServerOptions() in class io.vertx.core.net.NetServerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public HttpClientOptions(json JsonObject) in class io.vertx.core.http.HttpClientOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public HttpClientOptions() in class io.vertx.core.http.HttpClientOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public HttpServerOptions(json JsonObject) in class io.vertx.core.http.HttpServerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public HttpServerOptions() in class io.vertx.core.http.HttpServerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public TCPSSLOptions() in class io.vertx.core.net.TCPSSLOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private init() : void extracted from public ClientOptionsBase() in class io.vertx.core.net.ClientOptionsBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setDSync(dsync boolean) : OpenOptions renamed to public setDsync(dsync boolean) : OpenOptions in class io.vertx.core.file.OpenOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setWebsocketSubProtocol(subProtocols String) : HttpServerOptions renamed to public setWebsocketSubProtocols(subProtocols String) : HttpServerOptions in class io.vertx.core.http.HttpServerOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public isDSync() : boolean renamed to public isDsync() : boolean in class io.vertx.core.file.OpenOptions",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj DatagramSocketOptions) : void extracted from public DatagramSocketOptions(json JsonObject) in class io.vertx.core.datagram.DatagramSocketOptions",
        "comment": "<p>added</p><p>Davood: extract and move method</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj HttpClientOptions) : void extracted from public HttpClientOptions(json JsonObject) in class io.vertx.core.http.HttpClientOptions",
        "comment": "<p>added</p><p>The init() method is also reported, which seems to be correct</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj HttpServerOptions) : void extracted from public HttpServerOptions(json JsonObject) in class io.vertx.core.http.HttpServerOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj ClientOptionsBase) : void extracted from public ClientOptionsBase(json JsonObject) in class io.vertx.core.net.ClientOptionsBase",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj TCPSSLOptions) : void extracted from public TCPSSLOptions(json JsonObject) in class io.vertx.core.net.TCPSSLOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj PemKeyCertOptions) : void extracted from public PemKeyCertOptions(json JsonObject) in class io.vertx.core.net.PemKeyCertOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj NetServerOptions) : void extracted from public NetServerOptions(json JsonObject) in class io.vertx.core.net.NetServerOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj JksOptions) : void extracted from public JksOptions(json JsonObject) in class io.vertx.core.net.JksOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj PemTrustOptions) : void extracted from public PemTrustOptions(json JsonObject) in class io.vertx.core.net.PemTrustOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj VertxOptions) : void extracted from public VertxOptions(json JsonObject) in class io.vertx.core.VertxOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj NetworkOptions) : void extracted from public NetworkOptions(json JsonObject) in class io.vertx.core.net.NetworkOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj NetClientOptions) : void extracted from public NetClientOptions(json JsonObject) in class io.vertx.core.net.NetClientOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj OpenOptions) : void extracted from public OpenOptions(json JsonObject) in class io.vertx.core.file.OpenOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj MetricsOptions) : void extracted from public MetricsOptions(json JsonObject) in class io.vertx.core.metrics.MetricsOptions",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public fromJson(json JsonObject, obj PfxOptions) : void extracted from public PfxOptions(json JsonObject) in class io.vertx.core.net.PfxOptions",
        "comment": "<p>added</p><p>Davood: extract and move</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1152358,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "url": "https://github.com/hibernate/hibernate-orm/commit/0b6ea757e34a63b1421b77ed5fbb61398377aab1",
    "author": "Gail Badner",
    "time": "7/29/15 12:10 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.hibernate.jpa.test.callbacks.EntityWithLazyProperty moved to org.hibernate.jpa.test.instrument.domain.EntityWithLazyProperty",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private checkLazyField(entity EntityWithLazyProperty, em EntityManager, expected byte[]) : void from class org.hibernate.jpa.test.callbacks.CallbacksTest to private checkLazyField(entity EntityWithLazyProperty, em EntityManager, expected byte[]) : void from class org.hibernate.jpa.test.instrument.cases.TestLazyPropertyOnPreUpdateExecutable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 5200
}, {
    "id": 1152530,
    "repository": "https://github.com/addthis/hydra.git",
    "sha1": "7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "url": "https://github.com/addthis/hydra/commit/7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
    "author": "ian",
    "time": "7/28/15 5:43 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancer.HostAndScore moved to com.addthis.hydra.job.spawn.balancer.HostAndScore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancerTest moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancerTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancer.HostScore moved to com.addthis.hydra.job.spawn.balancer.HostScore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancer moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancerConfig moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancerConfig",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancerTaskSizer moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancerTaskSizer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancer.JobTaskItem moved to com.addthis.hydra.job.spawn.balancer.JobTaskItem",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.addthis.hydra.job.spawn.SpawnBalancer.JobTaskItemByHostMap moved to com.addthis.hydra.job.spawn.balancer.JobTaskItemByHostMap",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private addOrIncrement(currentValue Double, value Double) : double from class com.addthis.hydra.job.spawn.SpawnBalancer to private addOrIncrement(currentValue Double, value Double) : double from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private calculateHostScore(host HostState, clusterMaxMeanActive double, clusterMaxDiskUsed double) : HostScore from class com.addthis.hydra.job.spawn.SpawnBalancer to private calculateHostScore(host HostState, clusterMaxMeanActive double, clusterMaxDiskUsed double) : HostScore from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public clearRecentlyRebalancedHosts() : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public clearRecentlyRebalancedHosts() : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private countTotalActiveTasksOnHost(host HostState) : int from class com.addthis.hydra.job.spawn.SpawnBalancer to private countTotalActiveTasksOnHost(host HostState) : int from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private generateTaskCountHostScoreMap(job Job) : Map from class com.addthis.hydra.job.spawn.SpawnBalancer to private generateTaskCountHostScoreMap(job IJob) : Map from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private generateUnassignedTaskList(jobID String, taskCount int) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private generateUnassignedTaskList(jobID String, taskCount int) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAssignmentsForNewReplicas(job Job) : Map from class com.addthis.hydra.job.spawn.SpawnBalancer to public getAssignmentsForNewReplicas(job IJob) : Map from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getConfig() : SpawnBalancerConfig from class com.addthis.hydra.job.spawn.SpawnBalancer to public getConfig() : SpawnBalancerConfig from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getHostScoreCached(hostId String) : double from class com.addthis.hydra.job.spawn.SpawnBalancer to public getHostScoreCached(hostId String) : double from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getJobsToAutobalance(hosts List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public getJobsToAutobalance(hosts List) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getTaskTrueSize(task JobTask) : long from class com.addthis.hydra.job.spawn.SpawnBalancer to public getTaskTrueSize(task JobTask) : long from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected markRecentlyReplicatedTo(hostId String) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to protected markRecentlyReplicatedTo(hostId String) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private maxTasksPerHost(job Job, numHosts int) : int from class com.addthis.hydra.job.spawn.SpawnBalancer to private maxTasksPerHost(job Job, numHosts int) : int from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private moveTask(task JobTask, fromHostId String, otherHosts List) : JobTaskMoveAssignment from class com.addthis.hydra.job.spawn.SpawnBalancer to private moveTask(task JobTask, fromHostId String, otherHosts Collection) : JobTaskMoveAssignment from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private purgeMisplacedTasks(host HostState, deleteLimit int) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private purgeMisplacedTasks(host HostState, deleteLimit int) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public pushTasksOffDiskForFilesystemOkayFailure(host HostState, moveLimit int) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public pushTasksOffDiskForFilesystemOkayFailure(host HostState, moveLimit int) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private removeDownHosts(hosts List) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to private removeDownHosts(hosts Iterable) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public requestJobSizeUpdate(jobId String, taskId int) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public requestJobSizeUpdate(jobId String, taskId int) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setConfig(config SpawnBalancerConfig) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public setConfig(config SpawnBalancerConfig) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected sortHostsByActiveTasks(hosts Collection) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public sortHostsByActiveTasks(hosts Collection) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected sortHostsByDiskSpace(hosts Collection) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to protected sortHostsByDiskSpace(hosts Collection) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public startTaskSizePolling() : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public startTaskSizePolling() : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected updateAggregateStatistics(hosts List) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to protected updateAggregateStatistics(hosts Iterable) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same classs</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public add(assignment JobTaskMoveAssignment) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer.MoveAssignmentList to public add(assignment JobTaskMoveAssignment) : boolean from class com.addthis.hydra.job.spawn.balancer.MoveAssignmentList",
        "comment": "<p>it's a move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getBytesUsed() : long from class com.addthis.hydra.job.spawn.SpawnBalancer.MoveAssignmentList to public getBytesUsed() : long from class com.addthis.hydra.job.spawn.balancer.MoveAssignmentList",
        "comment": "<p>it's a move class!</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private pushTasksOffHost(host HostState, otherHosts List, limitBytes boolean, byteLimitFactor double, moveLimit int, obeyDontAutobalanceMe boolean) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private pushTasksOffHost(host HostState, otherHosts Collection, limitBytes boolean, byteLimitFactor double, moveLimit int, obeyDontAutobalanceMe boolean) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private findActiveJobIDs() : Set from class com.addthis.hydra.job.spawn.SpawnBalancer to private findActiveJobIDs() : Set from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private findAllTasksAssignedToHost(failedHostUUID String) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private findAllTasksAssignedToHost(failedHostUUID String) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getUsedDiskPercent(host HostState) : double from class com.addthis.hydra.job.spawn.SpawnBalancer to private getUsedDiskPercent(host HostState) : double from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private generateHostStateScoreMap(hosts Collection, jobID String) : Map from class com.addthis.hydra.job.spawn.SpawnBalancer to private generateHostStateScoreMap(hosts Collection, jobID String) : Map from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private okToPutReplicaOnHost(hostCandidate HostState, task JobTask) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to private okToPutReplicaOnHost(hostCandidate HostState, task JobTask) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private balanceActiveJobsOnHost(host HostState, hosts List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private balanceActiveJobsOnHost(host HostState, hosts List) : Collection from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected generateAssignedTasksForNewJob(jobID String, taskCount int, hosts List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public generateAssignedTasksForNewJob(jobID String, taskCount int, hosts Collection) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected isExtremeHost(hostID String, diskSpace boolean, high boolean) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to protected isExtremeHost(hostID String, diskSpace boolean, high boolean) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public okayToAutobalance() : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to public okayToAutobalance() : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private onSameHost(hostID1 String, hostID2 String) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to private onSameHost(hostID1 String, hostID2 String) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public startAutobalanceTask() : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public startAutobalanceTask() : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public canReceiveNewTasks(host HostState, isReplica boolean) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to public canReceiveNewTasks(host HostState) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getAvailDiskBytes(host HostState) : long from class com.addthis.hydra.job.spawn.SpawnBalancer to private getAvailDiskBytes(host HostState) : long from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private generateTaskCountByHost(hosts List, tasks List) : JobTaskItemByHostMap from class com.addthis.hydra.job.spawn.SpawnBalancer to private generateTaskCountByHost(hosts List, tasks Iterable) : JobTaskItemByHostMap from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private moveTasksOntoHost(tasksByHost JobTaskItemByHostMap, maxPerHost int, numToMove int, maxBytesToMove long, pullHost String) : MoveAssignmentList from class com.addthis.hydra.job.spawn.SpawnBalancer to private moveTasksOntoHost(tasksByHost JobTaskItemByHostMap, maxPerHost int, numToMove int, maxBytesToMove long, pullHost String) : MoveAssignmentList from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isInMovableState(task JobTask) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to public isInMovableState(task JobTask) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private isWellFormedAndActiveJob(job Job) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to private isWellFormedAndActiveJob(job IJob) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private findTasksToMove(host HostState, obeyDontAutobalanceMe boolean) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private findTasksToMove(host HostState, obeyDontAutobalanceMe boolean) : Iterable from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private pruneTaskReassignments(candidateAssignments List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private pruneTaskReassignments(candidateAssignments Iterable) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected hasFullDiskHost(task JobTask) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to protected hasFullDiskHost(task JobTask) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private removeDuplicateAssignments(candidateAssignments List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private removeDuplicateAssignments(candidateAssignments Iterable) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private shouldAutobalanceJob(job Job, hosts List) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to private shouldAutobalanceJob(job Job, hosts List) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public getAssignmentsForAutoBalance(type RebalanceType, weight RebalanceWeight) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public getAssignmentsForAutoBalance(type RebalanceType, weight RebalanceWeight) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private executeHostFailureRecovery(task JobTask, failedHostUuid String, newReplicaHost HostState) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to private executeHostFailureRecovery(task JobTask, failedHostUuid String, newReplicaHost CoreMessage) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected removeInvalidReplicas(job Job) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public removeInvalidReplicas(job IJob) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private pairTasksAndHosts(tasks List, hosts List) : Map from class com.addthis.hydra.job.spawn.SpawnBalancer to private pairTasksAndHosts(tasks List, hosts Collection) : Map from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public run() : void from class com.addthis.hydra.job.spawn.SpawnBalancer.AutobalanceTask to public run() : void from class com.addthis.hydra.job.spawn.balancer.AutobalanceTask",
        "comment": "<p>It is a move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private pushTasksOntoDisk(host HostState, heavyHosts List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to private pushTasksOntoDisk(host HostState, heavyHosts Iterable) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getAssignmentsForJobReallocation(job Job, tasksToMove int, hosts List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public getAssignmentsForJobReallocation(job Job, tasksToMove int, hosts List) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private moveTasksOffHost(tasksByHost JobTaskItemByHostMap, maxPerHost int, numToMove int, maxBytesToMove long, pushHost String) : MoveAssignmentList from class com.addthis.hydra.job.spawn.SpawnBalancer to private moveTasksOffHost(tasksByHost JobTaskItemByHostMap, maxPerHost int, numToMove int, maxBytesToMove long, pushHost String) : MoveAssignmentList from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected getAssignmentsToBalanceHost(host HostState, hosts List) : List from class com.addthis.hydra.job.spawn.SpawnBalancer to public getAssignmentsToBalanceHost(host HostState, hosts List) : List from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected loadConfigFromDataStore(defaultValue SpawnBalancerConfig) : SpawnBalancerConfig from class com.addthis.hydra.job.spawn.SpawnBalancer to protected loadConfigFromDataStore(defaultValue SpawnBalancerConfig) : SpawnBalancerConfig from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private attemptFixTaskForFailedHost(task JobTask, hosts List, failedHostUuid String) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to private attemptFixTaskForFailedHost(task JobTask, hosts Collection, failedHostUuid String) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fixTasksForFailedHost(hosts List, failedHost String) : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public fixTasksForFailedHost(hosts List, failedHost String) : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private assignTasksFromSingleJobToHosts(tasks List, storedHostScores Map) : Map from class com.addthis.hydra.job.spawn.SpawnBalancer to private assignTasksFromSingleJobToHosts(tasks List, storedHostScores Map) : Map from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public assignTasksFromMultipleJobsToHosts(tasks List, hosts List) : Map from class com.addthis.hydra.job.spawn.SpawnBalancer to public assignTasksFromMultipleJobsToHosts(tasks Collection, hosts Collection) : Map from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private getWeightedElementIndex(numItems int, weight RebalanceWeight) : int from class com.addthis.hydra.job.spawn.SpawnBalancer to private getWeightedElementIndex(numItems int, weight RebalanceWeight) : int from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public saveConfigToDataStore() : void from class com.addthis.hydra.job.spawn.SpawnBalancer to public saveConfigToDataStore() : void from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public isDiskFull(host HostState) : boolean from class com.addthis.hydra.job.spawn.SpawnBalancer to public isDiskFull(host HostState) : boolean from class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public run() : void from class com.addthis.hydra.job.spawn.SpawnBalancer.AggregateStatUpdaterTask to public run() : void from class com.addthis.hydra.job.spawn.balancer.AggregateStatUpdaterTask",
        "comment": "<p>It is a move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private lastHostAutobalanceTime : long from class com.addthis.hydra.job.spawn.SpawnBalancer.AutobalanceTask to class com.addthis.hydra.job.spawn.balancer.AutobalanceTask",
        "comment": "<p>It is a move Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private lastJobAutobalanceTime : long from class com.addthis.hydra.job.spawn.SpawnBalancer.AutobalanceTask to class com.addthis.hydra.job.spawn.balancer.AutobalanceTask",
        "comment": "<p>It is a move Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private bytesUsed : long from class com.addthis.hydra.job.spawn.SpawnBalancer.MoveAssignmentList to class com.addthis.hydra.job.spawn.balancer.MoveAssignmentList",
        "comment": "<p>it is a move class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private movableTaskStates : Set from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private numHostRebalances : int from class com.addthis.hydra.job.spawn.SpawnBalancer.AutobalanceTask to class com.addthis.hydra.job.spawn.balancer.AutobalanceTask",
        "comment": "<p>It is a move Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private aggregateStatisticsLock : ReentrantLock from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cachedHostScores : ConcurrentHashMap from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private hostAndScoreComparator : Comparator from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>Move Class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private autobalanceStarted : AtomicBoolean from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private recentlyAutobalancedJobs : Cache from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package spawn : Spawn from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package hostManager : HostManager from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private hostStateScoreComparator : Comparator from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private jobAverageTaskSizeComparator : Comparator from class com.addthis.hydra.job.spawn.SpawnBalancer to class com.addthis.hydra.job.spawn.balancer.SpawnBalancer",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 1974
}, {
    "id": 1152672,
    "repository": "https://github.com/eclipse/jetty.project.git",
    "sha1": "837d1a74bb7d694220644a2539c4440ce55462cf",
    "url": "https://github.com/eclipse/jetty.project/commit/837d1a74bb7d694220644a2539c4440ce55462cf",
    "author": "Simone Bordet",
    "time": "7/28/15 11:39 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private testTransparentProxyWithQuery(proxyToContext String, prefix String, target String) : void extracted from public testTransparentProxyWithQuery() : void in class org.eclipse.jetty.proxy.ProxyServletTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6926
}, {
    "id": 1152936,
    "repository": "https://github.com/wildfly/wildfly.git",
    "sha1": "4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "url": "https://github.com/wildfly/wildfly/commit/4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
    "author": "Paul Ferraro",
    "time": "7/28/15 7:18 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.wildfly.clustering.spi.GroupServiceNameFactory moved to org.wildfly.clustering.service.GroupServiceNameFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.wildfly.clustering.server.singleton.SingletonService renamed to org.wildfly.clustering.server.singleton.CacheSingletonServiceBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.wildfly.clustering.infinispan.spi.service.CacheContainerServiceNameFactory renamed to org.wildfly.clustering.service.SubGroupServiceNameFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.wildfly.clustering.singleton.SingletonServiceBuilderFactory from class org.wildfly.clustering.server.singleton.LocalSingletonServiceBuilderFactory",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.wildfly.clustering.singleton.SingletonServiceBuilderFactory from class org.wildfly.clustering.server.singleton.CacheSingletonServiceBuilderFactory",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setElectionPolicy(electionPolicy SingletonElectionPolicy) : void renamed to public electionPolicy(electionPolicy SingletonElectionPolicy) : SingletonServiceBuilder in class org.wildfly.clustering.server.singleton.CacheSingletonServiceBuilder",
        "comment": "<p>CacheSingletonServiceBuilderFactoryanonymouslyy extended the&nbsp;SingletonServiceBuilder in one of its methods. In the refactored revision, these extentions&nbsp;are moved to the&nbsp;CacheSingletonServiceBuilder.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setQuorum(quorum int) : void renamed to public requireQuorum(quorum int) : SingletonServiceBuilder in class org.wildfly.clustering.server.singleton.CacheSingletonServiceBuilder",
        "comment": "<p>same as id:3646</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public addAttributes(attributes Attribute[]) : AddStepHandler from class org.jboss.as.clustering.controller.AddStepHandler to public addAttributes(attributes Attribute[]) : ResourceDescriptor from class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": "<p>same as id:3646</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public addAttributes(attributes Attribute[]) : BoottimeAddStepHandler from class org.jboss.as.clustering.controller.BoottimeAddStepHandler to public addAttributes(attributes Attribute[]) : ResourceDescriptor from class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public addAttributes(attributes Attribute[]) : RestartParentAddHandler from class org.jboss.as.clustering.controller.RestartParentAddHandler to public addAttributes(attributes Attribute[]) : ResourceDescriptor from class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public elect(candidates List) : Node from class org.wildfly.clustering.singleton.election.PreferredSingletonElectionPolicy to public elect(candidates List) : Node from class org.wildfly.clustering.singleton.election.PreferredSingletonElectionPolicy",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public build(target ServiceTarget, containerName String) : ServiceBuilder inlined to public build(target ServiceTarget) : ServiceBuilder in class org.wildfly.clustering.server.singleton.CacheSingletonServiceBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private policy : SingletonElectionPolicy from class org.wildfly.clustering.singleton.election.PreferredSingletonElectionPolicy to class org.wildfly.clustering.singleton.election.PreferredSingletonElectionPolicy",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private preferences : List from class org.wildfly.clustering.singleton.election.PreferredSingletonElectionPolicy to class org.wildfly.clustering.singleton.election.PreferredSingletonElectionPolicy",
        "comment": "<p>same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public BASE_NAME : String from class org.wildfly.clustering.spi.GroupServiceNameFactory to class org.wildfly.clustering.spi.GroupServiceName",
        "comment": "<p>Push down Attribute</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private resolver : ResourceDescriptionResolver from class org.jboss.as.clustering.controller.AddStepHandler to class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private resolver : ResourceDescriptionResolver from class org.jboss.as.clustering.controller.BoottimeAddStepHandler to class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private resolver : ResourceDescriptionResolver from class org.jboss.as.clustering.controller.RemoveStepHandler to class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private resolver : ResourceDescriptionResolver from class org.jboss.as.clustering.controller.RestartParentAddHandler to class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private resolver : ResourceDescriptionResolver from class org.jboss.as.clustering.controller.RestartParentRemoveHandler to class org.jboss.as.clustering.controller.ResourceDescriptor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 8243
}, {
    "id": 1153111,
    "repository": "https://github.com/google/j2objc.git",
    "sha1": "d05d92de40542e85f9f26712d976e710be82914e",
    "url": "https://github.com/google/j2objc/commit/d05d92de40542e85f9f26712d976e710be82914e",
    "author": "kirbs",
    "time": "7/29/15 9:03 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.google.devtools.j2objc.translate.LambdaExpressionTest moved to com.google.devtools.j2objc.ast.LambdaExpressionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public printLambdaCall(functionalInterface IMethodBinding, functionalTypeBinding ITypeBinding, methodBinding IMethodBinding, parameters List<VariableDeclaration>, isCapturing boolean) : void extracted from public visit(node LambdaExpression) : boolean in class com.google.devtools.j2objc.gen.StatementGenerator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2057
}, {
    "id": 1153146,
    "repository": "https://github.com/clojure/clojure.git",
    "sha1": "309c03055b06525c275b278542c881019424760e",
    "url": "https://github.com/clojure/clojure/commit/309c03055b06525c275b278542c881019424760e",
    "author": "Rich Hickey",
    "time": "7/28/15 12:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package sigTag(argcount int, v Var) : Object extracted from public InvokeExpr(source String, line int, column int, tag Symbol, fexpr Expr, args IPersistentVector, tailPosition boolean) in class clojure.lang.Compiler.InvokeExpr",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1153354,
    "repository": "https://github.com/restlet/restlet-framework-java.git",
    "sha1": "7ffe37983e2f09637b0c84d526a2f824de652de4",
    "url": "https://github.com/restlet/restlet-framework-java/commit/7ffe37983e2f09637b0c84d526a2f824de652de4",
    "author": "Hugo Wood",
    "time": "7/30/15 10:40 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private fillRepresentation(model Model, name String, contract Contract) : void extracted from private fillRepresentations(swagger Swagger, contract Contract) : void in class org.restlet.ext.apispark.internal.conversion.swagger.v2_0.Swagger2Reader",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1153409,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "url": "https://github.com/apache/cassandra/commit/3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
    "author": "Carl Yeksigian",
    "time": "7/29/15 5:15 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.AbstractReadCommandBuilder moved to org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public dumpMemtable() : void extracted from public truncateBlocking() : void in class org.apache.cassandra.db.ColumnFamilyStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public initRowCache() : void renamed to public init() : void in class org.apache.cassandra.db.ColumnFamilyStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private wrapResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, writeType WriteType) : WriteResponseHandlerWrapper renamed to private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogResponseHandler.BatchlogCleanup) : WriteResponseHandlerWrapper in class org.apache.cassandra.service.StorageProxy",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.apache.cassandra.AbstractReadCommandBuilder.SinglePartitionBuilder moved to org.apache.cassandra.db.AbstractReadCommandBuilder.SinglePartitionBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private bb(value Object, type AbstractType) : ByteBuffer from class org.apache.cassandra.AbstractReadCommandBuilder to private bb(value Object, type AbstractType) : ByteBuffer from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public columns(columns String[]) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public columns(columns String[]) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public filterOn(column String, op Operator, value Object) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public filterOn(column String, op Operator, value Object) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private forKeys(collectionType AbstractType) : AbstractType from class org.apache.cassandra.AbstractReadCommandBuilder to private forKeys(collectionType AbstractType) : AbstractType from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private forValues(collectionType AbstractType) : AbstractType from class org.apache.cassandra.AbstractReadCommandBuilder to private forValues(collectionType AbstractType) : AbstractType from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fromExcl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public fromExcl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fromIncl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public fromIncl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public includeRow(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public includeRow(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected makeFilter() : ClusteringIndexFilter from class org.apache.cassandra.AbstractReadCommandBuilder to protected makeFilter() : ClusteringIndexFilter from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected makeLimits() : DataLimits from class org.apache.cassandra.AbstractReadCommandBuilder to protected makeLimits() : DataLimits from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public reverse() : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public reverse() : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toExcl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public toExcl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toIncl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public toIncl(values Object[]) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public withLimit(newLimit int) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public withLimit(newLimit int) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public withNowInSeconds(nowInSec int) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public withNowInSeconds(nowInSec int) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public withPagingLimit(newLimit int) : AbstractReadCommandBuilder from class org.apache.cassandra.AbstractReadCommandBuilder to public withPagingLimit(newLimit int) : AbstractReadCommandBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setCompactStorage() : void from class org.apache.cassandra.cql3.statements.CreateTableStatement.RawStatement to public setCompactStorage() : void from class org.apache.cassandra.cql3.statements.CFProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setOrdering(alias ColumnIdentifier, reversed boolean) : void from class org.apache.cassandra.cql3.statements.CreateTableStatement.RawStatement to public setOrdering(alias ColumnIdentifier, reversed boolean) : void from class org.apache.cassandra.cql3.statements.CFProperties",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public build() : ReadCommand from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to public build() : ReadCommand from class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fromKeyExcl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to public fromKeyExcl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toKeyExcl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to public toKeyExcl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public fromKeyIncl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to public fromKeyIncl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public toKeyIncl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to public toKeyIncl(values Object[]) : PartitionRangeBuilder from class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method protected makeColumnFilter() : ColumnFilter from class org.apache.cassandra.AbstractReadCommandBuilder to protected makeColumnFilter() : ColumnFilter from class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private clusterings : NavigableSet from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private cqlLimit : int from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private lowerClusteringBound : Slice.Bound from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package, lemme know if it is a TP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private pagingLimit : int from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private upperClusteringBound : Slice.Bound from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private endKey : DecoratedKey from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private startKey : DecoratedKey from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected cfs : ColumnFamilyStore from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "<p>The source and the target class are the same</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private startInclusive : boolean from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private endInclusive : boolean from class org.apache.cassandra.AbstractReadCommandBuilder.PartitionRangeBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder.PartitionRangeBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected nowInSeconds : int from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected columns : Set from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute protected filter : RowFilter from class org.apache.cassandra.AbstractReadCommandBuilder to class org.apache.cassandra.db.AbstractReadCommandBuilder",
        "comment": "Move class/package",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package definedOrdering : Map from class org.apache.cassandra.cql3.statements.CreateTableStatement.RawStatement to class org.apache.cassandra.cql3.statements.CFProperties",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute package useCompactStorage : boolean from class org.apache.cassandra.cql3.statements.CreateTableStatement.RawStatement to class org.apache.cassandra.cql3.statements.CFProperties",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 11578
}, {
    "id": 1153435,
    "repository": "https://github.com/ReactiveX/RxJava.git",
    "sha1": "8ad226067434cd39ce493b336bd0659778625959",
    "url": "https://github.com/ReactiveX/RxJava/commit/8ad226067434cd39ce493b336bd0659778625959",
    "author": "Yuya Tanaka",
    "time": "7/29/15 2:36 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from private blockForSingle(observable Observable<? extends T>) : T in class rx.observables.BlockingObservable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from public forEach(onNext Action1<? super T>) : void in class rx.observables.BlockingObservable",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private createObservable() : Observable<Void> renamed to private createOnUnsubscribe() : Action0 in class rx.observables.BlockingObservableTest.InterruptionTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getInterruptedExceptionOrNull() : InterruptedException extracted from package assertUnsubscribeIsInvoked(method String, blockingAction Action1) : void in class rx.observables.BlockingObservableTest.InterruptionTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1615
}, {
    "id": 1153464,
    "repository": "https://github.com/netty/netty.git",
    "sha1": "9d347ffb91f34933edb7b1124f6b70c3fc52e220",
    "url": "https://github.com/netty/netty/commit/9d347ffb91f34933edb7b1124f6b70c3fc52e220",
    "author": "Scott Mitchell",
    "time": "7/30/15 3:25 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private expand() : void extracted from public append(c char) : AppendableCharSequence in class io.netty.util.internal.AppendableCharSequence",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1113
}, {
    "id": 1153579,
    "repository": "https://github.com/cwensel/cascading.git",
    "sha1": "f9d3171f5020da5c359cdda28ef05172e858c464",
    "url": "https://github.com/cwensel/cascading/commit/f9d3171f5020da5c359cdda28ef05172e858c464",
    "author": "Chris K Wensel",
    "time": "7/29/15 7:47 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method protected logInfo(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logInfo(message String, arguments Object[]) : void from class cascading.stats.CascadingStats",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected logWarn(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logWarn(message String, arguments Object[]) : void from class cascading.stats.CascadingStats",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private prefixID : String from class cascading.stats.tez.TezNodeStats to class cascading.stats.CascadingStats",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected logDebug(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logDebug(message String, arguments Object[]) : void from class cascading.stats.CascadingStats",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method private getPrefix() : String from class cascading.stats.tez.TezNodeStats to private getPrefix() : String from class cascading.stats.CascadingStats",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected logDebug(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logDebug(message String, arguments Object[]) : void from class cascading.stats.CascadingStats",
        "comment": "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected logInfo(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logInfo(message String, arguments Object[]) : void from class cascading.stats.CascadingStats",
        "comment": "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method protected logWarn(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logWarn(message String, arguments Object[]) : void from class cascading.stats.CascadingStats",
        "comment": "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method private getPrefix() : String from class cascading.stats.tez.TezNodeStats to private getPrefix() : String from class cascading.stats.CascadingStats",
        "comment": "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected logError(message String, throwable Throwable) : void extracted from public recordChildStats() : void in class cascading.stats.hadoop.BaseHadoopNodeStats",
        "comment": "<p>Extract and Move to the parent class</p><p>Moved to the class <span class='pl-en'>CascadingStats (which is parent of&nbsp; FlowNodeStats)</span></p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private prefixID : String from class cascading.stats.tez.TezNodeStats to class cascading.stats.CascadingStats",
        "comment": "<p>It is a move but couldnt find a hierarchy</p><p>Nikos: TezNodeStats extends BaseHadoopNodeStats extends FlowNodeStats extends CascadingStats<br />but FlowNodeStats does not change in this commit</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Nikos"
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected logWarn(message String, arguments Object[]) : void extracted from protected fireListeners(fromStatus CascadingStats.Status, toStatus CascadingStats.Status) : void in class cascading.stats.CascadingStats",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood, Nikos"
    }],
    "refDiffExecutionTime": 1441
}, {
    "id": 1153652,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "deb8e5ca64fcf633edbd89523af472da813b6772",
    "url": "https://github.com/VoltDB/voltdb/commit/deb8e5ca64fcf633edbd89523af472da813b6772",
    "author": "Chris Wolff",
    "time": "7/30/15 2:19 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getNormalValue(r Random, magnitude double, min long, max long) : long extracted from private fillTable(client Client, tbl String) : void in class org.voltdb.regressionsuites.TestApproxCountDistinctSuite",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1153761,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "ce4b0e22659c16ae83d421f9621fd3e922750764",
    "url": "https://github.com/JetBrains/MPS/commit/ce4b0e22659c16ae83d421f9621fd3e922750764",
    "author": "Mihail Muhin",
    "time": "7/30/15 1:39 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected renameModels(oldName String, newName String) : void extracted from public rename(newName String) : void in class jetbrains.mps.project.AbstractModule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 27055
}, {
    "id": 1153762,
    "repository": "https://github.com/netty/netty.git",
    "sha1": "d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "url": "https://github.com/netty/netty/commit/d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
    "author": "Jakob Buchgraber",
    "time": "7/30/15 2:38 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method private comparator(ignoreCase boolean) : Comparator<CharSequence> inlined to public contains(name CharSequence, value CharSequence, ignoreCase boolean) : boolean in class io.netty.handler.codec.DefaultTextHeaders",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public as(value byte[]) : ByteString renamed to public bs(value byte[]) : ByteString in class io.netty.handler.codec.http2.Http2TestUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.DefaultHeaders",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.EmptyHeaders",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visit(entry Entry<ByteString,ByteString>) : boolean renamed to public translate(entry Entry<ByteString,ByteString>) : void in class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visit(entry Entry<CharSequence,CharSequence>) : boolean renamed to public encode(entry Entry<CharSequence,CharSequence>) : void in class io.netty.handler.codec.AsciiHeadersEncoder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class io.netty.handler.codec.DefaultTextHeaders.DefaultTextValueTypeConverter renamed to io.netty.handler.codec.DefaultTextHeaders.CharSequenceConverter",
        "comment": "<p>Matin: FP&nbsp;</p><p>The classes don't seem to be used similarly.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Rename Class",
        "description": "Rename Class io.netty.handler.codec.http.DefaultHttpHeaders.HttpHeadersValidationConverter renamed to io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
        "comment": "<p>Matin: FP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Rename Class",
        "description": "Rename Class io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameConverter renamed to io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameValidator",
        "comment": "<p>Matin: FP</p><p>We already accepted the only method of this class to be a rename, so http://refactoring.encs.concordia.ca/oracle/refactoring-details/1153762/3736</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public visit(entry Entry) : boolean renamed to public encoderHeader(name CharSequence, value CharSequence, buf ByteBuf) : void in class io.netty.handler.codec.http.HttpHeadersEncoder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public convertName(name CharSequence) : CharSequence renamed to public validate(name CharSequence) : void in class io.netty.handler.codec.http.DefaultLastHttpContent.TrailingHttpHeaders.TrailingHttpHeadersNameValidator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private convertName(name T) : T renamed to private validateName(name T) : void in class io.netty.handler.codec.DefaultHeaders",
        "comment": "<p>Matin: FP&nbsp;</p><p>convertName() used to (indirectly) call validateName(), which does the same thing as validate() which is now callsed in validateName. So this is TP</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public headersWithSameValuesShouldBeEquivalent() : void renamed to public headersWithDifferentNamesAndValuesShouldNotBeEquivalent() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public remove() : void from class io.netty.handler.codec.DefaultHeaders.KeyValueHeaderIterator to public remove() : void from class io.netty.handler.codec.DefaultHeaders.NameValueIterator",
        "comment": "Implement the same interfacec. Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isList(value Object) : boolean extracted from public get(name T) : T in class io.netty.handler.codec.DefaultHeaders",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isList(value Object) : boolean extracted from public getAndRemove(name T) : T in class io.netty.handler.codec.DefaultHeaders",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isList(value Object) : boolean extracted from public getAll(name T) : List in class io.netty.handler.codec.DefaultHeaders",
        "comment": "Matin: FP",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private setAllVisitor() : EntryVisitor inlined to public setAll(headers Headers) : Headers in class io.netty.handler.codec.DefaultHeaders",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public entriesConverted() : List inlined to public iteratorConverted() : Iterator in class io.netty.handler.codec.EmptyConvertibleHeaders",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public entries() : List inlined to public iterator() : Iterator in class io.netty.handler.codec.EmptyHeaders",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Laleh"
    }, {
        "type": "Inline Method",
        "description": "Inline Method private validateValue(seq CharSequence) : void inlined to public convertObject(value Object) : CharSequence in class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator",
        "comment": "<p>Since class io.netty.handler.codec.http.DefaultHttpHeaders.HeaderValueConverterAndValidator is a new class =&gt; FP</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setAllShouldMergeHeaders() : void renamed to public setAllShouldOverwriteSomeAndLeaveOthersUntouched() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "comment": "<p>new</p><p>The bodies of the two methods are different. There are statements that are repeated, but they are repeated in other methods as well.</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public contains(name T, value T, keyComparator Comparator, valueComparator Comparator) : boolean inlined to public contains(name T, value T, valueComparator Comparator) : boolean in class io.netty.handler.codec.DefaultHeaders",
        "comment": "<p>new</p><p>The body of the inlined method is not similar to the statements added instead of the method call</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setShouldReplacePreviousValues() : void renamed to public setShouldOverWritePreviousValue() : void in class io.netty.handler.codec.DefaultBinaryHeadersTest",
        "comment": "<p>new</p><p>It seems that the two methods are doing almost the same thing.</p>",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 2532
}, {
    "id": 1153812,
    "repository": "https://github.com/geoserver/geoserver.git",
    "sha1": "07c26a3a1dd6fcc2494c2d755ee5a2753e0df87c",
    "url": "https://github.com/geoserver/geoserver/commit/07c26a3a1dd6fcc2494c2d755ee5a2753e0df87c",
    "author": "Kevin Smith",
    "time": "7/31/15 7:12 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.geoserver.wfs.xml.PropertyRule moved to org.geoserver.util.PropertyRule",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5968
}, {
    "id": 1153866,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "e2de877a29217a50afbd142454a330e423d86045",
    "url": "https://github.com/VoltDB/voltdb/commit/e2de877a29217a50afbd142454a330e423d86045",
    "author": "Christopher M. Wolff",
    "time": "7/30/15 8:14 PM",
    "refactorings": [{
        "type": "Pull Up Method",
        "description": "Pull Up Method private findAllAggPlanNodes(node AbstractPlanNode) : List<AbstractPlanNode> from class org.voltdb.planner.TestPlansApproxCountDistinct to protected findAllAggPlanNodes(fragment AbstractPlanNode) : List<AbstractPlanNode> from class org.voltdb.planner.PlannerTestCase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1153913,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "2b76aa336d696bbbbb205e6b6998e07ae5eb4261",
    "url": "https://github.com/JetBrains/intellij-community/commit/2b76aa336d696bbbbb205e6b6998e07ae5eb4261",
    "author": "Max Medvedev",
    "time": "7/30/15 10:53 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.jetbrains.plugins.groovy.util.ResolveProfiler moved to com.intellij.util.profiling.ResolveProfiler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.jetbrains.plugins.groovy.util.ResolveProfiler.ThreadInfo moved to com.intellij.util.profiling.ResolveProfiler.ThreadInfo",
        "comment": "<p>The whole container class has been moved&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public finish() : long from class org.jetbrains.plugins.groovy.util.ResolveProfiler to public finish() : long from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private getThreadInfo() : ThreadInfo from class org.jetbrains.plugins.groovy.util.ResolveProfiler to private getThreadInfo() : ThreadInfo from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public start() : void from class org.jetbrains.plugins.groovy.util.ResolveProfiler to public start() : void from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public write(s String) : void from class org.jetbrains.plugins.groovy.util.ResolveProfiler to public write(s String) : void from class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private DISABLED : boolean from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private PATH : String from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private fileCount : int from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private threadMap : ThreadLocal from class org.jetbrains.plugins.groovy.util.ResolveProfiler to class com.intellij.util.profiling.ResolveProfiler",
        "comment": "<p>The containing class has been moved</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 35144
}, {
    "id": 1154537,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "d47e58f9bbce9a816378e8a7930c1de67a864c29",
    "url": "https://github.com/VoltDB/voltdb/commit/d47e58f9bbce9a816378e8a7930c1de67a864c29",
    "author": "Manju James",
    "time": "7/31/15 6:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public callProcedure(ic ImportContext, procCallback ProcedureCallback, proc String, fieldList Object[]) : boolean extracted from public callProcedure(ic ImportContext, proc String, fieldList Object[]) : boolean in class org.voltdb.ImportHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6412
}, {
    "id": 1154674,
    "repository": "https://github.com/JetBrains/intellij-plugins.git",
    "sha1": "83b3092c1ee11b70489732f9e69b8e01c2a966f0",
    "url": "https://github.com/JetBrains/intellij-plugins/commit/83b3092c1ee11b70489732f9e69b8e01c2a966f0",
    "author": "Alexander Doroshko",
    "time": "7/31/15 3:41 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getShortErrorMessage(methodName String, filePath String, error RequestError) : String extracted from private logError(methodName String, filePath String, error RequestError) : void in class com.jetbrains.lang.dart.analyzer.DartAnalysisServerService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1739
}, {
    "id": 1155076,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
    "url": "https://github.com/facebook/buck/commit/6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
    "author": "Martin Kosiba",
    "time": "7/31/15 3:01 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method package getEnumerator(rType RType) : ResourceIdEnumerator extracted from public addIntResourceIfNotPresent(rType RType, name String) : void in class com.facebook.buck.android.aapt.AaptResourceCollector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2288
}, {
    "id": 1155119,
    "repository": "https://github.com/jOOQ/jOOQ.git",
    "sha1": "58a4e74d28073e7c6f15d1f225ac1c2fd9aa4357",
    "url": "https://github.com/jOOQ/jOOQ/commit/58a4e74d28073e7c6f15d1f225ac1c2fd9aa4357",
    "author": "lukaseder",
    "time": "7/31/15 1:51 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private millis(temporal Temporal) : long extracted from public from(from Object) : U in class org.jooq.tools.Convert.ConvertAll",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1574
}, {
    "id": 1155159,
    "repository": "https://github.com/bitfireAT/davdroid.git",
    "sha1": "5b7947034a656c463ca477e198f7728cccc9e4c1",
    "url": "https://github.com/bitfireAT/davdroid/commit/5b7947034a656c463ca477e198f7728cccc9e4c1",
    "author": "Ricki Hirner",
    "time": "8/1/15 8:25 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method package recurrenceSetsToAndroidString(dates List<? extends DateListProperty>) : String from class at.bitfire.davdroid.resource.LocalCalendar to public recurrenceSetsToAndroidString(dates List<? extends DateListProperty>, allDay boolean) : String from class at.bitfire.davdroid.DateUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1155178,
    "repository": "https://github.com/brettwooldridge/HikariCP.git",
    "sha1": "e19c6874431dc2c3046436c2ac249a0ab2ef3457",
    "url": "https://github.com/brettwooldridge/HikariCP/commit/e19c6874431dc2c3046436c2ac249a0ab2ef3457",
    "author": "David Schlosnagle",
    "time": "7/31/15 1:03 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private closeOpenStatements() : void extracted from public close() : void in class com.zaxxer.hikari.proxy.ConnectionProxy",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 536
}, {
    "id": 1155272,
    "repository": "https://github.com/raphw/byte-buddy.git",
    "sha1": "fd000ca2e78fce2f8aa11e6a81e4f23c2f1348e6",
    "url": "https://github.com/raphw/byte-buddy/commit/fd000ca2e78fce2f8aa11e6a81e4f23c2f1348e6",
    "author": "Rafael Winterhalter",
    "time": "7/31/15 8:22 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private invokeMethod(methodToken MethodDescription.Token) : Implementation.SpecialMethodInvocation extracted from public invokeSuper(methodToken MethodDescription.Token) : Implementation.SpecialMethodInvocation in class net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 1979
}, {
    "id": 1155351,
    "repository": "https://github.com/apache/drill.git",
    "sha1": "f8197cfe1bc3671aa6878ef9d1869b2fe8e57331",
    "url": "https://github.com/apache/drill/commit/f8197cfe1bc3671aa6878ef9d1869b2fe8e57331",
    "author": "Mehant Baid",
    "time": "7/31/15 12:17 AM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.apache.drill.exec.ops.OptimizerRulesContext from class org.apache.drill.exec.ops.QueryContext",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Interface",
        "description": "Extract Interface org.apache.drill.exec.expr.fn.FunctionLookupContext from class org.apache.drill.exec.expr.fn.FunctionImplementationRegistry",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3286
}, {
    "id": 1155375,
    "repository": "https://github.com/MovingBlocks/Terasology.git",
    "sha1": "dbd2d5048ae5e30fec98ddd969b6c1e91183fb65",
    "url": "https://github.com/MovingBlocks/Terasology/commit/dbd2d5048ae5e30fec98ddd969b6c1e91183fb65",
    "author": "Florian Köberle",
    "time": "8/1/15 9:17 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute private localPlayer : LocalPlayer from class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider.ChunkTaskRelevanceComparator to class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute private localPlayer : LocalPlayer from class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider.ReadyChunkRelevanceComparator to class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1247
}, {
    "id": 1155401,
    "repository": "https://github.com/spring-projects/spring-integration.git",
    "sha1": "4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
    "url": "https://github.com/spring-projects/spring-integration/commit/4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
    "author": "Artem Bilan",
    "time": "7/31/15 2:19 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.springframework.integration.codec.CompositeCodecTests moved to org.springframework.integration.codec.kryo.CompositeCodecTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.springframework.integration.mail.config.ImapIdelIntegrationTests renamed to org.springframework.integration.mail.config.ImapIdleIntegrationTests",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2464
}, {
    "id": 1155451,
    "repository": "https://github.com/droolsjbpm/jbpm.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/jbpm.git",
    "sha1": "3815f293ba9338f423315d93a373608c95002b15",
    "url": "https://github.com/droolsjbpm/jbpm/commit/3815f293ba9338f423315d93a373608c95002b15",
    "author": "Marco Rietveld",
    "time": "8/1/15 7:38 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.jbpm.process.audit.JPAService from class org.jbpm.process.audit.JPAAuditLogService",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method protected convertListToInterfaceList(internalResult List, interfaceType Class) : List from class org.jbpm.process.audit.JPAAuditLogService to public convertListToInterfaceList(internalResult List, interfaceType Class) : List from class org.jbpm.query.jpa.impl.QueryCriteriaUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.jbpm.services.task.commands.TaskQueryDataCommand renamed to org.jbpm.services.task.commands.TaskQueryWhereCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public initiator(createdById String[]) : TaskQueryBuilder renamed to public createdBy(createdById String[]) : TaskQueryBuilder in class org.jbpm.services.task.impl.TaskQueryBuilderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public taskOwner(taskOwnerId String[]) : TaskQueryBuilder renamed to public actualOwner(taskOwnerId String[]) : TaskQueryBuilder in class org.jbpm.services.task.impl.TaskQueryBuilderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public buildQuery() : ParametrizedQuery<TaskSummary> renamed to public build() : ParametrizedQuery<TaskSummary> in class org.jbpm.services.task.impl.TaskQueryBuilderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public addAppropriateParam(listId String, param T[]) : QueryCriteria renamed to public addParameter(listId String, param T[]) : QueryCriteria in class org.jbpm.query.jpa.data.QueryWhere",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getQueryData() : QueryData renamed to public getQueryWhere() : QueryWhere in class org.jbpm.query.jpa.builder.impl.AbstractQueryBuilderImpl",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private getAppropriateQueryCriteria(listId String, valueListSize int) : QueryCriteria inlined to public addParameter(listId String, param T[]) : QueryCriteria in class org.jbpm.query.jpa.data.QueryWhere",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private getAppropriateQueryCriteria(listId String, valueListSize int) : QueryCriteria inlined to public addRangeParameter(listId String, param T, start boolean) : void in class org.jbpm.query.jpa.data.QueryWhere",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method private resetGroup() : void inlined to public clear() : void in class org.jbpm.query.jpa.data.QueryWhere",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.jbpm.query.jpa.data.QueryWhere.ParameterType renamed to org.jbpm.query.jpa.data.QueryWhere.QueryCriteriaType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public orderBy(orderBy OrderBy) : TaskQueryBuilder renamed to private getOrderByListId(field OrderBy) : String in class org.jbpm.services.task.impl.TaskQueryBuilderImpl",
        "comment": "<p>The two methods are doing the same thing AFAICS</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public queryProcessInstanceLogs(queryData QueryData) : List renamed to public queryLogs(queryData QueryWhere, queryClass Class, resultClass Class) : List in class org.jbpm.process.audit.JPAAuditLogService",
        "comment": "<p>The method is renamed in the interface and in the implementors and the call sites</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public startGroup() : void renamed to public newGroup() : void in class org.jbpm.query.jpa.data.QueryWhere",
        "comment": "<p>There is some overlap in the methods. The original method is not called. The new method seems to be called once in the added code.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setAscending(listId String) : void extracted from public clear() : TaskQueryBuilder in class org.jbpm.services.task.impl.TaskQueryBuilderImpl",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setAscending(listId String) : void extracted from public TaskQueryBuilderImpl(userId String, taskCmdService CommandService) in class org.jbpm.services.task.impl.TaskQueryBuilderImpl",
        "comment": "<p>Extract and Move to other class</p><p>When I consider only the moved statements, I conclude that it is FP. However, it might be TP if we semantically evaluate the statements before and after the move.</p><p>Unfortunately, Q<span class='blob-code-inner'><span class='x x-first x-last'>ueryData and QueryContex are external resources and I am not able to do such semantic analysis.</span></span></p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public setAscending(listId String) : void extracted from public getTasksByVariousFields(userId String, parameters Map, union boolean) : List in class org.jbpm.services.task.impl.TaskQueryServiceImpl",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 3454
}, {
    "id": 1155773,
    "repository": "https://github.com/gwtproject/gwt.git",
    "sha1": "892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
    "url": "https://github.com/gwtproject/gwt/commit/892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
    "author": "Julien Dramaix",
    "time": "7/31/15 4:56 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public startRow(rowValue T) : TableRowBuilder extracted from public startRow() : TableRowBuilder in class com.google.gwt.user.cellview.client.AbstractCellTableBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 4544
}, {
    "id": 1155930,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "0fa45e4a562fc2586b1ef06a88e9c186a0835316",
    "url": "https://github.com/apache/hive/commit/0fa45e4a562fc2586b1ef06a88e9c186a0835316",
    "author": "Alan Gates",
    "time": "7/31/15 3:07 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void extracted from public doImport() : void in class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private copyOneFunction(dbName String, funcName String) : void extracted from private copyFunctions() : void in class org.apache.hadoop.hive.metastore.hbase.HBaseImport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public doImport() : void renamed to public importAll() : void in class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 6377
}, {
    "id": 1156165,
    "repository": "https://github.com/square/mortar.git",
    "sha1": "72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "url": "https://github.com/square/mortar/commit/72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
    "author": "Ray Ryan",
    "time": "8/3/15 10:11 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public cannotRegisterOnDestroyed() : void from class mortar.ObjectGraphServiceTest to public cannotRegisterOnDestroyed() : void from class mortar.MortarScopeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public isDestroyedGetsSet() : void from class mortar.ObjectGraphServiceTest to public isDestroyedGetsSet() : void from class mortar.MortarScopeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public isDestroyedStartsFalse() : void from class mortar.ObjectGraphServiceTest to public isDestroyedStartsFalse() : void from class mortar.MortarScopeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public cannotFindChildFromDestroyed() : void from class mortar.ObjectGraphServiceTest to public cannotFindChildFromDestroyed() : void from class mortar.MortarScopeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public rootDestroyIsIdempotent() : void from class mortar.ObjectGraphServiceTest to public rootDestroyIsIdempotent() : void from class mortar.MortarScopeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public destroyIsIdempotent() : void from class mortar.ObjectGraphServiceTest to public destroyIsIdempotent() : void from class mortar.MortarScopeTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1156168,
    "repository": "https://github.com/dropwizard/metrics.git",
    "sha1": "2331fe19ea88a22de32f15375de8118226eaa1e6",
    "url": "https://github.com/dropwizard/metrics/commit/2331fe19ea88a22de32f15375de8118226eaa1e6",
    "author": "Ryan Tenney",
    "time": "8/3/15 3:30 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private registerMetricsForModel(resourceModel ResourceModel) : void extracted from public onEvent(event ApplicationEvent) : void in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1033
}, {
    "id": 1156210,
    "repository": "https://github.com/spring-projects/spring-hateoas.git",
    "sha1": "8bdc57ba8975d851fe91edc908761aacea624766",
    "url": "https://github.com/spring-projects/spring-hateoas/commit/8bdc57ba8975d851fe91edc908761aacea624766",
    "author": "Oliver Gierke",
    "time": "8/4/15 5:35 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private assertCanWrite(converter GenericHttpMessageConverter<Object>, type Class<?>, expected boolean) : void extracted from public canWriteTypeIfAssignableToConfiguredType() : void in class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertCanRead(converter GenericHttpMessageConverter<Object>, type Class<?>, expected boolean) : void extracted from public canReadTypeIfAssignableToConfiguredType() : void in class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 209
}, {
    "id": 1156276,
    "repository": "https://github.com/linkedin/rest.li.git",
    "sha1": "54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "url": "https://github.com/linkedin/rest.li/commit/54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
    "author": "Soojung Ha",
    "time": "8/3/15 9:25 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public contentEncodingGeneratorDataProvider() : Object[][] from class com.linkedin.restli.examples.TestCompressionServer to public contentEncodingGeneratorDataProvider() : Object[][] from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest extracted from public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void in class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionBetter(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testAcceptEncoding(acceptedEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionWorse(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompatibleDefault(acceptEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public test406Error(acceptContent String) : void in class com.linkedin.restli.examples.TestCompressionServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public shouldCompressRequest(entityLength int, requestCompressionOverride CompressionOption) : boolean from class com.linkedin.r2.filter.CompressionConfig to private shouldCompressRequest(entityLength int, requestCompressionOverride CompressionOption) : boolean from class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public testEncodingGeneration(encoding EncodingType[], acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer to public testEncodingGeneration(encoding EncodingType[], acceptEncoding String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Inline Method",
        "description": "Inline Method public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int, requestFilters List<? extends RequestFilter>, responseFilters List<? extends ResponseFilter>) : HttpServer inlined to public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int) : HttpServer in class com.linkedin.restli.examples.RestLiIntTestServer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private shouldCompressResponse(operation String) : boolean renamed to private shouldCompressResponseForOperation(operation String) : boolean in class com.linkedin.r2.filter.compression.ClientCompressionFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testGetCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void renamed to public testGetRequestCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void in class com.linkedin.r2.transport.http.client.TestHttpClientFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method package getCompressionConfig(httpServiceName String, requestContentEncodingName String) : CompressionConfig renamed to package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private provideRequestData() : Object[][] renamed to private provideRequestCompressionData() : Object[][] in class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getRequestContentEncodingName(serverSupportedEncodings List) : String renamed to private getRequestContentEncoding(serverSupportedEncodings List) : EncodingType in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testCompressionOperations(compressionConfig String, operations String[], headerShouldBePresent boolean) : void renamed to public testResponseCompressionRules(responseCompressionConfig CompressionConfig, responseCompressionOverride CompressionOption, expectedAcceptEncoding String, expectedCompressionThreshold String) : void in class com.linkedin.r2.filter.compression.TestClientCompressionFilter",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method private buildAcceptEncodingSchemaNames() : String renamed to private buildAcceptEncodingSchemas() : EncodingType[] in class com.linkedin.r2.transport.http.client.HttpClientFactory",
        "comment": "<p>The methods have almost similar functionality. They are also called in almost similar places.</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Inline Method",
        "description": "Inline Method public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int, requestFilters List, responseFilters List) : HttpServer inlined to public init(requestFilters List, responseFilters List) : void in class com.linkedin.restli.examples.RestLiIntegrationTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh"
    }],
    "refDiffExecutionTime": 3301
}, {
    "id": 1156317,
    "repository": "https://github.com/jersey/jersey.git",
    "sha1": "d94ca2b27c9e8a5fa9fe19483d58d2f2ef024606",
    "url": "https://github.com/jersey/jersey/commit/d94ca2b27c9e8a5fa9fe19483d58d2f2ef024606",
    "author": "Pavel Bucek",
    "time": "8/3/15 2:32 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.glassfish.jersey.client.HttpUrlConnector moved to org.glassfish.jersey.client.internal.HttpUrlConnector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected createHttpUrlConnector(client Client, connectionFactory ConnectionFactory, chunkSize int, fixLengthStreaming boolean, setMethodWorkaround boolean) : Connector extracted from public getConnector(client Client, config Configuration) : Connector in class org.glassfish.jersey.client.HttpUrlConnectorProvider",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected secureConnection(client Client, uc HttpURLConnection) : void extracted from private _apply(request ClientRequest) : ClientResponse in class org.glassfish.jersey.client.HttpUrlConnector",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }],
    "refDiffExecutionTime": 5044
}, {
    "id": 1156374,
    "repository": "https://github.com/MovingBlocks/Terasology.git",
    "sha1": "8f63cc5c8edb8e740026447bc4827f8e8e6c34b1",
    "url": "https://github.com/MovingBlocks/Terasology/commit/8f63cc5c8edb8e740026447bc4827f8e8e6c34b1",
    "author": "Limeth",
    "time": "8/3/15 1:20 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private ensurePreviewUnloaded() : boolean extracted from public onClosed() : void in class org.terasology.rendering.nui.layers.mainMenu.PreviewWorldScreen",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1187
}, {
    "id": 1156431,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
    "url": "https://github.com/apache/cassandra/commit/1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
    "author": "Marcus Eriksson",
    "time": "8/4/15 4:51 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public minorWasTriggered(keyspace String, cf String) : boolean extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTriggerMinorCompaction() : void renamed to public minorWasTriggered(keyspace String, cf String) : boolean in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": "<p>testTriggerMinorCompaction might be renamed to&nbsp;testTriggerMinorCompactionSTCS (or other similar methods in the new code) but the overlapping part in&nbsp;testTriggerMinorCompaction and&nbsp;testTriggerMinorCompaction looks more like an extract method.</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public testTriggerMinorCompaction() : void renamed to public testTriggerMinorCompactionSTCSAlterTable() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest",
        "comment": "<p>new</p><p>This is more or less similar to&nbsp;http://refactoring.encs.concordia.ca/oracle/refactoring-details/1156431/3846</p>",
        "validation": "FP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 3975
}, {
    "id": 1156434,
    "repository": "https://github.com/apache/cassandra.git",
    "sha1": "e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "url": "https://github.com/apache/cassandra/commit/e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
    "author": "Robert Stupp",
    "time": "8/3/15 7:05 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public create(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String) : UDFunction in class org.apache.cassandra.cql3.functions.UDFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public validate(state ClientState) : void in class org.apache.cassandra.cql3.statements.CreateFunctionStatement",
        "comment": "<p>Extract and Move to other class</p><p>Extract and move to UDFunction</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public execute(protocolVersion int, parameters List) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 3338
}, {
    "id": 1156456,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "3a7ccf5a252077332b9505acb22f190745f726f7",
    "url": "https://github.com/gradle/gradle/commit/3a7ccf5a252077332b9505acb22f190745f726f7",
    "author": "Sterling Greene",
    "time": "8/3/15 4:21 PM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method private registerOrFindDeploymentHandle(deploymentRegistry DeploymentRegistry, deploymentId String) : PlayApplicationDeploymentHandle from class org.gradle.play.plugins.PlayApplicationPlugin.Rules to private registerOrFindDeploymentHandle(deploymentId String) : PlayApplicationDeploymentHandle from class org.gradle.play.tasks.PlayRun",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4377
}, {
    "id": 1156548,
    "repository": "https://github.com/apache/pig.git",
    "sha1": "92dce401344a28ff966ad4cf3dd969a676852315",
    "url": "https://github.com/apache/pig/commit/92dce401344a28ff966ad4cf3dd969a676852315",
    "author": "Jianyong Dai",
    "time": "8/3/15 9:16 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public depthFirstSearchForFile(statusArray FileStatus[], fileSystem FileSystem, filter PathFilter) : Path extracted from public depthFirstSearchForFile(statusArray FileStatus[], fileSystem FileSystem) : Path in class org.apache.pig.impl.util.Utils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2704
}, {
    "id": 1156578,
    "repository": "https://github.com/infinispan/infinispan.git",
    "sha1": "043030723632627b0908dca6b24dae91d3dfd938",
    "url": "https://github.com/infinispan/infinispan/commit/043030723632627b0908dca6b24dae91d3dfd938",
    "author": "gustavonalle",
    "time": "8/3/15 1:16 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private rehashAwareIteration(complete AtomicBoolean, consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private ignoreRehashIteration(consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>, primaryOwnerOnly boolean) : Supplier<Stream<CacheEntry>> extracted from protected supplierForSegments(ch ConsistentHash, targetSegments Set<Integer>, excludedKeys Set<Object>) : Supplier<Stream<CacheEntry>> in class org.infinispan.stream.impl.AbstractCacheStream",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5287
}, {
    "id": 1156821,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "d12e1c16d1c73142334e689eb01f20abaeba84b0",
    "url": "https://github.com/JetBrains/intellij-community/commit/d12e1c16d1c73142334e689eb01f20abaeba84b0",
    "author": "Aleksey Pivovarov",
    "time": "8/4/15 10:40 AM",
    "refactorings": [{
        "type": "Move Attribute",
        "description": "Move Attribute public ORIGINAL_DOCUMENT : Key<Document> from class com.intellij.diff.actions.DocumentFragmentContent to class com.intellij.openapi.command.undo.UndoManager",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 17341
}, {
    "id": 1156853,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "6b90205e9f7bbd1570f600d3812fd3efa1a0597e",
    "url": "https://github.com/JetBrains/intellij-community/commit/6b90205e9f7bbd1570f600d3812fd3efa1a0597e",
    "author": "Sergey Savenko",
    "time": "8/4/15 8:47 AM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.intellij.execution.console.RunIdeConsoleAction.IDE moved to com.intellij.ide.script.IDE",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 38937
}, {
    "id": 1157057,
    "repository": "https://github.com/HdrHistogram/HdrHistogram.git",
    "sha1": "0e65ac4da70c6ca5c67bb8418e67db914218042f",
    "url": "https://github.com/HdrHistogram/HdrHistogram/commit/0e65ac4da70c6ca5c67bb8418e67db914218042f",
    "author": "Gil Tene",
    "time": "8/4/15 3:44 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getIntervalHistogram() : EncodableHistogram extracted from public run() : void in class org.HdrHistogram.HistogramLogProcessor",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 147
}, {
    "id": 1157168,
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "sha1": "b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "url": "https://github.com/JoanZapata/android-iconify/commit/b08f28a10d050beaba6250e9e9c46efe13d9caaa",
    "author": "Joan Zapata",
    "time": "8/4/15 6:55 PM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public addIcons(icon T, textViews TextView[]) : void inlined to public addIcons(textViews TextView[]) : void in class com.joanzapata.android.iconify.Iconify",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class android.widget.IconButton moved to com.joanzapata.android.iconify.views.IconTextView",
        "comment": "<p>The class IconButton exists in the both revisions</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class android.widget.IconTextView moved to com.joanzapata.android.iconify.views.IconButton",
        "comment": "<p>The class&nbsp;IconTextView exists in the both revisions</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class com.joanzapata.android.iconify.Iconify.IconValue moved to com.joanzapata.android.iconify.fonts.FontAwesomeIcons",
        "comment": "<p>Matin: TP</p><p>The classes are conceptually the same! While the uses are different, but this is because the code is 'rewritten from scratch' as the commit message suggests</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method public setTextOff(textOff CharSequence) : void from class android.widget.IconToggleButton to public setTextOff(textOff CharSequence) : void from class com.joanzapata.android.iconify.views.IconToggleButton",
        "comment": "<p>they are the same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method public setTextOn(textOn CharSequence) : void from class android.widget.IconToggleButton to public setTextOn(textOn CharSequence) : void from class com.joanzapata.android.iconify.views.IconToggleButton",
        "comment": "<p>They are the same class</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class android.widget.IconButton moved to com.joanzapata.android.iconify.views.IconButton",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class android.widget.IconToggleButton moved to com.joanzapata.android.iconify.views.IconToggleButton",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class android.widget.IconTextView moved to com.joanzapata.android.iconify.views.IconTextView",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Change Package",
        "description": "Change Package android.widget to com.joanzapata.android.iconify.views",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 695
}, {
    "id": 1157172,
    "repository": "https://github.com/JoanZapata/android-iconify.git",
    "sha1": "eb500cca282e39d01a9882e1d0a83186da6d1a26",
    "url": "https://github.com/JoanZapata/android-iconify/commit/eb500cca282e39d01a9882e1d0a83186da6d1a26",
    "author": "Damien",
    "time": "8/3/15 5:55 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private copy(inputStream InputStream, outputFile File) : void extracted from package resourceToFile(context Context, resourceName String) : File in class com.joanzapata.android.iconify.Utils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 189
}, {
    "id": 1157287,
    "repository": "https://github.com/processing/processing.git",
    "sha1": "f36b736cf1206dd1af794d6fb4cee967a3553b1f",
    "url": "https://github.com/processing/processing/commit/f36b736cf1206dd1af794d6fb4cee967a3553b1f",
    "author": "Jakub Valtar",
    "time": "8/3/15 12:36 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private createDepthAndStencilBuffer(multisample boolean, depthBits int, stencilBits int, packed boolean) : void extracted from private createFBOLayer() : void in class processing.opengl.PGL",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 994
}, {
    "id": 1157300,
    "repository": "https://github.com/github/android.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/PocketHub.git",
    "sha1": "c97659888126e43e95f0d52d22188bfe194a8439",
    "url": "https://github.com/github/android/commit/c97659888126e43e95f0d52d22188bfe194a8439",
    "author": "Henri Sweers",
    "time": "8/5/15 4:34 AM",
    "refactorings": [{
        "type": "Change Package",
        "description": "Rename Package com.github.mobile to com.github.pockethub",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.DefaultClient moved to com.github.pockethub.DefaultClient",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.GitHubModule moved to com.github.pockethub.GitHubModule",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.Intents moved to com.github.pockethub.Intents",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.RequestCodes moved to com.github.pockethub.RequestCodes",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.RequestFuture moved to com.github.pockethub.RequestFuture",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.RequestReader moved to com.github.pockethub.RequestReader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.RequestWriter moved to com.github.pockethub.RequestWriter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ResultCodes moved to com.github.pockethub.ResultCodes",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ServicesModule moved to com.github.pockethub.ServicesModule",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ThrowableLoader moved to com.github.pockethub.ThrowableLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AccountAuthenticator moved to com.github.pockethub.accounts.AccountAuthenticator",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AccountAuthenticatorService moved to com.github.pockethub.accounts.AccountAuthenticatorService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AccountClient moved to com.github.pockethub.accounts.AccountClient",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AccountConstants moved to com.github.pockethub.accounts.AccountConstants",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AccountScope moved to com.github.pockethub.accounts.AccountScope",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AccountUtils moved to com.github.pockethub.accounts.AccountUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AuthenticatedUserLoader moved to com.github.pockethub.accounts.AuthenticatedUserLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.AuthenticatedUserTask moved to com.github.pockethub.accounts.AuthenticatedUserTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.GitHubAccount moved to com.github.pockethub.accounts.GitHubAccount",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.LoginActivity moved to com.github.pockethub.accounts.LoginActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.LoginWebViewActivity moved to com.github.pockethub.accounts.LoginWebViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.ScopeBase moved to com.github.pockethub.accounts.ScopeBase",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.TwoFactorAuthActivity moved to com.github.pockethub.accounts.TwoFactorAuthActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.TwoFactorAuthClient moved to com.github.pockethub.accounts.TwoFactorAuthClient",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.accounts.TwoFactorAuthException moved to com.github.pockethub.accounts.TwoFactorAuthException",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.api.GitHubClientV2 moved to com.github.pockethub.api.GitHubClientV2",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.ItemStore moved to com.github.pockethub.core.ItemStore",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.OnLoadListener moved to com.github.pockethub.core.OnLoadListener",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.ResourcePager moved to com.github.pockethub.core.ResourcePager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.UrlMatcher moved to com.github.pockethub.core.UrlMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.code.FullTree moved to com.github.pockethub.core.code.FullTree",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.code.RefreshBlobTask moved to com.github.pockethub.core.code.RefreshBlobTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.code.RefreshTreeTask moved to com.github.pockethub.core.code.RefreshTreeTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.CommitCompareTask moved to com.github.pockethub.core.commit.CommitCompareTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.CommitMatch moved to com.github.pockethub.core.commit.CommitMatch",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.CommitPager moved to com.github.pockethub.core.commit.CommitPager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.CommitStore moved to com.github.pockethub.core.commit.CommitStore",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.CommitUriMatcher moved to com.github.pockethub.core.commit.CommitUriMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.CommitUtils moved to com.github.pockethub.core.commit.CommitUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.FullCommit moved to com.github.pockethub.core.commit.FullCommit",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.FullCommitFile moved to com.github.pockethub.core.commit.FullCommitFile",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.commit.RefreshCommitTask moved to com.github.pockethub.core.commit.RefreshCommitTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.FullGist moved to com.github.pockethub.core.gist.FullGist",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.GistEventMatcher moved to com.github.pockethub.core.gist.GistEventMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.GistPager moved to com.github.pockethub.core.gist.GistPager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.GistStore moved to com.github.pockethub.core.gist.GistStore",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.GistUriMatcher moved to com.github.pockethub.core.gist.GistUriMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.RefreshGistTask moved to com.github.pockethub.core.gist.RefreshGistTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.StarGistTask moved to com.github.pockethub.core.gist.StarGistTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.gist.UnstarGistTask moved to com.github.pockethub.core.gist.UnstarGistTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.FullIssue moved to com.github.pockethub.core.issue.FullIssue",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.IssueEventMatcher moved to com.github.pockethub.core.issue.IssueEventMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.IssueFilter moved to com.github.pockethub.core.issue.IssueFilter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.IssuePager moved to com.github.pockethub.core.issue.IssuePager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.IssueStore moved to com.github.pockethub.core.issue.IssueStore",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.IssueUriMatcher moved to com.github.pockethub.core.issue.IssueUriMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.IssueUtils moved to com.github.pockethub.core.issue.IssueUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.issue.RefreshIssueTask moved to com.github.pockethub.core.issue.RefreshIssueTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.ref.RefUtils moved to com.github.pockethub.core.ref.RefUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.DeleteRepositoryTask moved to com.github.pockethub.core.repo.DeleteRepositoryTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.ForkRepositoryTask moved to com.github.pockethub.core.repo.ForkRepositoryTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.RefreshRepositoryTask moved to com.github.pockethub.core.repo.RefreshRepositoryTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.RepositoryEventMatcher moved to com.github.pockethub.core.repo.RepositoryEventMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.RepositoryUriMatcher moved to com.github.pockethub.core.repo.RepositoryUriMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.RepositoryUtils moved to com.github.pockethub.core.repo.RepositoryUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.StarRepositoryTask moved to com.github.pockethub.core.repo.StarRepositoryTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.StarredRepositoryTask moved to com.github.pockethub.core.repo.StarredRepositoryTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.repo.UnstarRepositoryTask moved to com.github.pockethub.core.repo.UnstarRepositoryTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.search.SearchUser moved to com.github.pockethub.core.search.SearchUser",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.search.SearchUserService moved to com.github.pockethub.core.search.SearchUserService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.FollowUserTask moved to com.github.pockethub.core.user.FollowUserTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.FollowingUserTask moved to com.github.pockethub.core.user.FollowingUserTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.RefreshUserTask moved to com.github.pockethub.core.user.RefreshUserTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.UnfollowUserTask moved to com.github.pockethub.core.user.UnfollowUserTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.UserComparator moved to com.github.pockethub.core.user.UserComparator",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.UserEventMatcher moved to com.github.pockethub.core.user.UserEventMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.UserPager moved to com.github.pockethub.core.user.UserPager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.user.UserUriMatcher moved to com.github.pockethub.core.user.UserUriMatcher",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.model.App moved to com.github.pockethub.model.App",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.model.Authorization moved to com.github.pockethub.model.Authorization",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.persistence.AccountDataManager moved to com.github.pockethub.persistence.AccountDataManager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.persistence.CacheHelper moved to com.github.pockethub.persistence.CacheHelper",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.persistence.DatabaseCache moved to com.github.pockethub.persistence.DatabaseCache",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.persistence.OrganizationRepositories moved to com.github.pockethub.persistence.OrganizationRepositories",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.persistence.Organizations moved to com.github.pockethub.persistence.Organizations",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.persistence.PersistableResource moved to com.github.pockethub.persistence.PersistableResource",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.sync.ContentProviderAdapter moved to com.github.pockethub.sync.ContentProviderAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.sync.SyncAdapter moved to com.github.pockethub.sync.SyncAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.sync.SyncAdapterService moved to com.github.pockethub.sync.SyncAdapterService",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.sync.SyncCampaign moved to com.github.pockethub.sync.SyncCampaign",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.ActivityTest moved to com.github.pockethub.tests.ActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.FiltersViewActivityTest moved to com.github.pockethub.tests.FiltersViewActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.NewsEventTextTest moved to com.github.pockethub.tests.NewsEventTextTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.commit.CommitUriMatcherTest moved to com.github.pockethub.tests.commit.CommitUriMatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.commit.CommitUtilsTest moved to com.github.pockethub.tests.commit.CommitUtilsTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.commit.CreateCommentActivityTest moved to com.github.pockethub.tests.commit.CreateCommentActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.commit.DiffStylerTest moved to com.github.pockethub.tests.commit.DiffStylerTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.commit.FullCommitTest moved to com.github.pockethub.tests.commit.FullCommitTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.gist.CreateCommentActivityTest moved to com.github.pockethub.tests.gist.CreateCommentActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.gist.CreateGistActivityTest moved to com.github.pockethub.tests.gist.CreateGistActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.gist.GistFilesViewActivityTest moved to com.github.pockethub.tests.gist.GistFilesViewActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.gist.GistStoreTest moved to com.github.pockethub.tests.gist.GistStoreTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.gist.GistUriMatcherTest moved to com.github.pockethub.tests.gist.GistUriMatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.issue.CreateCommentActivityTest moved to com.github.pockethub.tests.issue.CreateCommentActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.issue.EditIssueActivityTest moved to com.github.pockethub.tests.issue.EditIssueActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.issue.EditIssuesFilterActivityTest moved to com.github.pockethub.tests.issue.EditIssuesFilterActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.issue.IssueFilterTest moved to com.github.pockethub.tests.issue.IssueFilterTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.issue.IssueStoreTest moved to com.github.pockethub.tests.issue.IssueStoreTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.issue.IssueUriMatcherTest moved to com.github.pockethub.tests.issue.IssueUriMatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.ref.RefUtilsTest moved to com.github.pockethub.tests.ref.RefUtilsTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.repo.RecentRepositoriesTest moved to com.github.pockethub.tests.repo.RecentRepositoriesTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.repo.RepositoryEventMatcherTest moved to com.github.pockethub.tests.repo.RepositoryEventMatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.repo.RepositoryUriMatcherTest moved to com.github.pockethub.tests.repo.RepositoryUriMatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.repo.SearchActivityTest moved to com.github.pockethub.tests.repo.SearchActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.user.LoginActivityTest moved to com.github.pockethub.tests.user.LoginActivityTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.user.UserComparatorTest moved to com.github.pockethub.tests.user.UserComparatorTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.user.UserUriMatcherTest moved to com.github.pockethub.tests.user.UserUriMatcherTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.tests.util.HtmlUtilsTest moved to com.github.pockethub.tests.util.HtmlUtilsTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.BaseActivity moved to com.github.pockethub.ui.BaseActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.CheckableRelativeLayout moved to com.github.pockethub.ui.CheckableRelativeLayout",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ConfirmDialogFragment moved to com.github.pockethub.ui.ConfirmDialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.DialogFragment moved to com.github.pockethub.ui.DialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.DialogFragmentActivity moved to com.github.pockethub.ui.DialogFragmentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.DialogFragmentHelper moved to com.github.pockethub.ui.DialogFragmentHelper",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.DialogResultListener moved to com.github.pockethub.ui.DialogResultListener",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.FragmentPagerAdapter moved to com.github.pockethub.ui.FragmentPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.FragmentProvider moved to com.github.pockethub.ui.FragmentProvider",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.FragmentStatePagerAdapter moved to com.github.pockethub.ui.FragmentStatePagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.HeaderFooterListAdapter moved to com.github.pockethub.ui.HeaderFooterListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ItemListFragment moved to com.github.pockethub.ui.ItemListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.LightAlertDialog moved to com.github.pockethub.ui.LightAlertDialog",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.LightProgressDialog moved to com.github.pockethub.ui.LightProgressDialog",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.MainActivity moved to com.github.pockethub.ui.MainActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.MarkdownLoader moved to com.github.pockethub.ui.MarkdownLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.NavigationDrawerAdapter moved to com.github.pockethub.ui.NavigationDrawerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.NavigationDrawerFragment moved to com.github.pockethub.ui.NavigationDrawerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.NavigationDrawerObject moved to com.github.pockethub.ui.NavigationDrawerObject",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.NewsFragment moved to com.github.pockethub.ui.NewsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.PagedItemFragment moved to com.github.pockethub.ui.PagedItemFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.PagerActivity moved to com.github.pockethub.ui.PagerActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.PagerFragment moved to com.github.pockethub.ui.PagerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.PatchedScrollingViewBehavior moved to com.github.pockethub.ui.PatchedScrollingViewBehavior",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ProgressDialogTask moved to com.github.pockethub.ui.ProgressDialogTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ResourceLoadingIndicator moved to com.github.pockethub.ui.ResourceLoadingIndicator",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.SelectableLinkMovementMethod moved to com.github.pockethub.ui.SelectableLinkMovementMethod",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.SingleChoiceDialogFragment moved to com.github.pockethub.ui.SingleChoiceDialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.StyledText moved to com.github.pockethub.ui.StyledText",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.TabPagerActivity moved to com.github.pockethub.ui.TabPagerActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.TabPagerFragment moved to com.github.pockethub.ui.TabPagerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.TextWatcherAdapter moved to com.github.pockethub.ui.TextWatcherAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ViewPager moved to com.github.pockethub.ui.ViewPager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.WebView moved to com.github.pockethub.ui.WebView",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.code.RepositoryCodeFragment moved to com.github.pockethub.ui.code.RepositoryCodeFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.CommentListAdapter moved to com.github.pockethub.ui.comment.CommentListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.CommentPreviewPagerAdapter moved to com.github.pockethub.ui.comment.CommentPreviewPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.CreateCommentActivity moved to com.github.pockethub.ui.comment.CreateCommentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.DeleteCommentListener moved to com.github.pockethub.ui.comment.DeleteCommentListener",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.EditCommentListener moved to com.github.pockethub.ui.comment.EditCommentListener",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.RawCommentFragment moved to com.github.pockethub.ui.comment.RawCommentFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.comment.RenderedCommentFragment moved to com.github.pockethub.ui.comment.RenderedCommentFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitCompareListFragment moved to com.github.pockethub.ui.commit.CommitCompareListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitCompareViewActivity moved to com.github.pockethub.ui.commit.CommitCompareViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitDiffListFragment moved to com.github.pockethub.ui.commit.CommitDiffListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitFileComparator moved to com.github.pockethub.ui.commit.CommitFileComparator",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitFileListAdapter moved to com.github.pockethub.ui.commit.CommitFileListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitFileViewActivity moved to com.github.pockethub.ui.commit.CommitFileViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitListAdapter moved to com.github.pockethub.ui.commit.CommitListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitListFragment moved to com.github.pockethub.ui.commit.CommitListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitPagerAdapter moved to com.github.pockethub.ui.commit.CommitPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CommitViewActivity moved to com.github.pockethub.ui.commit.CommitViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CreateCommentTask moved to com.github.pockethub.ui.commit.CreateCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.DiffStyler moved to com.github.pockethub.ui.commit.DiffStyler",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.CreateCommentTask moved to com.github.pockethub.ui.gist.CreateCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.CreateGistActivity moved to com.github.pockethub.ui.gist.CreateGistActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.CreateGistTask moved to com.github.pockethub.ui.gist.CreateGistTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.DeleteCommentTask moved to com.github.pockethub.ui.gist.DeleteCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.DeleteGistTask moved to com.github.pockethub.ui.gist.DeleteGistTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.EditCommentTask moved to com.github.pockethub.ui.gist.EditCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistFileFragment moved to com.github.pockethub.ui.gist.GistFileFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistFilesPagerAdapter moved to com.github.pockethub.ui.gist.GistFilesPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistFilesViewActivity moved to com.github.pockethub.ui.gist.GistFilesViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistFragment moved to com.github.pockethub.ui.gist.GistFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistListAdapter moved to com.github.pockethub.ui.gist.GistListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistQueriesPagerAdapter moved to com.github.pockethub.ui.gist.GistQueriesPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistsFragment moved to com.github.pockethub.ui.gist.GistsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistsPagerAdapter moved to com.github.pockethub.ui.gist.GistsPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistsPagerFragment moved to com.github.pockethub.ui.gist.GistsPagerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.GistsViewActivity moved to com.github.pockethub.ui.gist.GistsViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.MyGistsFragment moved to com.github.pockethub.ui.gist.MyGistsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.PublicGistsFragment moved to com.github.pockethub.ui.gist.PublicGistsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.RandomGistTask moved to com.github.pockethub.ui.gist.RandomGistTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.StarredGistsFragment moved to com.github.pockethub.ui.gist.StarredGistsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.AssigneeDialog moved to com.github.pockethub.ui.issue.AssigneeDialog",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.AssigneeDialogFragment moved to com.github.pockethub.ui.issue.AssigneeDialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.CreateCommentTask moved to com.github.pockethub.ui.issue.CreateCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.CreateIssueTask moved to com.github.pockethub.ui.issue.CreateIssueTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.DashboardIssueFragment moved to com.github.pockethub.ui.issue.DashboardIssueFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.DashboardIssueListAdapter moved to com.github.pockethub.ui.issue.DashboardIssueListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.DeleteCommentTask moved to com.github.pockethub.ui.issue.DeleteCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditAssigneeTask moved to com.github.pockethub.ui.issue.EditAssigneeTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditCommentTask moved to com.github.pockethub.ui.issue.EditCommentTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditIssueActivity moved to com.github.pockethub.ui.issue.EditIssueActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditIssueTask moved to com.github.pockethub.ui.issue.EditIssueTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditIssuesFilterActivity moved to com.github.pockethub.ui.issue.EditIssuesFilterActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditLabelsTask moved to com.github.pockethub.ui.issue.EditLabelsTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditMilestoneTask moved to com.github.pockethub.ui.issue.EditMilestoneTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditStateTask moved to com.github.pockethub.ui.issue.EditStateTask",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.FilterListAdapter moved to com.github.pockethub.ui.issue.FilterListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.FilterListFragment moved to com.github.pockethub.ui.issue.FilterListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.FiltersViewActivity moved to com.github.pockethub.ui.issue.FiltersViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.FiltersViewFragment moved to com.github.pockethub.ui.issue.FiltersViewFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueBrowseActivity moved to com.github.pockethub.ui.issue.IssueBrowseActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueDashboardPagerAdapter moved to com.github.pockethub.ui.issue.IssueDashboardPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueDashboardPagerFragment moved to com.github.pockethub.ui.issue.IssueDashboardPagerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueFragment moved to com.github.pockethub.ui.issue.IssueFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueListAdapter moved to com.github.pockethub.ui.issue.IssueListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueSearchActivity moved to com.github.pockethub.ui.issue.IssueSearchActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssueSearchSuggestionsProvider moved to com.github.pockethub.ui.issue.IssueSearchSuggestionsProvider",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssuesFragment moved to com.github.pockethub.ui.issue.IssuesFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssuesPagerAdapter moved to com.github.pockethub.ui.issue.IssuesPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.IssuesViewActivity moved to com.github.pockethub.ui.issue.IssuesViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.LabelDrawableSpan moved to com.github.pockethub.ui.issue.LabelDrawableSpan",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.LabelsDialog moved to com.github.pockethub.ui.issue.LabelsDialog",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.LabelsDialogFragment moved to com.github.pockethub.ui.issue.LabelsDialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.MilestoneDialog moved to com.github.pockethub.ui.issue.MilestoneDialog",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.MilestoneDialogFragment moved to com.github.pockethub.ui.issue.MilestoneDialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.RepositoryIssueListAdapter moved to com.github.pockethub.ui.issue.RepositoryIssueListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.SearchIssueListAdapter moved to com.github.pockethub.ui.issue.SearchIssueListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.SearchIssueListFragment moved to com.github.pockethub.ui.issue.SearchIssueListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ref.BranchFileViewActivity moved to com.github.pockethub.ui.ref.BranchFileViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ref.CodeTreeAdapter moved to com.github.pockethub.ui.ref.CodeTreeAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ref.RefDialog moved to com.github.pockethub.ui.ref.RefDialog",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.ref.RefDialogFragment moved to com.github.pockethub.ui.ref.RefDialogFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.ContributorListAdapter moved to com.github.pockethub.ui.repo.ContributorListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.DefaultRepositoryListAdapter moved to com.github.pockethub.ui.repo.DefaultRepositoryListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.OrganizationLoader moved to com.github.pockethub.ui.repo.OrganizationLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RecentRepositories moved to com.github.pockethub.ui.repo.RecentRepositories",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryContributorsActivity moved to com.github.pockethub.ui.repo.RepositoryContributorsActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryContributorsFragment moved to com.github.pockethub.ui.repo.RepositoryContributorsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryListAdapter moved to com.github.pockethub.ui.repo.RepositoryListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryListFragment moved to com.github.pockethub.ui.repo.RepositoryListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryNewsFragment moved to com.github.pockethub.ui.repo.RepositoryNewsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryPagerAdapter moved to com.github.pockethub.ui.repo.RepositoryPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.RepositoryViewActivity moved to com.github.pockethub.ui.repo.RepositoryViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.UserRepositoryListAdapter moved to com.github.pockethub.ui.repo.UserRepositoryListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.repo.UserRepositoryListFragment moved to com.github.pockethub.ui.repo.UserRepositoryListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.roboactivities.ActionBarAccountAuthenticatorActivity moved to com.github.pockethub.ui.roboactivities.ActionBarAccountAuthenticatorActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.roboactivities.RoboActionBarAccountAuthenticatorActivity moved to com.github.pockethub.ui.roboactivities.RoboActionBarAccountAuthenticatorActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.roboactivities.RoboActionBarActivity moved to com.github.pockethub.ui.roboactivities.RoboActionBarActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.roboactivities.RoboSupportFragment moved to com.github.pockethub.ui.roboactivities.RoboSupportFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.RepositorySearchSuggestionsProvider moved to com.github.pockethub.ui.search.RepositorySearchSuggestionsProvider",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.SearchActivity moved to com.github.pockethub.ui.search.SearchActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.SearchPagerAdapter moved to com.github.pockethub.ui.search.SearchPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.SearchRepositoryListAdapter moved to com.github.pockethub.ui.search.SearchRepositoryListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.SearchRepositoryListFragment moved to com.github.pockethub.ui.search.SearchRepositoryListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.SearchUserListAdapter moved to com.github.pockethub.ui.search.SearchUserListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.search.SearchUserListFragment moved to com.github.pockethub.ui.search.SearchUserListFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.EventPager moved to com.github.pockethub.ui.user.EventPager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.EventType moved to com.github.pockethub.ui.user.EventType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.FollowersFragment moved to com.github.pockethub.ui.user.FollowersFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.FollowingFragment moved to com.github.pockethub.ui.user.FollowingFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.HomePagerAdapter moved to com.github.pockethub.ui.user.HomePagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.HomePagerFragment moved to com.github.pockethub.ui.user.HomePagerFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.IconAndViewTextManager moved to com.github.pockethub.ui.user.IconAndViewTextManager",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.IconAndViewTextManagerTest moved to com.github.pockethub.ui.user.IconAndViewTextManagerTest",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.MembersFragment moved to com.github.pockethub.ui.user.MembersFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.MyFollowersFragment moved to com.github.pockethub.ui.user.MyFollowersFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.MyFollowingFragment moved to com.github.pockethub.ui.user.MyFollowingFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.NewsListAdapter moved to com.github.pockethub.ui.user.NewsListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.OrganizationNewsFragment moved to com.github.pockethub.ui.user.OrganizationNewsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.OrganizationSelectionListener moved to com.github.pockethub.ui.user.OrganizationSelectionListener",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.OrganizationSelectionProvider moved to com.github.pockethub.ui.user.OrganizationSelectionProvider",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.PagedUserFragment moved to com.github.pockethub.ui.user.PagedUserFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UriLauncherActivity moved to com.github.pockethub.ui.user.UriLauncherActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserCreatedNewsFragment moved to com.github.pockethub.ui.user.UserCreatedNewsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserFollowersFragment moved to com.github.pockethub.ui.user.UserFollowersFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserFollowingFragment moved to com.github.pockethub.ui.user.UserFollowingFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserListAdapter moved to com.github.pockethub.ui.user.UserListAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserNewsFragment moved to com.github.pockethub.ui.user.UserNewsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserPagerAdapter moved to com.github.pockethub.ui.user.UserPagerAdapter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserReceivedNewsFragment moved to com.github.pockethub.ui.user.UserReceivedNewsFragment",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.user.UserViewActivity moved to com.github.pockethub.ui.user.UserViewActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.AvatarLoader moved to com.github.pockethub.util.AvatarLoader",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.GravatarUtils moved to com.github.pockethub.util.GravatarUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.HtmlUtils moved to com.github.pockethub.util.HtmlUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.HttpImageGetter moved to com.github.pockethub.util.HttpImageGetter",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.ImageUtils moved to com.github.pockethub.util.ImageUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.MarkdownUtils moved to com.github.pockethub.util.MarkdownUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.PreferenceUtils moved to com.github.pockethub.util.PreferenceUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.ServiceUtils moved to com.github.pockethub.util.ServiceUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.ShareUtils moved to com.github.pockethub.util.ShareUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.SourceEditor moved to com.github.pockethub.util.SourceEditor",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.TimeUtils moved to com.github.pockethub.util.TimeUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.ToastUtils moved to com.github.pockethub.util.ToastUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.util.TypefaceUtils moved to com.github.pockethub.util.TypefaceUtils",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.commit.CreateCommentActivity moved to com.github.pockethub.ui.commit.CreateCommentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.EditCommentActivity moved to com.github.pockethub.ui.issue.EditCommentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.EditCommentActivity moved to com.github.pockethub.ui.gist.EditCommentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.issue.CreateCommentActivity moved to com.github.pockethub.ui.issue.CreateCommentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.ui.gist.CreateCommentActivity moved to com.github.pockethub.ui.gist.CreateCommentActivity",
        "comment": "Agreement",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.ItemStore.ItemReferences moved to com.github.pockethub.core.ItemStore.ItemReferences",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Class",
        "description": "Move Class com.github.mobile.core.ItemStore.ItemReference moved to com.github.pockethub.core.ItemStore.ItemReference",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }],
    "refDiffExecutionTime": 7547
}, {
    "id": 1157522,
    "repository": "https://github.com/hibernate/hibernate-orm.git",
    "sha1": "7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "url": "https://github.com/hibernate/hibernate-orm/commit/7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
    "author": "Janario Oliveira",
    "time": "8/4/15 11:50 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.FirstLetterType moved to org.hibernate.test.annotations.enumerated.custom_types.FirstLetterType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.LastNumberType moved to org.hibernate.test.annotations.enumerated.custom_types.LastNumberType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.Common moved to org.hibernate.test.annotations.enumerated.enums.Common",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.Trimmed moved to org.hibernate.test.annotations.enumerated.enums.Trimmed",
        "comment": "<p>The Enum has been moved from inside a class into a separate .java file. There are similar cases in the same refactoring</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.FirstLetter moved to org.hibernate.test.annotations.enumerated.enums.FirstLetter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.hibernate.test.annotations.enumerated.EntityEnum.LastNumber moved to org.hibernate.test.annotations.enumerated.enums.LastNumber",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 4528
}, {
    "id": 1157610,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "c41466b6fd11ef4edc40cb9fd42dc13cf4f6fde1",
    "url": "https://github.com/gradle/gradle/commit/c41466b6fd11ef4edc40cb9fd42dc13cf4f6fde1",
    "author": "Darrell DeBoer",
    "time": "8/4/15 11:52 AM",
    "refactorings": [{
        "type": "Inline Method",
        "description": "Inline Method public resolveMetaDataArtifact(artifact ModuleComponentArtifactMetaData, result ResourceAwareResolveResult) : LocallyAvailableExternalResource inlined to public resolveArtifact(artifact ModuleComponentArtifactMetaData, result ResourceAwareResolveResult) : LocallyAvailableExternalResource in class org.gradle.api.internal.artifacts.repositories.resolver.DefaultExternalResourceArtifactResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 3736
}, {
    "id": 1157680,
    "repository": "https://github.com/addthis/hydra.git",
    "sha1": "664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "url": "https://github.com/addthis/hydra/commit/664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
    "author": "Matt Abrams",
    "time": "8/4/15 12:58 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public updateHits(state DataTreeNodeUpdater, path TreeDataParent) : boolean extracted from public updateChildData(state DataTreeNodeUpdater, path TreeDataParent) : void in class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 923
}, {
    "id": 1157971,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "153611deab149accd8aeaf03fd102c0b069bd322",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/153611deab149accd8aeaf03fd102c0b069bd322",
    "author": "Roman Birg",
    "time": "8/5/15 9:45 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public of(cells Cell[][], row int, column int, size byte) : Cell extracted from public of(row int, column int, size byte) : Cell in class com.android.internal.widget.LockPatternView.Cell",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public stringToPattern(string String, size byte) : List<LockPatternView.Cell> extracted from public stringToPattern(string String) : List<LockPatternView.Cell> in class com.android.internal.widget.LockPatternUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 12918
}, {
    "id": 1158121,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "61215911ef28ca783c5106d7c01e74cf3000a866",
    "url": "https://github.com/JetBrains/intellij-community/commit/61215911ef28ca783c5106d7c01e74cf3000a866",
    "author": "Konstantin Kolosovsky",
    "time": "8/5/15 1:03 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public format(path String, pegRevision SVNRevision) : String extracted from public put(parameters List<String>, path String, pegRevision SVNRevision) : void in class org.jetbrains.idea.svn.commandLine.CommandUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 36469
}, {
    "id": 1158123,
    "repository": "https://github.com/JetBrains/intellij-community.git",
    "sha1": "98ecc4cfd927f388645f6a6bc492c80868b1a11d",
    "url": "https://github.com/JetBrains/intellij-community/commit/98ecc4cfd927f388645f6a6bc492c80868b1a11d",
    "author": "Dmitry Batkovich",
    "time": "8/5/15 12:07 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private getFileNamesToCreate() : Set<String> extracted from private createPropertiesFiles() : List<PsiFile> in class com.intellij.lang.properties.create.CreateResourceBundleDialogComponent",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 16215
}, {
    "id": 1158180,
    "repository": "https://github.com/wildfly/wildfly.git",
    "sha1": "bf35b533f067b51d4c373c5e5124d88525db99f3",
    "url": "https://github.com/wildfly/wildfly/commit/bf35b533f067b51d4c373c5e5124d88525db99f3",
    "author": "James Perkins",
    "time": "8/5/15 7:32 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor.JobXmlFilter moved to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver.JobXmlFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.wildfly.extension.batch.jberet.deployment.JobXmlResolverService renamed to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class org.wildfly.extension.batch.deployment.BatchEnvironmentProcessor.JobXmlFilter moved to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver.JobXmlFilter",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Rename Method",
        "description": "Rename Method public start(context StartContext) : void renamed to private init() : void in class org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public of(classLoader ClassLoader, deploymentUnit DeploymentUnit) : WildFlyJobXmlResolver extracted from public deploy(phaseContext DeploymentPhaseContext) : void in class org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor",
        "comment": "<p>Extract and Move to other class</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Laleh, Davood, Automatic"
    }],
    "refDiffExecutionTime": 4054
}, {
    "id": 1158352,
    "repository": "https://github.com/Netflix/genie.git",
    "sha1": "b77de40c0f3dd43a16f2491558594a61682271fc",
    "url": "https://github.com/Netflix/genie/commit/b77de40c0f3dd43a16f2491558594a61682271fc",
    "author": "Tom Gianos",
    "time": "8/5/15 5:47 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class com.netflix.genie.server.startup.TestGenieApplication moved to com.netflix.genie.web.startup.TestGenieApplication",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.netflix.genie.server.health.TestHealthCheck moved to com.netflix.genie.web.health.TestHealthCheck",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.netflix.genie.server.health.HealthCheck moved to com.netflix.genie.web.health.HealthCheck",
        "comment": "added",
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Davood"
    }, {
        "type": "Move Class",
        "description": "Move Class com.netflix.genie.server.startup.GenieApplication moved to com.netflix.genie.web.startup.GenieApplication",
        "comment": "new---",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1158457,
    "repository": "https://github.com/jayway/rest-assured.git",
    "mirrorRepository": "https://github.com/icse18-refactorings/rest-assured.git",
    "sha1": "7cac88b9a28efc05bdc60e585e3291862ffc9da1",
    "url": "https://github.com/jayway/rest-assured/commit/7cac88b9a28efc05bdc60e585e3291862ffc9da1",
    "author": "Johan Haleby",
    "time": "8/6/15 5:44 AM",
    "refactorings": [{
        "type": "Move Method",
        "description": "Move Method public supportsOverridingKeystore() : void from class com.jayway.restassured.itest.java.SpecificationBuilderITest to public supportsOverridingKeystore() : void from class com.jayway.restassured.itest.java.SSLITest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Method",
        "description": "Move Method public supportsSpecifyingKeystore() : void from class com.jayway.restassured.itest.java.SpecificationBuilderITest to public supportsSpecifyingKeystore() : void from class com.jayway.restassured.itest.java.SSLITest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 435
}, {
    "id": 1158716,
    "repository": "https://github.com/gradle/gradle.git",
    "sha1": "44aab6242f8c93059612c953af950eb1870e0774",
    "url": "https://github.com/gradle/gradle/commit/44aab6242f8c93059612c953af950eb1870e0774",
    "author": "Adrian Kelly",
    "time": "8/5/15 1:14 PM",
    "refactorings": [{
        "type": "Extract Interface",
        "description": "Extract Interface org.gradle.internal.file.RelativeFilePathResolver from class org.gradle.api.internal.file.FileResolver",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5181
}, {
    "id": 1158913,
    "repository": "https://github.com/geoserver/geoserver.git",
    "sha1": "e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "url": "https://github.com/geoserver/geoserver/commit/e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
    "author": "Stefano Costa",
    "time": "8/5/15 7:22 PM",
    "refactorings": [{
        "type": "Extract Superclass",
        "description": "Extract Superclass org.geoserver.ogr.core.AbstractToolWrapper from class org.geoserver.wfs.response.OGRWrapper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.geoserver.ogr.core.Format from class org.geoserver.wfs.response.OgrFormat",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.geoserver.ogr.core.ToolConfiguration from class org.geoserver.wfs.response.OgrConfiguration",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Superclass",
        "description": "Extract Superclass org.geoserver.ogr.core.AbstractToolConfigurator from class org.geoserver.wfs.response.Ogr2OgrConfigurator",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getOgrExecutable() : String renamed to public getExecutable() : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public setOgrExecutable(ogrExecutable String) : void renamed to public setExecutable(ogrExecutable String) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public getGdalData() : String renamed to public getEnvironment() : Map<String,String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public onApplicationEvent(event ContextClosedEvent) : void from class org.geoserver.wfs.response.Ogr2OgrConfigurator to public onApplicationEvent(event ContextClosedEvent) : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public loadConfiguration() : void from class org.geoserver.wfs.response.Ogr2OgrConfigurator to public loadConfiguration() : void from class org.geoserver.ogr.core.AbstractToolConfigurator",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private LOGGER : Logger from class org.geoserver.wfs.response.Ogr2OgrConfigurator to class org.geoserver.ogr.core.AbstractToolConfigurator",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute private singleFile : boolean from class org.geoserver.wfs.response.OgrFormat to class org.geoserver.ogr.core.Format",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected listener : ResourceListener from class org.geoserver.wfs.response.Ogr2OgrConfigurator to class org.geoserver.ogr.core.AbstractToolConfigurator",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Pull Up Attribute",
        "description": "Pull Up Attribute protected configFile : Resource from class org.geoserver.wfs.response.Ogr2OgrConfigurator to class org.geoserver.ogr.core.AbstractToolConfigurator",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Move And Rename Class org.geoserver.wfs.response.OgrType moved to org.geoserver.ogr.core.OutputType",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method package run(cmd List, sb StringBuilder) : int from class org.geoserver.wfs.response.OGRWrapper to protected run(cmd List, sb StringBuilder) : int from class org.geoserver.ogr.core.AbstractToolWrapper",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Pull Up Method",
        "description": "Pull Up Method public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File from class org.geoserver.wfs.response.OGRWrapper to public convert(inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : File from class org.geoserver.ogr.core.AbstractToolWrapper",
        "comment": "<p>We have Extract Superclass refactroing see:</p><p>http://refactoring.encs.concordia.ca/oracle/refactoring-details/1158913/4182</p><p>Since already the abstract refactoring exists as TP, and RefDiff is able to&nbsp; detect Extract Superclass, thus this is a FP</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract and Move Method",
        "description": "Extract Method protected setInputOutput(cmd List, inputData File, outputDirectory File, typeName String, format Format) : String extracted from public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File in class org.geoserver.wfs.response.OGRWrapper",
        "comment": "<p>Extract and Move to other class</p><p>The actual scenario is:</p><p>1- we have an Extrract superclass org.geoserver.ogr.core.AbstractToolWrapper from class org.geoserver.wfs.response.OGRWrapper</p><p>see(http://refactoring.encs.concordia.ca/oracle/refactoring-details/1158913/4182)</p><p>2- then&nbsp; method public convert(inputData File, outputDirectory File, typeName String, format OgrFormat, crs CoordinateReferenceSystem) : File from class org.geoserver.wfs.response.OGRWrapper is pull up to public convert(inputData File, outputDirectory File, typeName String, format Format, crs CoordinateReferenceSystem) : File from class org.geoserver.ogr.core.AbstractToolWrapper</p><p>3- then in the after pull up refactoring we have the current extartc method refactoing. We consider it as CTP</p><p>&nbsp;</p><p>&nbsp;</p><p>&nbsp;</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Automatic"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isSingleFile() : boolean extracted from protected write(featureCollection FeatureCollectionResponse, output OutputStream, getFeature Operation) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "comment": "<p>Extract and Move to other class </p><p>Extract and Move to class Format</p>",
        "validation": "CTP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isSingleFile() : boolean extracted from public getMimeType(value Object, operation Operation) : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "comment": "<p>Extract and Move to other&nbsp; class</p><p>Extract and Move to class Format</p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method public isSingleFile() : boolean extracted from public getAttachmentFileName(value Object, operation Operation) : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat",
        "comment": "<p>Extract and Move to other class</p><p><span class='blob-code-inner'><span class='pl-smi x x-first x-last'>Extract and Move to class Format</span></span></p>",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh, Davood"
    }],
    "refDiffExecutionTime": 3729
}, {
    "id": 1158923,
    "repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
    "sha1": "f1b8ae1c44e6ba46118c2f66eae1725259acdccc",
    "url": "https://github.com/CyanogenMod/android_frameworks_base/commit/f1b8ae1c44e6ba46118c2f66eae1725259acdccc",
    "author": "Roman Birg",
    "time": "8/6/15 3:00 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public of(cells Cell[][], row int, column int, size byte) : Cell extracted from public of(row int, column int, size byte) : Cell in class com.android.internal.widget.LockPatternView.Cell",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method public stringToPattern(string String, size byte) : List<LockPatternView.Cell> extracted from public stringToPattern(string String) : List<LockPatternView.Cell> in class com.android.internal.widget.LockPatternUtils",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 9350
}, {
    "id": 1158974,
    "repository": "https://github.com/VoltDB/voltdb.git",
    "sha1": "cfc54e8afa7ee7d5376525a84559e90b21487ccf",
    "url": "https://github.com/VoltDB/voltdb/commit/cfc54e8afa7ee7d5376525a84559e90b21487ccf",
    "author": "Qingyang",
    "time": "8/6/15 9:21 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private resetLeader() : void extracted from public run() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 0
}, {
    "id": 1159151,
    "repository": "https://github.com/neo4j/neo4j.git",
    "sha1": "e0072aac53b3b88de787e7ca653c7e17f9499018",
    "url": "https://github.com/neo4j/neo4j/commit/e0072aac53b3b88de787e7ca653c7e17f9499018",
    "author": "Nigel Small",
    "time": "8/5/15 12:32 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private unpackRawBytesInto(buffer byte[], offset int, size int) : void extracted from private unpackBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private unpackBytes(size int) : byte[] renamed to private unpackRawBytes(size int) : byte[] in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Class",
        "description": "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method public unpackUtf8() : byte[] renamed to public unpackTextHeader() : int in class org.neo4j.packstream.PackStream.Unpacker",
        "comment": "<p>Matin: the bodies are so similar but there is a method with the same name in the target revision. Also wherever&nbsp;it has been called is calling the method with the same name. FP</p><p>Davood: It seems that unpackTextHeader&nbsp;is extracted from unpackUTF8 rather than being renamed, because&nbsp;unpackUTF8 exists before and after</p>",
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Method",
        "description": "Move Method private packRawMap(map Map) : void from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Writer to public packRawMap(map Map) : void from class org.neo4j.ndp.messaging.v1.Neo4jPack.Packer",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private unpackRawMap() : Map from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackRawMap() : Map from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin"
    }, {
        "type": "Move Method",
        "description": "Move Method private unpackProperties() : Map from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1.Reader to public unpackProperties() : Map from class org.neo4j.ndp.messaging.v1.Neo4jPack.Unpacker",
        "comment": "<p>Move to new class</p>",
        "validation": "CTP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public NODE : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to class org.neo4j.ndp.messaging.v1.Neo4jPack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public RELATIONSHIP : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to class org.neo4j.ndp.messaging.v1.Neo4jPack",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin"
    }, {
        "type": "Move Attribute",
        "description": "Move Attribute public PATH : byte from class org.neo4j.ndp.messaging.v1.PackStreamMessageFormatV1 to class org.neo4j.ndp.messaging.v1.Neo4jPack",
        "comment": "new",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 3709
}, {
    "id": 1159198,
    "repository": "https://github.com/xetorthio/jedis.git",
    "sha1": "6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "url": "https://github.com/xetorthio/jedis/commit/6c3dde45e8cbd0c1fa73072fad7610275afc6240",
    "author": "Marcos Lilljedahl",
    "time": "8/6/15 2:15 PM",
    "refactorings": [{
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.ProtocolCommand moved to redis.clients.jedis.commands.ProtocolCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BinaryJedisCommands moved to redis.clients.jedis.commands.BinaryJedisCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BinaryScriptingCommandsPipeline moved to redis.clients.jedis.commands.BinaryScriptingCommandsPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BasicRedisPipeline moved to redis.clients.jedis.commands.BasicRedisPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.JedisClusterBinaryScriptingCommands moved to redis.clients.jedis.commands.JedisClusterBinaryScriptingCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.MultiKeyBinaryJedisClusterCommands moved to redis.clients.jedis.commands.MultiKeyBinaryJedisClusterCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.ClusterCommands moved to redis.clients.jedis.commands.ClusterCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.JedisCommands moved to redis.clients.jedis.commands.JedisCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.MultiKeyBinaryCommands moved to redis.clients.jedis.commands.MultiKeyBinaryCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.MultiKeyCommands moved to redis.clients.jedis.commands.MultiKeyCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.Commands moved to redis.clients.jedis.commands.Commands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BinaryScriptingCommands moved to redis.clients.jedis.commands.BinaryScriptingCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BinaryRedisPipeline moved to redis.clients.jedis.commands.BinaryRedisPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BasicCommands moved to redis.clients.jedis.commands.BasicCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.JedisClusterCommands moved to redis.clients.jedis.commands.JedisClusterCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.ScriptingCommands moved to redis.clients.jedis.commands.ScriptingCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.AdvancedJedisCommands moved to redis.clients.jedis.commands.AdvancedJedisCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.MultiKeyJedisClusterCommands moved to redis.clients.jedis.commands.MultiKeyJedisClusterCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.ScriptingCommandsPipeline moved to redis.clients.jedis.commands.ScriptingCommandsPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.ClusterPipeline moved to redis.clients.jedis.commands.ClusterPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.JedisClusterScriptingCommands moved to redis.clients.jedis.commands.JedisClusterScriptingCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.BinaryJedisClusterCommands moved to redis.clients.jedis.commands.BinaryJedisClusterCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.MultiKeyCommandsPipeline moved to redis.clients.jedis.commands.MultiKeyCommandsPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.SentinelCommands moved to redis.clients.jedis.commands.SentinelCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.AdvancedBinaryJedisCommands moved to redis.clients.jedis.commands.AdvancedBinaryJedisCommands",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Move Class",
        "description": "Move Class redis.clients.jedis.MultiKeyBinaryRedisPipeline moved to redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1596
}, {
    "id": 1159248,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "url": "https://github.com/facebook/buck/commit/89973a5e4f188040c5fcf87fb5a3e9167329d175",
    "author": "Mark Wang",
    "time": "8/6/15 7:45 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private installAppleBundleForSimulator(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult extracted from private installAppleBundle(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult in class com.facebook.buck.cli.InstallCommand",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 4629
}, {
    "id": 1159266,
    "repository": "https://github.com/facebook/buck.git",
    "sha1": "8d14e557e01cc607dd2db66c29d106ef01aa81f7",
    "url": "https://github.com/facebook/buck/commit/8d14e557e01cc607dd2db66c29d106ef01aa81f7",
    "author": "Ben Hamilton",
    "time": "8/6/15 7:42 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public get(buildTarget BuildTarget, eventBus Optional<BuckEventBus>) : TargetNode<?> extracted from public get(buildTarget BuildTarget) : TargetNode<?> in class com.facebook.buck.parser.Parser.CachedState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 2848
}, {
    "id": 1159300,
    "repository": "https://github.com/spotify/helios.git",
    "sha1": "cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "url": "https://github.com/spotify/helios/commit/cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
    "author": "Tom Geiger",
    "time": "8/6/15 2:22 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected createJobRawOutput(job Job) : String extracted from protected createJob(job Job) : JobId in class com.spotify.helios.system.SystemTestBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 1466
}, {
    "id": 1159409,
    "repository": "https://github.com/ignatov/intellij-erlang.git",
    "sha1": "e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "url": "https://github.com/ignatov/intellij-erlang/commit/e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
    "author": "Alexandra Vesloguzova",
    "time": "8/6/15 12:37 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void extracted from private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile extracted from private addSourceRoot(module Module, sourceRootName String, isTestSourceRoot boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private getErlangModuleDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> renamed to private getErlangFileDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List<ErlangFileDescriptor> in class org.intellij.erlang.jps.builder.ErlangBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private assertSameErlangModules(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String[]) : void renamed to private assertSameErlangFiles(moduleDescriptors List<ErlangFileDescriptor>, expectedModules String[]) : void in class org.intellij.erlang.compilation.ErlangDependenciesResolutionTest",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> renamed to private addErlangFiles(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>, type ErlangFileType) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }, {
        "type": "Rename Method",
        "description": "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection) : Collection renamed to private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor) : void in class org.intellij.erlang.utils.ErlangModulesUtil",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Laleh"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private addFile(sourceDir VirtualFile, relativePath String, content String) : VirtualFile extracted from protected addFile(module Module, relativePath String, content String, toTests boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private getTopologicallySortedErlangFilesPaths(module Module, onlyTestModules boolean) : List extracted from private getModuleBuildOrderInner(module Module) : ErlangModuleBuildOrderDescriptor in class org.intellij.erlang.compilation.ErlangPrepareDependenciesCompileTask",
        "comment": null,
        "validation": "FP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isSourceOrHeader(file File) : boolean extracted from private buildSources(target ErlangTarget, context CompileContext, compilerOptions ErlangCompilerOptions, holder DirtyFilesHolder, outputConsumer BuildOutputConsumer, outputDir File, isTests boolean) : void in class org.intellij.erlang.jps.builder.ErlangBuilder",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }, {
        "type": "Extract Method",
        "description": "Extract Method private isSourceOrHeader(file File) : boolean extracted from protected getDirtyElement(target ErlangTarget, file File, root ErlangSourceRootDescriptor) : String in class org.intellij.erlang.jps.builder.ErlangBuilder$1",
        "comment": "Extract and Move to the inner class",
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Davood"
    }],
    "refDiffExecutionTime": 1833
}, {
    "id": 1159637,
    "repository": "https://github.com/JetBrains/MPS.git",
    "sha1": "61b5decd4a4e5e6bbdea99eb76f136ca10915b73",
    "url": "https://github.com/JetBrains/MPS/commit/61b5decd4a4e5e6bbdea99eb76f136ca10915b73",
    "author": "Alexander Shatalin",
    "time": "8/6/15 5:14 AM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public startInsertMode(editorContext EditorContext, anchorCell EditorCell, insertBefore boolean) : void extracted from public insertNewChild(editorContext EditorContext, anchorCell EditorCell, insertBefore boolean) : void in class jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 60569
}, {
    "id": 1159696,
    "repository": "https://github.com/spring-projects/spring-framework.git",
    "sha1": "fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "url": "https://github.com/spring-projects/spring-framework/commit/fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
    "author": "Craig Andrews",
    "time": "8/6/15 5:08 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public exists(content String) : void in class org.springframework.test.util.JsonPathExpectationsHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }, {
        "type": "Extract Method",
        "description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public assertValueIsArray(responseContent String) : void in class org.springframework.test.util.JsonPathExpectationsHelper",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefDiff",
        "validators": "Matin, Davood"
    }],
    "refDiffExecutionTime": 4367
}, {
    "id": 1159760,
    "repository": "https://github.com/liferay/liferay-plugins.git",
    "sha1": "720b0d2064ecc4403809e794075e9fe8cfa857f1",
    "url": "https://github.com/liferay/liferay-plugins/commit/720b0d2064ecc4403809e794075e9fe8cfa857f1",
    "author": "samanzanedo",
    "time": "8/6/15 6:31 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method protected validate(titleMap Map<Locale,String>, startTimeJCalendar java.util.Calendar, endTimeJCalendar java.util.Calendar, untilJCalendar java.util.Calendar) : void extracted from protected validate(titleMap Map<Locale,String>, startTimeJCalendar java.util.Calendar, endTimeJCalendar java.util.Calendar) : void in class com.liferay.calendar.service.impl.CalendarBookingLocalServiceImpl",
        "comment": "null",
        "validation": "TP",
        "detectionTools": "RefactoringMiner",
        "validators": null
    }],
    "refDiffExecutionTime": 5499
}, {
    "id": 1159836,
    "repository": "https://github.com/apache/hive.git",
    "sha1": "8398fbf3dd0937a0a4a3d540977a95f97425f566",
    "url": "https://github.com/apache/hive/commit/8398fbf3dd0937a0a4a3d540977a95f97425f566",
    "author": "Jimmy Xiang",
    "time": "8/6/15 1:00 PM",
    "refactorings": [{
        "type": "Extract Method",
        "description": "Extract Method public closeSparkSession() : void extracted from public close() : void in class org.apache.hadoop.hive.ql.session.SessionState",
        "comment": null,
        "validation": "TP",
        "detectionTools": "RefactoringMiner, RefDiff",
        "validators": null
    }],
    "refDiffExecutionTime": 5541
}]