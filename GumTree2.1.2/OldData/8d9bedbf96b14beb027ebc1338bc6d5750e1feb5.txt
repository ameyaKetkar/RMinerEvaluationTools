
»Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
ìChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabelAndProperty(labelId int, propertyKey int) : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.api.txstate.ReadableTxState
…Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.OperationsFacade
»Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer
çChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public CreateConstraintFailureException(constraint PropertyConstraint, cause Throwable) in class org.neo4j.kernel.api.exceptions.schema.CreateConstraintFailureException
ΩChange Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private asConstraintDefinitions(readOperations ReadOperations, constraints Iterator<PropertyConstraint>) : Iterable<ConstraintDefinition> in class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl
ÍChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldAcquireSchemaWriteLockBeforeDroppingConstraint() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
•Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public ConstraintVerificationFailedKernelException(constraint PropertyConstraint, failure Throwable) in class org.neo4j.kernel.api.exceptions.schema.ConstraintVerificationFailedKernelException
ˆChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public getConstraints(label Label) : Iterable<ConstraintDefinition> in class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl
ﬂChange Variable Type constraint1 : UniquenessConstraint to constraint1 : PropertyConstraint in method public shouldGetConstraintsByLabel() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
∑Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private assertConstraintExists(constraint PropertyConstraint, constraints Iterator<PropertyConstraint>) : void in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations
‡Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoUnRemove(constraint PropertyConstraint) : boolean in class org.neo4j.kernel.api.txstate.TransactionState
éChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabelAndProperty(labelId int, propertyKey int) : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState
∫Change Attribute Type constraintsChanges : DiffSets<UniquenessConstraint> to constraintsChanges : DiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState.Mutable
€Change Variable Type result : Set<UniquenessConstraint> to result : Set<PropertyConstraint> in method public shouldGetAllConstraints() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
ŸChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoDrop(constraint PropertyConstraint) : void in class org.neo4j.kernel.api.txstate.TransactionState
°Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(state KernelStatement, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
…Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.CacheLayer
°Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private assertConstraintExists(constraint PropertyConstraint, constraints Iterator<PropertyConstraint>) : void in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations
¸Change Variable Type result : Iterator<UniquenessConstraint> to result : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabel() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
ÑChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT
úChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
çChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT
æChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> in class org.neo4j.kernel.api.SchemaRead
ªChange Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
ÓChange Variable Type rule1 : UniquenessConstraintRule to rule1 : UniquePropertyConstraintRule in method public shouldReportTwoUniquenessConstraintsReferencingSameIndex() : void in class org.neo4j.consistency.checking.SchemaRecordCheckTest
ëChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabelAndProperty() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
˙Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.CacheLayer
¯Change Variable Type result : Iterator<UniquenessConstraint> to result : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingAllConstraints() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
‚Change Parameter Type item : UniquenessConstraint to item : PropertyConstraint in method public test(item PropertyConstraint) : boolean in class org.neo4j.kernel.impl.api.store.SchemaCache.constraintsForLabelAndProperty.filter
ÛChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT
§Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.NoSuchConstraintException
€Change Parameter Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
˜Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT
›Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.StoreReadLayer
•Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public createUniquenessConstraintIndex(state KernelStatement, schema SchemaReadOperations, labelId int, propertyKeyId int) : long in class org.neo4j.kernel.impl.api.state.ConstraintIndexCreator
ÏChange Variable Type result : UniquenessConstraint to result : PropertyConstraint in method public shouldAcquireSchemaWriteLockBeforeCreatingUniquenessConstraint() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
„Change Return Type UniquenessConstraintRule to UniquePropertyConstraintRule in method public uniquenessConstraint(labelId int, propertyKeyId int) : UniquePropertyConstraintRule in class org.neo4j.kernel.impl.store.SchemaStorage
‡Change Variable Type descriptor : UniquenessConstraint to descriptor : PropertyConstraint in method public shouldInvalidateSchemaStateOnDropConstraint() : void in class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest
üChange Variable Type it : Iterator<UniquenessConstraint> to it : Iterator<PropertyConstraint> in method public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
ﬂChange Variable Type constraint2 : UniquenessConstraint to constraint2 : PropertyConstraint in method public shouldGetConstraintsByLabel() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
¡Change Return Type UniquenessConstraint to PropertyConstraint in method public constraint() : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.CreateConstraintFailureException
”Change Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method protected transactionData(tx GraphStoreFixture.TransactionDataBuilder, next GraphStoreFixture.IdGenerator) : void in class org.neo4j.consistency.checking.full.FullCheckIntegrationTest.shouldReportInvalidConstraintBackReferences.fixture
˙Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(state KernelStatement, labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.LockingStatementOperations
ÃChange Return Type UniquenessConstraint to PropertyConstraint in method public apply(rule PropertyConstraintRule) : PropertyConstraint in class org.neo4j.kernel.impl.api.store.DiskLayer.RULE_TO_CONSTRAINT
€Change Variable Type constraint1 : UniquenessConstraint to constraint1 : PropertyConstraint in method public shouldGetAllConstraints() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
ÍChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState.Mutable
ÔChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.api.SchemaRead
‘Change Variable Type rule : UniquenessConstraintRule to rule : Rule in method private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule in class org.neo4j.kernel.impl.store.SchemaStorage
úChange Variable Type existing : UniquenessConstraint to existing : PropertyConstraint in method private assertConstraintExists(constraint PropertyConstraint, constraints Iterator<PropertyConstraint>) : void in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations
ËChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldGetConstraintsByLabelAndProperty() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
´Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.CreateConstraintFailureException
ﬁChange Parameter Type element : UniquenessConstraint to element : PropertyConstraint in method public visitAdded(element PropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxState.ConstraintDiffSetsVisitor
áChange Variable Type result : Iterator<UniquenessConstraint> to result : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabelAndProperty() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
ﬁChange Variable Type diff : ReadableDiffSets<UniquenessConstraint> to diff : ReadableDiffSets<PropertyConstraint> in method public shouldAddUniquenessConstraint() : void in class org.neo4j.kernel.impl.api.state.TxStateTest
ÍChange Variable Type constraintRule : UniquenessConstraintRule to constraintRule : UniquePropertyConstraintRule in method public shouldCreateConsistentUniquenessConstraint() : void in class org.neo4j.unsafe.batchinsert.BatchInsertTest
ÔChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldNotAddConstraintAlreadyExistsInTheStore() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
˛Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.StoreReadLayer
ıChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private awaitIndexPopulation(constraint PropertyConstraint, indexId long) : void in class org.neo4j.kernel.impl.api.state.ConstraintIndexCreator
ÕChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll() : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.StoreReadLayer
ﬂChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState
ÛChange Return Type DiffSetsVisitor<UniquenessConstraint> to DiffSetsVisitor<PropertyConstraint> in method private constraintsVisitor(visitor TxStateVisitor) : DiffSetsVisitor<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState
ŒChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.api.SchemaRead
©Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
ËChange Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportUniquenessConstraintNotReferencingBack() : void in class org.neo4j.consistency.checking.SchemaRecordCheckTest
ÍChange Variable Type rules : Iterator<UniquenessConstraintRule> to rules : Iterator<Rule> in method private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule in class org.neo4j.kernel.impl.store.SchemaStorage
ﬂChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public visitsUniqueConstraintsAndIndices() : void in class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuideTest
ÓChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll(state KernelStatement) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
èChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public nodeAddLabel(state KernelStatement, nodeId long, labelId int) : boolean in class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations
åChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyCreateUniquenessConstraintRuleSchemaRuleCommandToTheStore() : void in class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest
àChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public apply(constraint PropertyConstraint) : ConstraintDefinition in class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl.asConstraintDefinitions.definitions.map
ÎChange Parameter Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method private checkUniquenessConstraintRule(rule UniquePropertyConstraintRule, engine CheckerEngine<DynamicRecord,ConsistencyReport.SchemaConsistencyReport>, record DynamicRecord, records RecordAccess) : void in class org.neo4j.consistency.checking.SchemaRecordCheck
ÁRename Attribute UNIQUENESS_CONSTRAINT_TO_RULE : Function<UniquenessConstraintRule,UniquenessConstraint> to RULE_TO_CONSTRAINT : Function<PropertyConstraintRule,PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer
ÍChange Parameter Type item : UniquenessConstraint to item : PropertyConstraint in method public test(item PropertyConstraint) : boolean in class org.neo4j.kernel.impl.api.state.TxState.constraintsChangesForLabelAndProperty.filterAdded
ºChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method private applyConstraintsDiff(state KernelStatement, constraints Iterator<PropertyConstraint>, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
ôChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor
õChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private showUniqueConstraints(visitor DbStructureVisitor, read ReadOperations, nameLookup TokenNameLookup) : void in class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuide
ÍChange Variable Type result : Set<UniquenessConstraint> to result : Set<PropertyConstraint> in method public shouldGetConstraintsByLabelAndProperty() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
ÏChange Attribute Type UNIQUENESS_CONSTRAINT_TO_RULE : Function<UniquenessConstraintRule,UniquenessConstraint> to RULE_TO_CONSTRAINT : Function<PropertyConstraintRule,PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer
„Change Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportConstraintIndexNotReferencingBack() : void in class org.neo4j.consistency.checking.SchemaRecordCheckTest
ﬂChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private createConstraintRule(constraint PropertyConstraint) : void in class org.neo4j.unsafe.batchinsert.BatchInserterImpl
’Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsForLabel(label int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache
©Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.DropConstraintFailureException
ÖChange Variable Type constraint : PropertyUniqueConstraintDefinition to constraint : PropertyConstraintDefinition in method public newSlaveJoiningClusterShouldNotAcceptOperationsUntilConstraintIsOnline() : void in class org.neo4j.kernel.api.UniqueConstraintHaIT
˚Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void in class org.neo4j.kernel.impl.api.operations.SchemaWriteOperations
‡Change Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldReportUnreferencedUniquenessConstraint() : void in class org.neo4j.consistency.checking.SchemaRecordCheckTest
âChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public DropConstraintFailureException(constraint PropertyConstraint, cause Throwable) in class org.neo4j.kernel.api.exceptions.schema.DropConstraintFailureException
ñChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyUpdateUniquenessConstraintRuleSchemaRuleCommandToTheStoreInRecovery() : void in class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest
˘Change Parameter Type rule : UniquenessConstraintRule to rule : PropertyConstraintRule in method public test(rule PropertyConstraintRule) : boolean in class org.neo4j.kernel.impl.api.store.DiskLayer.constraintsGetForLabelAndPropertyKey.schemaStorage
ØChange Attribute Type constraintsChanges : DiffSets<UniquenessConstraint> to constraintsChanges : DiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState
›Change Return Type DiffSets<UniquenessConstraint> to DiffSets<PropertyConstraint> in method public getOrCreateConstraintsChanges() : DiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState.Mutable
˘Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public nodeAddLabel(state KernelStatement, nodeId long, labelId int) : boolean in class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations
ÎChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public abstract constraintsChanges() : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState
ÇChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingAllConstraints() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
‘Change Variable Type descriptor : UniquenessConstraint to descriptor : PropertyConstraint in method private createConstraint() : PropertyConstraint in class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest
›Change Variable Type constraints : Set<UniquenessConstraint> to constraints : Set<PropertyConstraint> in method public shouldLoadConstraintsByLabelFromCache() : void in class org.neo4j.kernel.impl.api.store.CacheLayerTest
ƒChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraints() : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache
åChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyUpdateUniquenessConstraintRuleSchemaRuleCommandToTheStore() : void in class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest
·Change Variable Type record : UniquenessConstraintRule to record : UniquePropertyConstraintRule in method public shouldValidateUniquenessIndexes() : void in class org.neo4j.kernel.impl.transaction.state.IntegrityValidatorTest
ÎChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public getConstraints() : Iterable<ConstraintDefinition> in class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl
©Change Attribute Type constraints : Collection<UniquenessConstraint> to constraints : Collection<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache
πChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations
˘Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer
ÍChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.LabelState.DEFAULT
‘Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(constraint PropertyConstraint) : void in class org.neo4j.kernel.impl.api.OperationsFacade
ŸChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.CacheLayer
ÙChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldReportInvalidPropertyReferenceFromUniquenessConstraintRule() : void in class org.neo4j.consistency.checking.SchemaRecordCheckTest
ÌChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public formatArgument(builder Appendable, arg Object) : void in class org.neo4j.kernel.impl.util.dbstructure.DbStructureArgumentFormatter
ıChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void in class org.neo4j.kernel.impl.api.LockingStatementOperations
∞Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private constructUserMessage(context OperationContext, tokenNameLookup TokenNameLookup, constraint PropertyConstraint) : String in class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException
ÓChange Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportTwoUniquenessConstraintsReferencingSameIndex() : void in class org.neo4j.consistency.checking.SchemaRecordCheckTest
óChange Variable Type constraintRule : UniquenessConstraintRule to constraintRule : UniquePropertyConstraintRule in method public committedConstraintRuleShouldCrossReferenceTheCorrespondingIndexRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT
ñChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyDeleteUniquenessConstraintRuleSchemaRuleCommandToTheStoreInRecovery() : void in class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest
ﬂChange Variable Type result : Set<UniquenessConstraint> to result : Set<PropertyConstraint> in method public shouldGetConstraintsByLabel() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
ŸChange Variable Type constraints : Set<UniquenessConstraint> to constraints : Set<PropertyConstraint> in method public shouldLoadAllConstraintsFromCache() : void in class org.neo4j.kernel.impl.api.store.CacheLayerTest
˝Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public dropPropertyUniquenessConstraint(label Label, propertyKey String) : void in class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl.GDBSchemaActions
ÙChange Variable Type constraintRule : UniquenessConstraintRule to constraintRule : UniquePropertyConstraintRule in method private createConstraintRule(constraint PropertyConstraint) : void in class org.neo4j.unsafe.batchinsert.BatchInserterImpl
ÖChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations
‚Change Parameter Type descriptor : UniquenessConstraint to descriptor : PropertyConstraint in method private dropConstraint(descriptor PropertyConstraint) : void in class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest
ÌChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll(state KernelStatement) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.operations.SchemaReadOperations
∂Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.ConstraintVerificationFailedKernelException
ÂChange Parameter Type rule : UniquenessConstraintRule to rule : PropertyConstraintRule in method public apply(rule PropertyConstraintRule) : PropertyConstraint in class org.neo4j.kernel.impl.api.store.DiskLayer.RULE_TO_CONSTRAINT
™Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public ConstraintVerificationFailedKernelException(constraint PropertyConstraint, evidence Set<Evidence>) in class org.neo4j.kernel.api.exceptions.schema.ConstraintVerificationFailedKernelException
ÇChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public visitUniqueConstraint(constraint PropertyConstraint, userDescription String) : void in class org.neo4j.kernel.impl.util.dbstructure.DbStructureVisitor
ÄChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(state KernelStatement, labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
†Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(state KernelStatement, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.operations.SchemaReadOperations
ÿChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer
¶Change Attribute Type constraint : UniquenessConstraint to constraint : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException
ËChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetAll(state KernelStatement) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.LockingStatementOperations
∏Change Return Type UniquenessConstraint to PropertyConstraint in method private createConstraint() : PropertyConstraint in class org.neo4j.kernel.impl.api.KernelSchemaStateFlushingTest
 Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(constraint PropertyConstraint) : void in class org.neo4j.kernel.api.SchemaWrite
˚Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDrop(state KernelStatement, constraint PropertyConstraint) : void in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations
ÜChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldAcquireSchemaReadLockBeforeGettingConstraintsByLabel() : void in class org.neo4j.kernel.impl.api.LockingStatementOperationsTest
ÓChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public NoSuchConstraintException(constraint PropertyConstraint) in class org.neo4j.kernel.api.exceptions.schema.NoSuchConstraintException
ˇChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(state KernelStatement, labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.operations.SchemaReadOperations
–Change Return Type DiffSets<UniquenessConstraint> to DiffSets<PropertyConstraint> in method private constraintsChangesDiffSets() : DiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState
ΩChange Attribute Type uniquenessConstraint : Set<UniquenessConstraint> to uniquenessConstraint : Set<PropertyConstraint> in class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollector
◊Change Parameter Type item : UniquenessConstraint to item : PropertyConstraint in method public test(item PropertyConstraint) : boolean in class org.neo4j.kernel.impl.api.store.SchemaCache.constraintsForLabel.filter
‰Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChanges() : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.api.txstate.ReadableTxState
ñChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyCreateUniquenessConstraintRuleSchemaRuleCommandToTheStoreInRecovery() : void in class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest
«Change Parameter Type item : UniquenessConstraintRule to item : Rule in method public test(item Rule) : boolean in class org.neo4j.kernel.impl.store.SchemaStorage.propertyConstraint.rules.schemaRules
ÆChange Variable Type constraintIterator : Iterator<UniquenessConstraint> to constraintIterator : Iterator<PropertyConstraint> in method public nodeSetProperty(state KernelStatement, nodeId long, property DefinedProperty) : Property in class org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations
±Change Parameter Type uniquenessConstraint : UniquenessConstraint to uniquenessConstraint : PropertyConstraint in method public apply(uniquenessConstraint PropertyConstraint) : Pair<String,String> in class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollector.lookup.knownUniqueConstraints.Iterables
˙Change Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.OperationsFacade
ÙChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public apply(constraint PropertyConstraint) : IndexDescriptor in class org.neo4j.kernel.impl.api.state.TxState.constraintIndexesCreatedInTx.map
åChange Variable Type rule : UniquenessConstraintRule to rule : UniquePropertyConstraintRule in method public shouldApplyDeleteUniquenessConstraintRuleSchemaRuleCommandToTheStore() : void in class org.neo4j.kernel.impl.transaction.command.NeoTransactionStoreApplierTest
ÓChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsForLabelAndProperty(label int, property int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache
±Change Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method private showUniqueConstraints(visitor DbStructureVisitor, read ReadOperations, nameLookup TokenNameLookup) : void in class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuide
˜Change Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabel(labelId int) : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.api.txstate.ReadableTxState
ŸChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabel(labelId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.OperationsFacade
ÑChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public visitUniqueConstraint(constraint PropertyConstraint, userDescription String) : void in class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollector
åChange Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public AlreadyConstrainedException(constraint PropertyConstraint, context OperationContext) in class org.neo4j.kernel.api.exceptions.schema.AlreadyConstrainedException
øChange Return Type UniquenessConstraint to PropertyConstraint in method public constraint() : PropertyConstraint in class org.neo4j.kernel.api.exceptions.schema.DropConstraintFailureException
ÚChange Return Type ReadableDiffSets<UniquenessConstraint> to ReadableDiffSets<PropertyConstraint> in method public constraintsChangesForLabel(labelId int) : ReadableDiffSets<PropertyConstraint> in class org.neo4j.kernel.impl.api.state.TxState
‹Change Return Type UniquenessConstraint to PropertyConstraint in method private createUniqueConstraint(labelId int, pkId int) : PropertyConstraint in class org.neo4j.kernel.impl.util.dbstructure.GraphDbStructureGuideTest
€Change Variable Type constraint2 : UniquenessConstraint to constraint2 : PropertyConstraint in method public shouldGetAllConstraints() : void in class org.neo4j.kernel.impl.api.state.StateHandlingStatementOperationsTest
õChange Return Type Iterator<UniquenessConstraint> to Iterator<PropertyConstraint> in method public constraintsGetForLabelAndPropertyKey(state KernelStatement, labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.LockingStatementOperations
ËChange Variable Type constraints : Set<UniquenessConstraint> to constraints : Set<PropertyConstraint> in method public shouldLoadConstraintsByLabelAndPropertyFromCache() : void in class org.neo4j.kernel.impl.api.store.CacheLayerTest
ÍChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldClearSchemaStateWhenConstraintIsDropped() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT±Change Parameter Type obj : Object to visitor : ChangeVisitor in method public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraintìChange Parameter Type element : UniquenessConstraint to constraint : MandatoryPropertyConstraint in method public visitRemovedMandatoryPropertyConstraint(constraint MandatoryPropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxState.ConstraintDiffSetsVisitorñChange Return Type boolean to void in method public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraintíChange Parameter Type lhs : UniquenessConstraintRule to lhs : UniquePropertyConstraintRule in method private uniquenessConstraintEquals(lhs UniquePropertyConstraintRule, rhs UniquePropertyConstraintRule...) : boolean in class org.neo4j.consistency.checking.SchemaRuleContentíChange Parameter Type rhs : UniquenessConstraintRule to rhs : UniquePropertyConstraintRule in method private uniquenessConstraintEquals(lhs UniquePropertyConstraintRule, rhs UniquePropertyConstraintRule...) : boolean in class org.neo4j.consistency.checking.SchemaRuleContentéRename Parameter element : UniquenessConstraint to constraint : MandatoryPropertyConstraint in method public visitRemovedMandatoryPropertyConstraint(constraint MandatoryPropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxState.ConstraintDiffSetsVisitoròChange Return Type boolean to void in method public removed(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraintÖChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldCreateAndRetrieveMandatoryPropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT¨Rename Parameter obj : Object to visitor : ChangeVisitor in method public added(visitor ChangeVisitor) : void in class org.neo4j.kernel.api.constraints.UniquenessConstraint÷Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintIndexesCreatedInTx() : Iterable<IndexDescriptor> in class org.neo4j.kernel.impl.api.state.TxState¸Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT˝Change Variable Type rule : UniquenessConstraintRule to rule : PropertyConstraintRule in method public constraintsGetForLabelAndPropertyKey(labelId int, propertyKeyId int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.DiskLayer‘Change Variable Type item : UniquenessConstraintRule to item : Rule in method private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule in class org.neo4j.kernel.impl.store.SchemaStorageîChange Return Type UniquenessConstraintRule to UniquePropertyConstraintRule in method public uniquenessConstraintRule(id long, labelId int, propertyKeyId int, ownedIndexRule long) : UniquePropertyConstraintRule in class org.neo4j.kernel.impl.store.UniquePropertyConstraintRuleÒChange Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldCreateAnIndexToGoAlongWithAUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationITóChange Variable Type constraints : Iterator<UniquenessConstraint> to constraints : Iterator<PropertyConstraint> in method public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationITÈChange Variable Type rule2 : UniquenessConstraintRule to rule2 : UniquePropertyConstraintRule in method public shouldReportInvalidConstraintBackReferences() : void in class org.neo4j.consistency.checking.full.FullCheckIntegrationTestÁChange Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldDropConstraintIndexWhenDroppingConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT⁄Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoUnRemove(constraint PropertyConstraint) : boolean in class org.neo4j.kernel.impl.api.state.TxState—Change Variable Type item : UniquenessConstraint to item : PropertyConstraint in method public constraintsForLabel(label int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache”Change Parameter Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public constraintDoDrop(constraint PropertyConstraint) : void in class org.neo4j.kernel.impl.api.state.TxStateèChange Parameter Type rhs : UniquenessConstraintRule to rhs : UniquePropertyConstraintRule in method private uniquenessConstraintEquals(lhs UniquePropertyConstraintRule, rhs UniquePropertyConstraintRule) : boolean in class org.neo4j.consistency.checking.SchemaRuleContent¶Change Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method private asConstraintDefinitions(readOperations ReadOperations, constraints Iterator<PropertyConstraint>) : Iterable<ConstraintDefinition> in class org.neo4j.kernel.impl.coreapi.schema.SchemaImpl‹Change Variable Type that : PropertyUniqueConstraintDefinition to that : PropertyConstraintDefinition in method public equals(o Object) : boolean in class org.neo4j.kernel.impl.coreapi.schema.PropertyConstraintDefinitionÏChange Variable Type constraint : UniquenessConstraint to constraint : PropertyConstraint in method public shouldDropConstraintIndexWhenDroppingConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationITÍChange Variable Type item : UniquenessConstraint to item : PropertyConstraint in method public constraintsForLabelAndProperty(label int, property int) : Iterator<PropertyConstraint> in class org.neo4j.kernel.impl.api.store.SchemaCache‡Change Variable Type uniquenessConstraint : UniquenessConstraint to uniquenessConstraint : PropertyConstraint in method public lookup() : DbStructureLookup in class org.neo4j.kernel.impl.util.dbstructure.DbStructureCollectorÚChange Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationITÓChange Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationITÉChange Return Type UniquenessConstraintRule to UniquePropertyConstraintRule in method public readUniquenessConstraintRule(id long, labelId int, buffer ByteBuffer) : UniquePropertyConstraintRule in class org.neo4j.kernel.impl.store.UniquePropertyConstraintRuleﬂChange Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotDropConstraintThatDoesNotExist() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT˘Change Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldDropCreatedConstraintIndexWhenRollingBackConstraintCreation() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationITèChange Parameter Type lhs : UniquenessConstraintRule to lhs : UniquePropertyConstraintRule in method private uniquenessConstraintEquals(lhs UniquePropertyConstraintRule, rhs UniquePropertyConstraintRule) : boolean in class org.neo4j.consistency.checking.SchemaRuleContentˇChange Variable Type statement : SchemaWriteOperations to statement : ReadOperations in method public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT2(8d9bedbf96b14beb027ebc1338bc6d5750e1feb5