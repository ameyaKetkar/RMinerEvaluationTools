
áChange Variable Type channel : StoreChannel to versionedStoreChannel : LogVersionedStoreChannel in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void in class org.neo4j.kernel.RecoveryTest
∂Rename Parameter logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in method public DefaultMasterImplSPI(graphDb GraphDatabaseAPI, fileSystemAbstraction FileSystemAbstraction, monitors Monitors, labels LabelTokenHolder, propertyKeyTokenHolder PropertyKeyTokenHolder, relationshipTypeTokenHolder RelationshipTypeTokenHolder, idGeneratorFactory IdGeneratorFactory, locks Locks, transactionCommitProcess TransactionCommitProcess, storeFlusher StoreFlusher, transactionIdStore TransactionIdStore, logicalTransactionStore LogicalTransactionStore, neoStoreDataSource NeoStoreDataSource, jobScheduler JobScheduler) in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI
“Change Variable Type logRotationControl : LogRotationControl to logRotationControl : StoreFlusher in method public shouldReadOlderLogs() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest
ªChange Parameter Type logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in method public DefaultMasterImplSPI(graphDb GraphDatabaseAPI, fileSystemAbstraction FileSystemAbstraction, monitors Monitors, labels LabelTokenHolder, propertyKeyTokenHolder PropertyKeyTokenHolder, relationshipTypeTokenHolder RelationshipTypeTokenHolder, idGeneratorFactory IdGeneratorFactory, locks Locks, transactionCommitProcess TransactionCommitProcess, storeFlusher StoreFlusher, transactionIdStore TransactionIdStore, logicalTransactionStore LogicalTransactionStore, neoStoreDataSource NeoStoreDataSource, jobScheduler JobScheduler) in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI
¢Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public stop() : void in class org.neo4j.kernel.NeoStoreDataSource
ôRename Attribute logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI
çChange Attribute Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.com.storecopy.StoreCopyServer
·Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldOpenInFreshDirectoryAndFinallyAddHeader() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest
◊Change Parameter Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public StoreCopyServer(transactionIdStore TransactionIdStore, dataSource NeoStoreDataSource, storeFlusher StoreFlusher, fileSystem FileSystemAbstraction, storeDirectory File, monitor Monitor) in class org.neo4j.com.storecopy.StoreCopyServer
∫Change Parameter Type visitor : Visitor<ByteBuffer,IOException> to visitor : Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException> in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void in class org.neo4j.kernel.RecoveryTest
∆Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldVisitLogFile() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest
ÚRename Parameter logRotationControlSupplier : Supplier<LogRotationControl> to storeFlusherSupplier : Supplier<StoreFlusher> in method public OnlineBackupKernelExtension(config Config, graphDatabaseAPI GraphDatabaseAPI, logProvider LogProvider, monitors Monitors, neoStoreDataSource NeoStoreDataSource, storeFlusherSupplier Supplier<StoreFlusher>, transactionIdStoreSupplier Supplier<TransactionIdStore>, logicalTransactionStoreSupplier Supplier<LogicalTransactionStore>, logFileInformationSupplier Supplier<LogFileInformation>, fileSystemAbstraction FileSystemAbstraction) in class org.neo4j.backup.OnlineBackupKernelExtension
ÊChange Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldOpenInFreshDirectoryAndFinallyAddHeader() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest
ÃChange Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule in class org.neo4j.kernel.NeoStoreDataSource
¶Change Return Type LogRotationControl to StoreFlusher in method public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.TransactionLogModule
ÀChange Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public shouldVisitLogFile() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest
ÆRename Parameter logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, storeFlusher StoreFlusher, startupStatistics StartupStatisticsProvider) : void in class org.neo4j.kernel.NeoStoreDataSource
˜Change Parameter Type logRotationControlSupplier : Supplier<LogRotationControl> to storeFlusherSupplier : Supplier<StoreFlusher> in method public OnlineBackupKernelExtension(config Config, graphDatabaseAPI GraphDatabaseAPI, logProvider LogProvider, monitors Monitors, neoStoreDataSource NeoStoreDataSource, storeFlusherSupplier Supplier<StoreFlusher>, transactionIdStoreSupplier Supplier<TransactionIdStore>, logicalTransactionStoreSupplier Supplier<LogicalTransactionStore>, logFileInformationSupplier Supplier<LogFileInformation>, fileSystemAbstraction FileSystemAbstraction) in class org.neo4j.backup.OnlineBackupKernelExtension
ûChange Attribute Type logRotationControlSupplier : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.kernel.ha.cluster.DefaultMasterImplSPI
≥Change Parameter Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildRecovery(fileSystemAbstraction FileSystemAbstraction, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexUpdatesValidator IndexUpdatesValidator, labelScanStore LabelScanStore, neoStore NeoStore, recoveryVisitorMonitor RecoveryVisitor.Monitor, recoveryMonitor Recovery.Monitor, logFiles PhysicalLogFiles, storeFlusher StoreFlusher, startupStatistics StartupStatisticsProvider) : void in class org.neo4j.kernel.NeoStoreDataSource
ßChange Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public stop() : void in class org.neo4j.kernel.NeoStoreDataSource
“Rename Parameter logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public StoreCopyServer(transactionIdStore TransactionIdStore, dataSource NeoStoreDataSource, storeFlusher StoreFlusher, fileSystem FileSystemAbstraction, storeDirectory File, monitor Monitor) in class org.neo4j.com.storecopy.StoreCopyServer
àRename Attribute logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in class org.neo4j.com.storecopy.StoreCopyServer
ŒChange Return Type Supplier<LogRotationControl> to Supplier<StoreFlusher> in method public storeFlusherSupplier() : Supplier<StoreFlusher> in class org.neo4j.backup.OnlineBackupExtensionFactory.Dependencies
‹Change Variable Type logRotationControl : LogRotationControl to logRotationControl : StoreFlusher in method public shouldWriteSomeDataIntoTheLog() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogFileTest
‚Change Variable Type logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public copyStore(writer StoreWriter) : Response<?> in class org.neo4j.com.storecopy.StoreCopyClientTest.storeCopyRequest.spy
¶Change Return Type LogRotationControl to StoreFlusher in method public storeFlusher() : StoreFlusher in class org.neo4j.kernel.NeoStoreDataSource.buildTransactionLogs
«Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method private buildTransactionLogs(storeDir File, config Config, logProvider LogProvider, labelScanStore LabelScanStore, fileSystemAbstraction FileSystemAbstraction, neoStore NeoStore, cacheAccess CacheAccessBackDoor, indexingService IndexingService, indexProviders Iterable<IndexImplementation>) : TransactionLogModule in class org.neo4j.kernel.NeoStoreDataSource
›Rename Variable logRotationControl : LogRotationControl to storeFlusher : StoreFlusher in method public copyStore(writer StoreWriter) : Response<?> in class org.neo4j.com.storecopy.StoreCopyClientTest.storeCopyRequest.spyµChange Return Type long to int in method public getVisitedTransactions() : int in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.FakeRecoveryVisitorıChange Variable Type recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldExtractMetadataFromExistingTransaction() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest∆Rename Parameter database : HighlyAvailableGraphDatabase to db : HighlyAvailableGraphDatabase in method private checkPoint(db HighlyAvailableGraphDatabase) : void in class slavetest.TestInstanceJoinªChange Variable Type transaction : TransactionRepresentation to physicalLogVersionedStoreChannel : PhysicalLogVersionedStoreChannel in method public next() : LogVersionedStoreChannel in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest.shouldOpenAndRecoverExistingData.life.getLogFilesRename Variable recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldExtractMetadataFromExistingTransaction() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTest§Change Variable Type transaction : PhysicalTransactionRepresentation to snapshot : EphemeralFileSystemAbstraction in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction in class org.neo4j.kernel.impl.recovery.TestStoreRecoverer˛Rename Variable buffer : ByteBuffer to writableLogChannel : PhysicalWritableLogChannel in method private writeSomeData(file File, visitor Visitor<Pair<LogEntryWriter,Consumer<LogPositionMarker>>,IOException>) : void in class org.neo4j.kernel.RecoveryTest§Change Attribute Type entryReader : LogEntryReader<T> to logEntryCursor : LogEntryCursor<T> in class org.neo4j.kernel.impl.transaction.log.PhysicalTransactionCursor‰Rename Variable recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldOpenAndRecoverExistingData() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTestˆChange Variable Type logFile : LogFile to db : GraphDatabaseService in method private createSomeDataAndCrash(store File, fileSystem EphemeralFileSystemAbstraction) : FileSystemAbstraction in class org.neo4j.kernel.impl.recovery.TestStoreRecovererÈChange Variable Type recoveredTransactions : AtomicInteger to visitor : FakeRecoveryVisitor in method public shouldOpenAndRecoverExistingData() : void in class org.neo4j.kernel.impl.transaction.log.PhysicalLogicalTransactionStoreTestÀChange Variable Type log : File to finder : LatestCheckPointFinder in method public recoveryNeededAt(dataDir File, currentLogVersion long) : boolean in class org.neo4j.kernel.impl.recovery.StoreRecoverer—Change Parameter Type meta : long to meta : long[] in method private offer(sequence OutOfOrderSequence, number long, meta long[]) : boolean in class org.neo4j.kernel.impl.store.ArrayQueueOutOfOrderSequenceTestòChange Variable Type recoveryVersion : long to recoveryPosition : LogPosition in method public init() : void in class org.neo4j.kernel.recovery.Recovery¡Rename Parameter recoveryVersion : long to fromVersion : long in method public getLogFiles(fromVersion long) : Iterator<LogVersionedStoreChannel> in class org.neo4j.kernel.recovery.Recovery.SPI©Change Parameter Type meta : long to meta : long[] in method public set(number long, meta long[]) : void in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence§Change Parameter Type meta : long to meta : long[] in method public offer(number long, meta long[]) : boolean in class org.neo4j.kernel.impl.util.OutOfOrderSequenceÆChange Parameter Type meta : long to meta : long[] in method public offer(number long, meta long[]) : boolean in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence≠Change Parameter Type meta : long to meta : long[] in method public seen(number long, meta long[]) : boolean in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequence∂Rename Parameter currentVersion : long to upToVersion : long in method public pruneLogs(upToVersion long) : void in class org.neo4j.kernel.impl.transaction.log.pruning.LogPruningImplüChange Parameter Type meta : long to meta : long[] in method public set(number long, meta long[]) : void in class org.neo4j.kernel.impl.util.OutOfOrderSequenceìRename Variable recoveryVersion : long to recoveryPosition : LogPosition in method public init() : void in class org.neo4j.kernel.recovery.Recovery£Change Parameter Type meta : long to meta : long[] in method public seen(number long, meta long[]) : boolean in class org.neo4j.kernel.impl.util.OutOfOrderSequenceµChange Parameter Type meta : long to meta : long[] in method private createResult(number long, meta long[]) : long[] in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequenceèChange Attribute Type highestGapFreeMeta : long to highestGapFreeMeta : long[] in class org.neo4j.kernel.impl.util.ArrayQueueOutOfOrderSequenceÿChange Parameter Type recoveredLogVersion : long to startPosition : LogPosition in method public recoveryRequired(startPosition LogPosition) : void in class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor”Rename Parameter recoveredLogVersion : long to startPosition : LogPosition in method public recoveryRequired(startPosition LogPosition) : void in class org.neo4j.kernel.impl.transaction.log.LoggingLogFileMonitor’Change Return Type LogVersionedStoreChannel to Iterator<LogVersionedStoreChannel> in method public getLogFiles(fromVersion long) : Iterator<LogVersionedStoreChannel> in class org.neo4j.kernel.recovery.Recovery.SPI2(001de307492df8f84ad15f6aaa0bd1e748d4ce27