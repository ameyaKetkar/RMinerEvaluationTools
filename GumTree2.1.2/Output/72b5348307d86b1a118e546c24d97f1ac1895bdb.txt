
§Change Variable Type tasks : List<Task> to tasks : List<? extends Task> in method public newJob(plan Plan) : Job in class io.crate.executor.transport.TransportExecutor
ÌChange Return Type List<Task> to List<? extends Task> in method public visitUpsert(plan Upsert, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor
¶Change Parameter Type tasks : Collection<Task> to tasks : Collection<? extends Task> in method public addTasks(tasks Collection<? extends Task>) : void in class io.crate.executor.Job
ßChange Return Type List<Task> to List<? extends Task> in method public visitInsertByQuery(node InsertFromSubQuery, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor
ñChange Variable Type tasks : List<Task> to tasks : List<? extends Task> in method public visitInsertByQuery(node InsertFromSubQuery, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitorËChange Return Type List<Task> to List<? extends Task> in method protected visitPlan(plan Plan, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitorÁChange Parameter Type job : Job to plan : Plan in method public process(plan Plan, job Job) : ExecutionNodesTask in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitorÆChange Parameter Type job : Job to context : Context in method protected visitPlan(plan Plan, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitorÏChange Parameter Type job : Job to context : Context in method public visitNestedLoop(plan NestedLoop, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitorãChange Parameter Type job : Job to executionNodesTask : ExecutionNodesTask in method public Context(executionNodesTask ExecutionNodesTask) in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitor.ContextÙChange Parameter Type job : Job to context : Context in method public visitCollectAndMerge(plan CollectAndMerge, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitoròChange Variable Type executionNode : ExecutionNode to context : Context in method public visitDistributedGroupBy(plan DistributedGroupBy, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitorõChange Variable Type localMergeNode : MergeNode to context : Context in method public visitNonDistributedGroupBy(plan NonDistributedGroupBy, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitoršRename Parameter killPlan : KillPlan to plan : KillPlan in method public visitKillPlan(plan KillPlan, context C) : R in class io.crate.planner.PlanVisitorÆRename Parameter nestedLoopNode : NestedLoopNode to node : NestedLoopNode in method public visitNestedLoopNode(node NestedLoopNode, context C) : R in class io.crate.planner.node.ExecutionNodeVisitor®Rename Parameter node : QueryThenFetch to plan : QueryThenFetch in method public visitQueryThenFetch(plan QueryThenFetch, context C) : R in class io.crate.planner.PlanVisitorŠRename Attribute mergeNodes : List<MergeNode> to finalMergeNodes : List<MergeNode> in class io.crate.executor.transport.ExecutionNodesTaskŸRename Parameter countPlan : CountPlan to plan : CountPlan in method public visitCountPlan(plan CountPlan, context C) : R in class io.crate.planner.PlanVisitorÅRename Parameter countNode : CountNode to node : CountNode in method public visitCountNode(node CountNode, context PreparerContext) : Void in class io.crate.action.job.ContextPreparer.InnerPreparerªRename Parameter node : QueryAndFetch to plan : QueryAndFetch in method public visitQueryAndFetch(plan QueryAndFetch, context C) : R in class io.crate.planner.PlanVisitor¹Rename Parameter node : InsertFromSubQuery to plan : InsertFromSubQuery in method public visitInsertByQuery(plan InsertFromSubQuery, context C) : R in class io.crate.planner.PlanVisitorÁRename Parameter nodes : Set<String> to downStreamNodes : Set<String> in method public downstreamNodes(downStreamNodes Set<String>) : void in class io.crate.planner.node.dql.AbstractDQLPlanNodeŽRename Parameter node : Upsert to plan : Upsert in method public visitUpsert(plan Upsert, context C) : R in class io.crate.planner.PlanVisitor¾Rename Parameter node : DistributedGroupBy to plan : DistributedGroupBy in method public visitDistributedGroupBy(plan DistributedGroupBy, context C) : R in class io.crate.planner.PlanVisitor­Rename Parameter countNode : CountNode to node : CountNode in method public visitCountNode(node CountNode, context C) : R in class io.crate.planner.node.ExecutionNodeVisitorÓRename Parameter countPlan : CountPlan to plan : CountPlan in method public visitCountPlan(plan CountPlan, context Context) : Void in class io.crate.executor.transport.TransportExecutor.ExecutionNodesPlanVisitorÊRename Parameter node : NonDistributedGroupBy to plan : NonDistributedGroupBy in method public visitNonDistributedGroupBy(plan NonDistributedGroupBy, context C) : R in class io.crate.planner.PlanVisitorÑChange Parameter Type plan : GlobalAggregate to plan : Plan in method protected visitPlan(plan Plan, job Job) : List<? extends Task> in class io.crate.executor.transport.TransportExecutor.TaskCollectingVisitor¤Rename Parameter nestedLoop : NestedLoop to plan : NestedLoop in method public visitNestedLoop(plan NestedLoop, context C) : R in class io.crate.planner.PlanVisitorÑRename Parameter executionNodeId : int to downstreamExecutionNodeId : int in method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void in class io.crate.planner.node.dql.AbstractDQLPlanNode2(72b5348307d86b1a118e546c24d97f1ac1895bdb