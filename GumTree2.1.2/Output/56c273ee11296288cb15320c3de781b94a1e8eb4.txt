
›Change Parameter Type result : List<Query> to result : Set<Query> in method public onDone(result Set<Query>) : void in class org.tomahawk.tomahawk_android.fragments.ContextMenuFragment.setupContextMenuItems.v.onClick.done
äChange Return Type Promise<List<Query>,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection
çChange Return Type Promise<List<Album>,Throwable,Void> to Promise<Set<Album>,Throwable,Void> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection
∑Change Variable Type queries : List<Query> to queries : Set<Query> in method public call() : Set<Query> in class org.tomahawk.libtomahawk.collection.NativeCollection.getAlbumTracks.dm
∆Change Parameter Type result : List<Album> to result : Set<Album> in method public onDone(result Set<Album>) : void in class org.tomahawk.tomahawk_android.fragments.AlbumsFragment.updateAdapter.done
∂Change Variable Type albums : List<Album> to albums : Set<Album> in method public call() : Set<Album> in class org.tomahawk.libtomahawk.collection.NativeCollection.getArtistAlbums.dm
ÖChange Return Type Promise<List<Query>,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public abstract getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.Collection
ºChange Parameter Type result : List<Query> to result : Set<Query> in method public onDone(result Set<Query>) : void in class org.tomahawk.tomahawk_android.adapters.ViewHolder.fillView.doneËChange Variable Type queries : List<Query> to queries : Set<Query> in method public onReportResults(results JsonArray) : void in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getAlbumTracks.done.onDone.ScriptJobÓChange Parameter Type addedTimeStamp : long to onlyIfCached : boolean in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection˛Change Return Type Promise<Boolean,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollectionÁChange Variable Type albums : List<Album> to albums : Set<Album> in method public onReportResults(results JsonArray) : void in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getArtistAlbums.done.onDone.ScriptJobÈRename Parameter addedTimeStamp : long to onlyIfCached : boolean in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection‰Change Variable Type queries : List<Query> to queries : Set<Query> in method public onDone(result ScriptResolverCollectionMetaData) : void in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getAlbumTracks.done„Change Variable Type albums : List<Album> to albums : Set<Album> in method public onDone(result ScriptResolverCollectionMetaData) : void in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getArtistAlbums.doneøChange Variable Type result : List<Query> to result : Set<Query> in method private setupContextMenuItems(view View) : void in class org.tomahawk.tomahawk_android.fragments.ContextMenuFragmentÖChange Return Type Promise<List<Album>,Throwable,Void> to Promise<Set<Album>,Throwable,Void> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection‰Change Variable Type queries : List<Query> to queries : Set<Query> in method public onReportResults(results JsonArray) : void in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getAlbumTracks.done.onDone.startÈChange Variable Type albums : List<Album> to albums : Set<Album> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollectionÇChange Return Type Promise<List<Query>,Throwable,Void> to Promise<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollectionËChange Variable Type queries : List<Query> to queries : Set<Query> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.NativeCollection§Change Variable Type deferred : Deferred<List<Query>,Throwable,Void> to deferred : Deferred<Set<Query>,Throwable,Void> in method public getAlbumTracks(album Album, onlyIfCached boolean) : Promise<Set<Query>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.ScriptResolverCollectionßChange Variable Type deferred : Deferred<List<Album>,Throwable,Void> to deferred : Deferred<Set<Album>,Throwable,Void> in method public getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.ScriptResolverCollectionàChange Return Type Promise<List<Album>,Throwable,Void> to Promise<Set<Album>,Throwable,Void> in method public abstract getArtistAlbums(artist Artist, onlyIfCached boolean) : Promise<Set<Album>,Throwable,Void> in class org.tomahawk.libtomahawk.collection.Collection„Change Variable Type albums : List<Album> to albums : Set<Album> in method public onReportResults(results JsonArray) : void in class org.tomahawk.libtomahawk.collection.ScriptResolverCollection.getArtistAlbums.done.onDone.start2(56c273ee11296288cb15320c3de781b94a1e8eb4