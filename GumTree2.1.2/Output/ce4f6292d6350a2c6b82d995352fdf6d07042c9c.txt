
≈Rename Method protected assertNotLocked(cache Cache, key Object) : void renamed to protected assertEventuallyNotLocked(cache Cache, key Object) : void in class org.infinispan.test.AbstractCacheTest
⁄Rename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManager
¶Change Attribute Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor
ÚRename Method public removeRecoveryInformationFromCluster(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate
—Change Variable Type caches : List<Cache> to caches : List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> in class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition
îRename Parameter recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor
ËRename Method public removeRecoveryInformationFromCluster(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(lockOwners Collection<Address>, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl
‚Rename Variable k : Object to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.NonTxDistributionInterceptor
ΩChange Return Type List<Cache> to List<Cache<K,V>> in method private cachesInThisPartition() : List<Cache<K,V>> in class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition
ãChange Variable Type it : Iterator<Address> to it : Iterator<Map.Entry<Address,List<InboundTransferTask>>> in method private restartBrokenTransfers(cacheTopology CacheTopology, addedSegments Set<Integer>) : void in class org.infinispan.statetransfer.StateConsumerImpl
ôChange Parameter Type recipientGenerator : RecipientGenerator to key : Object in method private handleTxWriteCommand(ctx InvocationContext, command WriteCommand, key Object, skipRemoteGet boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor
°Rename Attribute txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in class org.infinispan.interceptors.TxInterceptor‚Rename Method private channel(cache Cache<Object,Object>) : Channel renamed to private package extractJGroupsTransport(transport Transport) : JGroupsTransport in class org.infinispan.partitionhandling.BasePartitionHandlingTestΩRename Method private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object renamed to private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void in class org.infinispan.interceptors.TxInterceptor›Change Parameter Type ctx : TxInvocationContext to context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptorÿRename Parameter ctx : TxInvocationContext to context : LocalTxInvocationContext in method protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptoréRename Parameter txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void in class org.infinispan.interceptors.TxInterceptorìChange Parameter Type txCoordinator : TransactionCoordinator to partitionHandlingManager : PartitionHandlingManager in method public init(txTable TransactionTable, configuration Configuration, rpcManager RpcManager, recoveryManager RecoveryManager, commandsFactory CommandsFactory, cache Cache, partitionHandlingManager PartitionHandlingManager) : void in class org.infinispan.interceptors.TxInterceptorëRename Method public visitEntryRetrievalCommand(ctx InvocationContext, command EntryRetrievalCommand) : EntryIterable renamed to private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void in class org.infinispan.interceptors.TxInterceptorÁRename Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void renamed to protected checkTxCommandResponses(responseMap Map<Address,Response>, command TransactionBoundaryCommand, context LocalTxInvocationContext, recipients Collection<Address>) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor¿Change Variable Type cache : Cache<?,?> to cache : Cache<K,V> in method protected getLockOwner(key Object, cacheName String) : Cache<K,V> in class org.infinispan.test.MultipleCacheManagersTestÙRename Parameter keygen : RecipientGenerator to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.NonTxDistributionInterceptorªChange Variable Type c : Cache to c : Cache<K,V> in method private cachesInThisPartition() : List<Cache<K,V>> in class org.infinispan.partitionhandling.BasePartitionHandlingTest.PartitionõChange Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public simpleTest() : void in class org.infinispan.replication.AsyncReplTestÒRename Parameter keygen : RecipientGenerator to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor¸Rename Parameter keygen : RecipientGenerator to key : Object in method protected abstract remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.BaseDistributionInterceptorõChange Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithTx() : void in class org.infinispan.replication.AsyncReplTest˘Change Parameter Type keygen : RecipientGenerator to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.NonTxDistributionInterceptoríChange Attribute Type advancedCache : AdvancedCache to advancedCache : AdvancedCache<String,String> in class org.infinispan.api.ForceWriteLockTest¢Change Return Type Cache<?,?> to Cache<K,V> in method private getCache(index int, name String) : Cache<K,V> in class org.infinispan.test.MultipleCacheManagersTest Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyNotAvailableForWrite(key Object) : void in class org.infinispan.partitionhandling.BasePartitionHandlingTest.PartitionˆChange Parameter Type keygen : RecipientGenerator to key : Object in method protected remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.TxDistributionInterceptor÷Change Variable Type c : Cache to c : Cache<Object,Object> in method public assertKeyAvailableForWrite(k Object, newValue Object) : void in class org.infinispan.partitionhandling.BasePartitionHandlingTest.PartitionõChange Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithTx() : void in class org.infinispan.replication.AsyncReplTestùChange Variable Type cache1 : Cache to cache1 : Cache<String,String> in method public testWithNoTx() : void in class org.infinispan.replication.AsyncReplTest«Change Variable Type c : Cache to c : Cache<Object,?> in method protected assertKeyNotAvailableForRead(key Object) : void in class org.infinispan.partitionhandling.BasePartitionHandlingTest.Partition¬Change Parameter Type cache : Cache<Object,Object> to cache : Cache<?,?> in method private channel(cache Cache<?,?>) : Channel in class org.infinispan.partitionhandling.BasePartitionHandlingTestùChange Variable Type cache2 : Cache to cache2 : Cache<String,String> in method public testWithNoTx() : void in class org.infinispan.replication.AsyncReplTestÅChange Parameter Type keygen : RecipientGenerator to key : Object in method protected abstract remoteGetBeforeWrite(ctx InvocationContext, command WriteCommand, key Object) : void in class org.infinispan.interceptors.distribution.BaseDistributionInterceptor2(ce4f6292d6350a2c6b82d995352fdf6d07042c9c