
ØRename Variable references : List<Function> to referrers : Collection<UDAggregate> in method public announceMigration(isLocalOnly boolean) : boolean in class org.apache.cassandra.cql3.statements.DropFunctionStatement
¹Change Variable Type olds : List<Function> to olds : Collection<Function> in method private findFunction() : Function in class org.apache.cassandra.cql3.statements.DropFunctionStatement
œRename Parameter udf : UDAggregate to uda : UDAggregate in method public updateAggregate(uda UDAggregate) : void in class org.apache.cassandra.config.Schema
šRename Parameter udf : UDAggregate to uda : UDAggregate in method public dropAggregate(uda UDAggregate) : void in class org.apache.cassandra.config.Schema
àChange Variable Type functions : List<Function> to functions : Collection<Function> in method private functionResource(functionName String) : FunctionResource in class org.apache.cassandra.cql3.validation.entities.UFAuthTest
ÐChange Variable Type olds : List<Function> to olds : Collection<Function> in method public announceMigration(isLocalOnly boolean) : boolean in class org.apache.cassandra.cql3.statements.DropAggregateStatement
ÁChange Variable Type olds : List<Function> to olds : Collection<Function> in method public validate(state ClientState) : void in class org.apache.cassandra.cql3.statements.DropFunctionStatement
ÝChange Variable Type references : List<Function> to referrers : Collection<UDAggregate> in method public announceMigration(isLocalOnly boolean) : boolean in class org.apache.cassandra.cql3.statements.DropFunctionStatement
™Rename Parameter udf : UDAggregate to uda : UDAggregate in method public addAggregate(uda UDAggregate) : void in class org.apache.cassandra.config.SchemaŸRename Method public addAggregate(udf UDAggregate) : void renamed to public updateAggregate(uda UDAggregate) : void in class org.apache.cassandra.config.SchemaíRename Parameter fun : AbstractFunction to seriazliedAggregates : RowIterator in method private package createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables¦Rename Method public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void renamed to public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriberµRename Method public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void renamed to private package onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriberíChange Variable Type list : ListType<String> to udfs : Collection<UDFunction> in method private package createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTablesµChange Return Type Collection<KSMetaData> to Collection<Function> in method public getFunctions(name FunctionName) : Collection<Function> in class org.apache.cassandra.config.SchemaòChange Parameter Type fun : AbstractFunction to seriazliedAggregates : RowIterator in method private package createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTablesíChange Variable Type strList : List<String> to udas : Collection<UDAggregate> in method private package createKeyspaceFromSchemaPartitions(serializedKeyspace RowIterator, serializedTables RowIterator, serializedTypes RowIterator, serializedFunctions RowIterator, seriazliedAggregates RowIterator) : KSMetaData in class org.apache.cassandra.schema.LegacySchemaTables§Rename Method public updateAggregate(udf UDAggregate) : void renamed to private updateFunctionInternal(fun Function) : void in class org.apache.cassandra.config.Schema›Rename Method public updateFunction(udf UDFunction) : void renamed to public addFunction(udf UDFunction) : void in class org.apache.cassandra.config.Schema»Rename Method public getKeyspaceDefinitions() : Collection<KSMetaData> renamed to public getFunctions(name FunctionName) : Collection<Function> in class org.apache.cassandra.config.Schema£Rename Method public dropAggregate(udf UDAggregate) : void renamed to private dropFunctionInternal(fun Function) : void in class org.apache.cassandra.config.SchemaúRename Parameter aggregateName : String to functionName : String in method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriberüRename Parameter aggregateName : String to functionName : String in method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber‹Move And Rename Method public typeEquals(t1 AbstractType<?>, t2 AbstractType<?>) : boolean from class org.apache.cassandra.cql3.functions.Functions to public typesMatch(t1 AbstractType<?>, t2 AbstractType<?>) : boolean from class org.apache.cassandra.schema.Functions£Move And Rename Method public typeEquals(t1 List<AbstractType<?>>, t2 List<AbstractType<?>>) : boolean from class org.apache.cassandra.cql3.functions.Functions to public typesMatch(t1 List<AbstractType<?>>, t2 List<AbstractType<?>>) : boolean from class org.apache.cassandra.schema.Functions2(35668435090eb47cf8c5e704243510b6cee35a7b