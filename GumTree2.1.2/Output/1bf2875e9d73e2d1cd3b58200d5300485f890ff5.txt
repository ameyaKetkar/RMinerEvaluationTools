
πRename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction
†Change Attribute Type queries : ConcurrentMap<QueryImpl,RuleAgendaItem> to queries : Map<QueryImpl,RuleAgendaItem> in class org.drools.core.common.DefaultAgenda
≥Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.DefaultAgenda
≠Rename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda
ÆRename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.DefaultAgenda
≤Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda
ÇChange Parameter Type b : Object to b : T in method public compare(a T, b T) : int in class org.drools.core.util.NaturalComparator
ΩRename Method public isHighestSalience(nextRule RuleAgendaItem) : boolean renamed to private isHigherSalience(nextRule RuleAgendaItem) : boolean in class org.drools.core.phreak.RuleExecutor
ÆRename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry
ÆRename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda
«Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry
èChange Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void in class org.drools.reteoo.common.ReteAgenda
¥Change Parameter Type task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.InternalAgenda
ØRename Parameter task : Runnable to executable : ExecutableEntry in method public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.InternalAgenda
∞Rename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.InternalAgenda
êChange Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.DefaultAgenda
ÇChange Parameter Type a : Object to a : T in method public compare(a T, b T) : int in class org.drools.core.util.NaturalComparator»Change Parameter Type adding : Item to adding : Activation in method public compare(existing Activation, adding Activation) : int in class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver£Rename Parameter notify : boolean to firing : boolean in method package ExecutionState(firing boolean) in class org.drools.core.common.DefaultAgenda.ExecutionStatevRename Method public notifyHalt() : void renamed to public halt() : void in class org.drools.core.common.DefaultAgendaàRename Method public deactivateIfEmpty() : void renamed to public setFocus() : void in class org.drools.core.common.AgendaGroupQueueImplzRename Method public halt() : void renamed to private immediateHalt() : void in class org.drools.core.common.DefaultAgendaØRename Method public executeIfNotFiring(task Runnable) : boolean renamed to public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.DefaultAgenda©Rename Method public getComponentFactory() : KieComponentFactory renamed to private configureReteComponentFactory() : void in class org.drools.core.RuleBaseConfigurationyChange Attribute Type halt : AtomicBoolean to currentState : ExecutionState in class org.drools.core.common.DefaultAgendaÃChange Parameter Type existing : Item to existing : Activation in method public compare(existing Activation, adding Activation) : int in class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver¿Rename Method public fireUntilHalt(agendaFilter AgendaFilter) : void renamed to private waitAndEnterExecutionState(newState ExecutionState) : void in class org.drools.core.common.DefaultAgendatRename Attribute halt : AtomicBoolean to currentState : ExecutionState in class org.drools.core.common.DefaultAgendaŸMove And Rename Method public clear() : void from class org.drools.core.common.AgendaGroupQueueImpl to public execute(wm InternalWorkingMemory) : void from class org.drools.core.common.AgendaGroupQueueImpl.ClearActionﬂMove And Rename Method public setFocus() : void from class org.drools.core.common.AgendaGroupQueueImpl to public execute(wm InternalWorkingMemory) : void from class org.drools.core.common.AgendaGroupQueueImpl.SetFocusAction≥Rename Method public flushPropagations() : void renamed to public flushPropagationsOnFireUntilHalt(fired boolean) : void in class org.drools.core.impl.StatefulKnowledgeSessionImpläRename Method public halt() : void renamed to public flushPropagations() : void in class org.drools.core.impl.StatefulKnowledgeSessionImpl˚Move And Rename Method public run() : void from class org.drools.core.phreak.SynchronizedPropagationList.addEntry.executed.executeIfNotFiring to public execute() : void from class org.drools.core.phreak.SynchronizedPropagationList.addEntry.executeTask∫Rename Method public flush() : void renamed to public flushOnFireUntilHalt(fired boolean, currentHead PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList…Rename Parameter arg0 : Activation to existing : Activation in method public compare(existing Activation, adding Activation) : int in class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolver«Rename Parameter arg1 : Activation to adding : Activation in method public compare(existing Activation, adding Activation) : int in class org.drools.core.util.BinaryHeapQueueTest.ItemConflictResolverëChange Return Type boolean to void in method public executeTask(executable ExecutableEntry) : void in class org.drools.core.common.InternalAgendaÇChange Attribute Type comparator : Comparator to comparator : Comparator<Activation> in class org.drools.core.util.BinaryHeapQueue2(1bf2875e9d73e2d1cd3b58200d5300485f890ff5