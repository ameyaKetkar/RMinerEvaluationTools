¡Change Parameter Type context : Context to context : ConsumerContext in method private normalSelect(table QueriedTable, whereClause WhereClause, tableRelation TableRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer.VisitorïRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumerôChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.VisitorçRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ESGetConsumerÚChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumerôRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumerôChange Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumer.VisitorüChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.VisitorÿChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor÷Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer.VisitorñChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor’Change Parameter Type context : Context to context : ConsumerContext in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.VisitoréChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor¢Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method private optimizedReduceOnCollectorGroupBy(table QueriedTable, tableRelation TableRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.VisitorïRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ConsumingPlannerÒChange Return Type boolean to PlannedAnalyzedRelation in method public consume(rootRelation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.UpdateConsumer‚Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumer.Visitor…Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer.VisitorŒChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.VisitoràChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumerÚChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumerˆChange Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.VisitorÈChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ConsumerïChange Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer.VisitorúChange Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.VisitorüChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumer.VisitorÝChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer÷Change Parameter Type context : Context to context : ConsumerContext in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor÷Rename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer‚Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumer.VisitorÛRename Parameter insertFromSubQueryAnalyzedStatement : InsertFromSubQueryAnalyzedStatement to statement : InsertFromSubQueryAnalyzedStatement in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.VisitorÖChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryThenFetchConsumerµRename Variable analyzedRelation : PlannedAnalyzedRelation to plannedSubQuery : PlannedAnalyzedRelation in method public visitInsertFromQuery(statement InsertFromSubQueryAnalyzedStatement, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.VisitorôRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumerðRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryThenFetchConsumeröChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method private nonDistributedGroupBy(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer.VisitorâRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ConsumerÍChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ESGetConsumerÛChange Return Type boolean to PlannedAnalyzedRelation in method public consume(rootRelation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.GlobalAggregateConsumerÕChange Return Type boolean to PlannedAnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumerúRename Parameter rootRelation : AnalyzedRelation to relation : AnalyzedRelation in method public consume(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.ReduceOnCollectorGroupByConsumerÑChange Return Type boolean to PlannedAnalyzedRelation in method public consume(rootRelation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.CountConsumerîChange Return Type AnalyzedRelation to PlannedAnalyzedRelation in method public visitQueriedTable(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.DistributedGroupByConsumer.VisitorüChange Parameter Type context : Context to context : ConsumerContext in method private nonDistributedGroupBy(table QueriedTable, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.NonDistributedGroupByConsumer.Visitor‚Change Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.InsertFromSubQueryConsumer.Visitor›Change Return Type AnalyzedRelation to PlannedAnalyzedRelation in method private normalSelect(table QueriedTable, whereClause WhereClause, tableRelation TableRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer.VisitorýChange Parameter Type context : Context to context : ConsumerContext in method protected visitAnalyzedRelation(relation AnalyzedRelation, context ConsumerContext) : PlannedAnalyzedRelation in class io.crate.planner.consumer.QueryAndFetchConsumer.Visitor2(c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9